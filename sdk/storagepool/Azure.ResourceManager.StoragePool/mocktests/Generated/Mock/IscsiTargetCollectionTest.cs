// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.StoragePool;
using Azure.ResourceManager.StoragePool.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.StoragePool.Tests.Mock
{
    /// <summary> Test for IscsiTarget. </summary>
    public partial class IscsiTargetCollectionMockTests : MockTestBase
    {
        public IscsiTargetCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: Create or Update iSCSI Target
            string iscsiTargetName = "myIscsiTarget";
            StoragePool.Models.IscsiTargetCreate iscsiTargetCreatePayload = new StoragePool.Models.IscsiTargetCreate(aclMode: new StoragePool.Models.IscsiTargetAclMode("Dynamic"))
            {
                TargetIqn = "iqn.2005-03.org.iscsi:server1",
            };

            var diskPoolId = StoragePool.DiskPool.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myDiskPool");
            var collection = GetArmClient().GetDiskPool(diskPoolId).GetIscsiTargets();
            await collection.CreateOrUpdateAsync(iscsiTargetName, iscsiTargetCreatePayload);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get iSCSI Target
            string iscsiTargetName = "myIscsiTarget";

            var diskPoolId = StoragePool.DiskPool.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myDiskPool");
            var collection = GetArmClient().GetDiskPool(diskPoolId).GetIscsiTargets();
            await collection.GetAsync(iscsiTargetName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: List Disk Pools by Resource Group

            var diskPoolId = StoragePool.DiskPool.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myDiskPool");
            var collection = GetArmClient().GetDiskPool(diskPoolId).GetIscsiTargets();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Batch.Tests.Mock;
using Azure.ResourceManager.Batch.Tests.Mock.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Batch.Tests.Mock.Tests.Mock
{
    /// <summary> Test for BatchAccount. </summary>
    public partial class BatchAccountMockTests : MockTestBase
    {
        public BatchAccountMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: BatchAccountGet
            var batchAccountId = Batch.Tests.Mock.BatchAccount.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "default-azurebatch-japaneast", "sampleacct");
            var batchAccount = GetArmClient().GetBatchAccount(batchAccountId);

            await batchAccount.GetAsync();
        }

        [RecordedTest]
        public async Task Get2()
        {
            // Example: PrivateBatchAccountGet
            var batchAccountId = Batch.Tests.Mock.BatchAccount.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "default-azurebatch-japaneast", "sampleacct");
            var batchAccount = GetArmClient().GetBatchAccount(batchAccountId);

            await batchAccount.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: BatchAccountDelete
            var batchAccountId = Batch.Tests.Mock.BatchAccount.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "default-azurebatch-japaneast", "sampleacct");
            var batchAccount = GetArmClient().GetBatchAccount(batchAccountId);

            await batchAccount.DeleteAsync(true);
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: BatchAccountUpdate
            var batchAccountId = Batch.Tests.Mock.BatchAccount.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "default-azurebatch-japaneast", "sampleacct");
            var batchAccount = GetArmClient().GetBatchAccount(batchAccountId);
            Batch.Tests.Mock.Models.BatchAccountUpdateParameters parameters = new Batch.Tests.Mock.Models.BatchAccountUpdateParameters()
            {
                AutoStorage = new Batch.Tests.Mock.Models.AutoStorageBaseProperties(storageAccountId: "/subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Storage/storageAccounts/samplestorage"),
            };

            await batchAccount.UpdateAsync(parameters);
        }

        [RecordedTest]
        public async Task SynchronizeAutoStorageKeys()
        {
            // Example: BatchAccountSynchronizeAutoStorageKeys
            var batchAccountId = Batch.Tests.Mock.BatchAccount.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "default-azurebatch-japaneast", "sampleacct");
            var batchAccount = GetArmClient().GetBatchAccount(batchAccountId);

            await batchAccount.SynchronizeAutoStorageKeysAsync();
        }

        [RecordedTest]
        public async Task RegenerateKey()
        {
            // Example: BatchAccountRegenerateKey
            var batchAccountId = Batch.Tests.Mock.BatchAccount.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "default-azurebatch-japaneast", "sampleacct");
            var batchAccount = GetArmClient().GetBatchAccount(batchAccountId);
            Batch.Tests.Mock.Models.BatchAccountRegenerateKeyParameters parameters = new Batch.Tests.Mock.Models.BatchAccountRegenerateKeyParameters(keyName: Batch.Tests.Mock.Models.AccountKeyType.Primary);

            await batchAccount.RegenerateKeyAsync(parameters);
        }

        [RecordedTest]
        public async Task GetKeys()
        {
            // Example: BatchAccountGetKeys
            var batchAccountId = Batch.Tests.Mock.BatchAccount.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "default-azurebatch-japaneast", "sampleacct");
            var batchAccount = GetArmClient().GetBatchAccount(batchAccountId);

            await batchAccount.GetKeysAsync();
        }

        [RecordedTest]
        public async Task GetOutboundNetworkDependenciesEndpoints()
        {
            // Example: ListOutboundNetworkDependencies
            var batchAccountId = Batch.Tests.Mock.BatchAccount.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "default-azurebatch-japaneast", "sampleacct");
            var batchAccount = GetArmClient().GetBatchAccount(batchAccountId);

            await foreach (var _ in batchAccount.GetOutboundNetworkDependenciesEndpointsAsync())
            {
            }
        }
    }
}

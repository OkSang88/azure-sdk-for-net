// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.SecurityInsights.Models
{
    /// <summary> SecurityAlert entity property bag. </summary>
    internal partial class SecurityAlertProperties : EntityCommonProperties
    {
        /// <summary> Initializes a new instance of SecurityAlertProperties. </summary>
        internal SecurityAlertProperties()
        {
            ConfidenceReasons = new ChangeTrackingList<SecurityAlertPropertiesConfidenceReasonsItem>();
            RemediationSteps = new ChangeTrackingList<string>();
            Tactics = new ChangeTrackingList<AttackTactic>();
            ResourceIdentifiers = new ChangeTrackingList<object>();
        }

        /// <summary> The display name of the alert. </summary>
        public string AlertDisplayName { get; }
        /// <summary> The type name of the alert. </summary>
        public string AlertType { get; }
        /// <summary> Display name of the main entity being reported on. </summary>
        public string CompromisedEntity { get; }
        /// <summary> The confidence level of this alert. </summary>
        public ConfidenceLevel? ConfidenceLevel { get; }
        /// <summary> The confidence reasons. </summary>
        public IReadOnlyList<SecurityAlertPropertiesConfidenceReasonsItem> ConfidenceReasons { get; }
        /// <summary> The confidence score of the alert. </summary>
        public double? ConfidenceScore { get; }
        /// <summary> The confidence score calculation status, i.e. indicating if score calculation is pending for this alert, not applicable or final. </summary>
        public ConfidenceScoreStatus? ConfidenceScoreStatus { get; }
        /// <summary> Alert description. </summary>
        public string Description { get; }
        /// <summary> The impact end time of the alert (the time of the last event contributing to the alert). </summary>
        public DateTimeOffset? EndTimeUtc { get; }
        /// <summary> Holds the alert intent stage(s) mapping for this alert. </summary>
        public KillChainIntent? Intent { get; }
        /// <summary> The identifier of the alert inside the product which generated the alert. </summary>
        public string ProviderAlertId { get; }
        /// <summary> The time the alert was made available for consumption. </summary>
        public DateTimeOffset? ProcessingEndTime { get; }
        /// <summary> The name of a component inside the product which generated the alert. </summary>
        public string ProductComponentName { get; }
        /// <summary> The name of the product which published this alert. </summary>
        public string ProductName { get; }
        /// <summary> The version of the product generating the alert. </summary>
        public string ProductVersion { get; }
        /// <summary> Manual action items to take to remediate the alert. </summary>
        public IReadOnlyList<string> RemediationSteps { get; }
        /// <summary> The severity of the alert. </summary>
        public AlertSeverity? Severity { get; }
        /// <summary> The impact start time of the alert (the time of the first event contributing to the alert). </summary>
        public DateTimeOffset? StartTimeUtc { get; }
        /// <summary> The lifecycle status of the alert. </summary>
        public AlertStatus? Status { get; }
        /// <summary> Holds the product identifier of the alert for the product. </summary>
        public string SystemAlertId { get; }
        /// <summary> The tactics of the alert. </summary>
        public IReadOnlyList<AttackTactic> Tactics { get; }
        /// <summary> The time the alert was generated. </summary>
        public DateTimeOffset? TimeGenerated { get; }
        /// <summary> The name of the vendor that raise the alert. </summary>
        public string VendorName { get; }
        /// <summary> The uri link of the alert. </summary>
        public string AlertLink { get; }
        /// <summary> The list of resource identifiers of the alert. </summary>
        public IReadOnlyList<object> ResourceIdentifiers { get; }
    }
}

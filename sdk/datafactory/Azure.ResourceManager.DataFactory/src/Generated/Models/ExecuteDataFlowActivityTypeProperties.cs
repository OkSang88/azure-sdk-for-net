// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.DataFactory.Models
{
    /// <summary> Execute data flow activity properties. </summary>
    internal partial class ExecuteDataFlowActivityTypeProperties
    {
        /// <summary> Initializes a new instance of ExecuteDataFlowActivityTypeProperties. </summary>
        /// <param name="dataFlow"> Data flow reference. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="dataFlow"/> is null. </exception>
        internal ExecuteDataFlowActivityTypeProperties(DataFlowReference dataFlow)
        {
            if (dataFlow == null)
            {
                throw new ArgumentNullException(nameof(dataFlow));
            }

            DataFlow = dataFlow;
        }

        /// <summary> Data flow reference. </summary>
        public DataFlowReference DataFlow { get; }
        /// <summary> Staging info for execute data flow activity. </summary>
        public DataFlowStagingInfo Staging { get; }
        /// <summary> The integration runtime reference. </summary>
        public IntegrationRuntimeReference IntegrationRuntime { get; }
        /// <summary> Compute properties for data flow activity. </summary>
        public ExecuteDataFlowActivityTypePropertiesCompute Compute { get; }
        /// <summary> Trace level setting used for data flow monitoring output. Supported values are: &apos;coarse&apos;, &apos;fine&apos;, and &apos;none&apos;. Type: string (or Expression with resultType string). </summary>
        public object TraceLevel { get; }
        /// <summary> Continue on error setting used for data flow execution. Enables processing to continue if a sink fails. Type: boolean (or Expression with resultType boolean). </summary>
        public object ContinueOnError { get; }
        /// <summary> Concurrent run setting used for data flow execution. Allows sinks with the same save order to be processed concurrently. Type: boolean (or Expression with resultType boolean). </summary>
        public object RunConcurrently { get; }
    }
}

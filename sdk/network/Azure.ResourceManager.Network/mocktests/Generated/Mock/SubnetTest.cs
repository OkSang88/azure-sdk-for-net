// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.Network.Models;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Network.Tests.Mock
{
    /// <summary> Test for Subnet. </summary>
    public partial class SubnetMockTests : MockTestBase
    {
        public SubnetMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get subnet
            var subnet = GetArmClient().GetSubnet(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/subnet-test/providers/Microsoft.Network/virtualNetworks/vnetname/subnets/subnet1"));
            string expand = null;

            await subnet.GetAsync(expand);
        }

        [RecordedTest]
        public async Task GetAsync2()
        {
            // Example: Get subnet with a delegation
            var subnet = GetArmClient().GetSubnet(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/subnet-test/providers/Microsoft.Network/virtualNetworks/vnetname/subnets/subnet1"));
            string expand = null;

            await subnet.GetAsync(expand);
        }

        [RecordedTest]
        public async Task DeleteAsync()
        {
            // Example: Delete subnet
            var subnet = GetArmClient().GetSubnet(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/subnet-test/providers/Microsoft.Network/virtualNetworks/vnetname/subnets/subnet1"));

            await subnet.DeleteAsync();
        }

        [RecordedTest]
        public async Task PrepareNetworkPoliciesAsync()
        {
            // Example: Prepare Network Policies
            var subnet = GetArmClient().GetSubnet(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/subnet1"));
            Network.Models.PrepareNetworkPoliciesRequest prepareNetworkPoliciesRequestParameters = new Network.Models.PrepareNetworkPoliciesRequest()
            {
                ServiceName = "Microsoft.Sql/managedInstances",
            };

            await subnet.PrepareNetworkPoliciesAsync(prepareNetworkPoliciesRequestParameters);
        }

        [RecordedTest]
        public async Task UnprepareNetworkPoliciesAsync()
        {
            // Example: Unprepare Network Policies
            var subnet = GetArmClient().GetSubnet(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/subnet1"));
            Network.Models.UnprepareNetworkPoliciesRequest unprepareNetworkPoliciesRequestParameters = new Network.Models.UnprepareNetworkPoliciesRequest()
            {
                ServiceName = "Microsoft.Sql/managedInstances",
            };

            await subnet.UnprepareNetworkPoliciesAsync(unprepareNetworkPoliciesRequestParameters);
        }

        [RecordedTest]
        public async Task GetResourceNavigationLinksAsync()
        {
            // Example: Get Resource Navigation Links
            var subnet = GetArmClient().GetSubnet(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnet/subnets/subnet"));

            await subnet.GetResourceNavigationLinksAsync();
        }

        [RecordedTest]
        public async Task GetServiceAssociationLinksAsync()
        {
            // Example: Get Service Association Links
            var subnet = GetArmClient().GetSubnet(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnet/subnets/subnet"));

            await subnet.GetServiceAssociationLinksAsync();
        }
    }
}

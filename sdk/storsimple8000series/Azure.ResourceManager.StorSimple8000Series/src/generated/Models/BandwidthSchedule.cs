// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace StorSimple8000SeriesManagementClient.Models
{
    /// <summary> The schedule for bandwidth setting. </summary>
    public partial class BandwidthSchedule
    {
        /// <summary> Initializes a new instance of BandwidthSchedule. </summary>
        /// <param name="start"> The start time of the schedule. </param>
        /// <param name="stop"> The stop time of the schedule. </param>
        /// <param name="rateInMbps"> The rate in Mbps. </param>
        /// <param name="days"> The days of the week when this schedule is applicable. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="start"/>, <paramref name="stop"/>, or <paramref name="days"/> is null. </exception>
        public BandwidthSchedule(Time start, Time stop, int rateInMbps, IEnumerable<DayOfWeek> days)
        {
            if (start == null)
            {
                throw new ArgumentNullException(nameof(start));
            }
            if (stop == null)
            {
                throw new ArgumentNullException(nameof(stop));
            }
            if (days == null)
            {
                throw new ArgumentNullException(nameof(days));
            }

            Start = start;
            Stop = stop;
            RateInMbps = rateInMbps;
            Days = days.ToList();
        }

        /// <summary> Initializes a new instance of BandwidthSchedule. </summary>
        /// <param name="start"> The start time of the schedule. </param>
        /// <param name="stop"> The stop time of the schedule. </param>
        /// <param name="rateInMbps"> The rate in Mbps. </param>
        /// <param name="days"> The days of the week when this schedule is applicable. </param>
        internal BandwidthSchedule(Time start, Time stop, int rateInMbps, IList<DayOfWeek> days)
        {
            Start = start;
            Stop = stop;
            RateInMbps = rateInMbps;
            Days = days;
        }

        /// <summary> The start time of the schedule. </summary>
        public Time Start { get; set; }
        /// <summary> The stop time of the schedule. </summary>
        public Time Stop { get; set; }
        /// <summary> The rate in Mbps. </summary>
        public int RateInMbps { get; set; }
        /// <summary> The days of the week when this schedule is applicable. </summary>
        public IList<DayOfWeek> Days { get; }
    }
}

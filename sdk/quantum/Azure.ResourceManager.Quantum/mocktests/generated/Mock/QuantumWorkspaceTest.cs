// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;
using AzureQuantumManagementClient;
using AzureQuantumManagementClient.Models;

namespace AzureQuantumManagementClient.Tests.Mock
{
    /// <summary> Test for QuantumWorkspace. </summary>
    public partial class QuantumWorkspaceMockTests : MockTestBase
    {
        public QuantumWorkspaceMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: QuantumWorkspacesGet
            var quantumWorkspaceId = AzureQuantumManagementClient.QuantumWorkspace.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "quantumResourcegroup", "quantumworkspace1");
            var quantumWorkspace = GetArmClient().GetQuantumWorkspace(quantumWorkspaceId);

            await quantumWorkspace.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: QuantumWorkspacesDelete
            var quantumWorkspaceId = AzureQuantumManagementClient.QuantumWorkspace.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "quantumResourcegroup", "quantumworkspace1");
            var quantumWorkspace = GetArmClient().GetQuantumWorkspace(quantumWorkspaceId);

            await quantumWorkspace.DeleteAsync(true);
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: QuantumWorkspacesPatchTags
            var quantumWorkspaceId = AzureQuantumManagementClient.QuantumWorkspace.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "quantumResourcegroup", "quantumworkspace1");
            var quantumWorkspace = GetArmClient().GetQuantumWorkspace(quantumWorkspaceId);
            AzureQuantumManagementClient.Models.TagsObject workspaceTags = new AzureQuantumManagementClient.Models.TagsObject();

            await quantumWorkspace.UpdateAsync(workspaceTags);
        }
    }
}

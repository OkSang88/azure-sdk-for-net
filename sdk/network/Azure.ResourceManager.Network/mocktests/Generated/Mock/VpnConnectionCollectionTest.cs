// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Network;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Network.Tests.Mock
{
    /// <summary> Test for VpnConnection. </summary>
    public partial class VpnConnectionCollectionMockTests : MockTestBase
    {
        public VpnConnectionCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: VpnConnectionPut
            string connectionName = "vpnConnection1";
            Network.VpnConnectionData vpnConnectionParameters = new Network.VpnConnectionData()
            {
                RemoteVpnSite = new WritableSubResource()
                {
                    Id = new ResourceIdentifier($"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1"),
                },
            };

            var vpnGatewayId = Network.VpnGateway.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "gateway1");
            var collection = GetArmClient().GetVpnGateway(vpnGatewayId).GetVpnConnections();
            await collection.CreateOrUpdateAsync(true, connectionName, vpnConnectionParameters);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: VpnConnectionGet
            string connectionName = "vpnConnection1";

            var vpnGatewayId = Network.VpnGateway.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "gateway1");
            var collection = GetArmClient().GetVpnGateway(vpnGatewayId).GetVpnConnections();
            await collection.GetAsync(connectionName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: VpnConnectionList

            var vpnGatewayId = Network.VpnGateway.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "gateway1");
            var collection = GetArmClient().GetVpnGateway(vpnGatewayId).GetVpnConnections();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

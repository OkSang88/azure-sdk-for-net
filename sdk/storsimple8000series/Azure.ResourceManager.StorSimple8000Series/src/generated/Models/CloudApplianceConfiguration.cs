// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace StorSimple8000SeriesManagementClient.Models
{
    /// <summary> The cloud appliance configuration. </summary>
    public partial class CloudApplianceConfiguration : BaseModel
    {
        /// <summary> Initializes a new instance of CloudApplianceConfiguration. </summary>
        /// <param name="modelNumber"> The model number. </param>
        /// <param name="cloudPlatform"> The cloud platform. </param>
        /// <param name="acsConfiguration"> The ACS configuration. </param>
        /// <param name="supportedStorageAccountTypes"> The supported storage account types. </param>
        /// <param name="supportedRegions"> The supported regions. </param>
        /// <param name="supportedVmTypes"> The supported virtual machine types. </param>
        /// <param name="supportedVmImages"> The supported virtual machine images. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="modelNumber"/>, <paramref name="cloudPlatform"/>, <paramref name="acsConfiguration"/>, <paramref name="supportedStorageAccountTypes"/>, <paramref name="supportedRegions"/>, <paramref name="supportedVmTypes"/>, or <paramref name="supportedVmImages"/> is null. </exception>
        public CloudApplianceConfiguration(string modelNumber, string cloudPlatform, AcsConfiguration acsConfiguration, IEnumerable<string> supportedStorageAccountTypes, IEnumerable<string> supportedRegions, IEnumerable<string> supportedVmTypes, IEnumerable<VmImage> supportedVmImages)
        {
            if (modelNumber == null)
            {
                throw new ArgumentNullException(nameof(modelNumber));
            }
            if (cloudPlatform == null)
            {
                throw new ArgumentNullException(nameof(cloudPlatform));
            }
            if (acsConfiguration == null)
            {
                throw new ArgumentNullException(nameof(acsConfiguration));
            }
            if (supportedStorageAccountTypes == null)
            {
                throw new ArgumentNullException(nameof(supportedStorageAccountTypes));
            }
            if (supportedRegions == null)
            {
                throw new ArgumentNullException(nameof(supportedRegions));
            }
            if (supportedVmTypes == null)
            {
                throw new ArgumentNullException(nameof(supportedVmTypes));
            }
            if (supportedVmImages == null)
            {
                throw new ArgumentNullException(nameof(supportedVmImages));
            }

            ModelNumber = modelNumber;
            CloudPlatform = cloudPlatform;
            AcsConfiguration = acsConfiguration;
            SupportedStorageAccountTypes = supportedStorageAccountTypes.ToList();
            SupportedRegions = supportedRegions.ToList();
            SupportedVmTypes = supportedVmTypes.ToList();
            SupportedVmImages = supportedVmImages.ToList();
        }

        /// <summary> Initializes a new instance of CloudApplianceConfiguration. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="type"> The type. </param>
        /// <param name="kind"> The Kind of the object. Currently only Series8000 is supported. </param>
        /// <param name="modelNumber"> The model number. </param>
        /// <param name="cloudPlatform"> The cloud platform. </param>
        /// <param name="acsConfiguration"> The ACS configuration. </param>
        /// <param name="supportedStorageAccountTypes"> The supported storage account types. </param>
        /// <param name="supportedRegions"> The supported regions. </param>
        /// <param name="supportedVmTypes"> The supported virtual machine types. </param>
        /// <param name="supportedVmImages"> The supported virtual machine images. </param>
        internal CloudApplianceConfiguration(ResourceIdentifier id, string name, ResourceType type, string kind, string modelNumber, string cloudPlatform, AcsConfiguration acsConfiguration, IList<string> supportedStorageAccountTypes, IList<string> supportedRegions, IList<string> supportedVmTypes, IList<VmImage> supportedVmImages) : base(id, name, type, kind)
        {
            ModelNumber = modelNumber;
            CloudPlatform = cloudPlatform;
            AcsConfiguration = acsConfiguration;
            SupportedStorageAccountTypes = supportedStorageAccountTypes;
            SupportedRegions = supportedRegions;
            SupportedVmTypes = supportedVmTypes;
            SupportedVmImages = supportedVmImages;
        }

        /// <summary> The model number. </summary>
        public string ModelNumber { get; set; }
        /// <summary> The cloud platform. </summary>
        public string CloudPlatform { get; set; }
        /// <summary> The ACS configuration. </summary>
        public AcsConfiguration AcsConfiguration { get; set; }
        /// <summary> The supported storage account types. </summary>
        public IList<string> SupportedStorageAccountTypes { get; }
        /// <summary> The supported regions. </summary>
        public IList<string> SupportedRegions { get; }
        /// <summary> The supported virtual machine types. </summary>
        public IList<string> SupportedVmTypes { get; }
        /// <summary> The supported virtual machine images. </summary>
        public IList<VmImage> SupportedVmImages { get; }
    }
}

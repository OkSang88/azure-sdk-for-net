// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Storage;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Storage.Tests.Mock
{
    /// <summary> Test for Table. </summary>
    public partial class TableMockTests : MockTestBase
    {
        public TableMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: TableOperationGet
            var tableId = Storage.Table.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "res3376", "sto328", "table6185");
            var table = GetArmClient().GetTable(tableId);

            await table.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: TableOperationDelete
            var tableId = Storage.Table.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "res3376", "sto328", "table6185");
            var table = GetArmClient().GetTable(tableId);

            await table.DeleteAsync(true);
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: TableOperationPatch
            var tableId = Storage.Table.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "res3376", "sto328", "table6185");
            var table = GetArmClient().GetTable(tableId);

            await table.UpdateAsync();
        }
    }
}

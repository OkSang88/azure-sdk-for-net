// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;
using MicrosoftStorageSync;
using MicrosoftStorageSync.Models;

namespace MicrosoftStorageSync.Tests.Mock
{
    /// <summary> Test for RegisteredServer. </summary>
    public partial class RegisteredServerCollectionMockTests : MockTestBase
    {
        public RegisteredServerCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: RegisteredServers_Create
            string serverId = "080d4133-bdb5-40a0-96a0-71a6057bfe9a";
            MicrosoftStorageSync.Models.RegisteredServerCreateParameters parameters = new MicrosoftStorageSync.Models.RegisteredServerCreateParameters()
            {
                ServerCertificate = "MIIDFjCCAf6gAwIBAgIQQS+DS8uhc4VNzUkTw7wbRjANBgkqhkiG9w0BAQ0FADAzMTEwLwYDVQQDEyhhbmt1c2hiLXByb2QzLnJlZG1vbmQuY29ycC5taWNyb3NvZnQuY29tMB4XDTE3MDgwMzE3MDQyNFoXDTE4MDgwNDE3MDQyNFowMzExMC8GA1UEAxMoYW5rdXNoYi1wcm9kMy5yZWRtb25kLmNvcnAubWljcm9zb2Z0LmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALDRvV4gmsIy6jGDPiHsXmvgVP749NNP7DopdlbHaNhjFmYINHl0uWylyaZmgJrROt2mnxN/zEyJtGnqYHlzUr4xvGq/qV5pqgdB9tag/sw9i22gfe9PRZ0FmSOZnXMbLYgLiDFqLtut5gHcOuWMj03YnkfoBEKlFBxWbagvW2yxz/Sxi9OVSJOKCaXra0RpcIHrO/KFl6ho2eE1/7Ykmfa8hZvSdoPd5gHdLiQcMB/pxq+mWp1fI6c8vFZoDu7Atn+NXTzYPKUxKzaisF12TsaKpohUsJpbB3Wocb0F5frn614D2pg14ERB5otjAMWw1m65csQWPI6dP8KIYe0+QPkCAwEAAaMmMCQwIgYDVR0lAQH/BBgwFgYIKwYBBQUHAwIGCisGAQQBgjcKAwwwDQYJKoZIhvcNAQENBQADggEBAA4RhVIBkw34M1RwakJgHvtjsOFxF1tVQA941NtLokx1l2Z8+GFQkcG4xpZSt+UN6wLerdCbnNhtkCErWUDeaT0jxk4g71Ofex7iM04crT4iHJr8mi96/XnhnkTUs+GDk12VgdeeNEczMZz+8Mxw9dJ5NCnYgTwO0SzGlclRsDvjzkLo8rh2ZG6n/jKrEyNXXo+hOqhupij0QbRP2Tvexdfw201kgN1jdZify8XzJ8Oi0bTS0KpJf2pNPOlooK2bjMUei9ANtEdXwwfVZGWvVh6tJjdv6k14wWWJ1L7zhA1IIVb1J+sQUzJji5iX0DrezjTz1Fg+gAzITaA/WsuujlM=",
                AgentVersion = "1.0.277.0",
                ServerOSVersion = "10.0.14393.0",
                ServerRole = "Standalone",
                ServerId = "080d4133-bdb5-40a0-96a0-71a6057bfe9a",
                FriendlyName = "afscv-2304-139",
            };

            var storageSyncServiceId = MicrosoftStorageSync.StorageSyncService.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "SampleResourceGroup_1", "SampleStorageSyncService_1");
            var collection = GetArmClient().GetStorageSyncService(storageSyncServiceId).GetRegisteredServers();
            await collection.CreateOrUpdateAsync(true, serverId, parameters);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: RegisteredServers_Get
            string serverId = "080d4133-bdb5-40a0-96a0-71a6057bfe9a";

            var storageSyncServiceId = MicrosoftStorageSync.StorageSyncService.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "SampleResourceGroup_1", "SampleStorageSyncService_1");
            var collection = GetArmClient().GetStorageSyncService(storageSyncServiceId).GetRegisteredServers();
            await collection.GetAsync(serverId);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: RegisteredServers_ListByStorageSyncService

            var storageSyncServiceId = MicrosoftStorageSync.StorageSyncService.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "SampleResourceGroup_1", "SampleStorageSyncService_1");
            var collection = GetArmClient().GetStorageSyncService(storageSyncServiceId).GetRegisteredServers();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

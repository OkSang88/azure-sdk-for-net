// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.ConfidentialLedger.Tests.Mock;
using Azure.ResourceManager.ConfidentialLedger.Tests.Mock.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.ConfidentialLedger.Tests.Mock.Tests.Mock
{
    /// <summary> Test for ConfidentialLedger. </summary>
    public partial class ConfidentialLedgerMockTests : MockTestBase
    {
        public ConfidentialLedgerMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: ConfidentialLedgerGet
            var confidentialLedgerId = ConfidentialLedger.Tests.Mock.ConfidentialLedger.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "DummyResourceGroupName", "DummyLedgerName");
            var confidentialLedger = GetArmClient().GetConfidentialLedger(confidentialLedgerId);

            await confidentialLedger.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: ConfidentialLedgerDelete
            var confidentialLedgerId = ConfidentialLedger.Tests.Mock.ConfidentialLedger.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "DummyResourceGroupName", "DummyLedgerName");
            var confidentialLedger = GetArmClient().GetConfidentialLedger(confidentialLedgerId);

            await confidentialLedger.DeleteAsync(true);
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: ConfidentialLedgerUpdate
            var confidentialLedgerId = ConfidentialLedger.Tests.Mock.ConfidentialLedger.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "DummyResourceGroupName", "DummyLedgerName");
            var confidentialLedger = GetArmClient().GetConfidentialLedger(confidentialLedgerId);
            ConfidentialLedger.Tests.Mock.ConfidentialLedgerData confidentialLedger2 = new ConfidentialLedger.Tests.Mock.ConfidentialLedgerData()
            {
                Properties = new ConfidentialLedger.Tests.Mock.Models.LedgerProperties(),
                Location = "EastUS",
            };

            await confidentialLedger.UpdateAsync(true, confidentialLedger2);
        }
    }
}

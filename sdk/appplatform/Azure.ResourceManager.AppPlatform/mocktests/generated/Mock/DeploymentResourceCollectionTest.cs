// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using AppPlatformManagementClient;
using AppPlatformManagementClient.Models;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;

namespace AppPlatformManagementClient.Tests.Mock
{
    /// <summary> Test for DeploymentResource. </summary>
    public partial class DeploymentResourceCollectionMockTests : MockTestBase
    {
        public DeploymentResourceCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: Deployments_CreateOrUpdate
            string deploymentName = "mydeployment";
            AppPlatformManagementClient.DeploymentResourceData deploymentResource = new AppPlatformManagementClient.DeploymentResourceData()
            {
                Properties = new AppPlatformManagementClient.Models.DeploymentResourceProperties()
                {
                    Source = new AppPlatformManagementClient.Models.SourceUploadedUserSourceInfo()
                    {
                        ArtifactSelector = "sub-module-1",
                        RelativePath = "resources/a172cedcae47474b615c54d510a5d84a8dea3032e958587430b413538be3f333-2019082605-e3095339-1723-44b7-8b5e-31b1003978bc",
                        Type = "Source",
                        Version = "1.0",
                    },
                    DeploymentSettings = new AppPlatformManagementClient.Models.DeploymentSettings()
                    {
                        ResourceRequests = new AppPlatformManagementClient.Models.ResourceRequests()
                        {
                            Cpu = "1000m",
                            Memory = "3Gi",
                        },
                    },
                },
                Sku = new AppPlatformManagementClient.Models.Sku()
                {
                    Name = "S0",
                    Tier = "Standard",
                    Capacity = 1,
                },
            };

            var appResourceId = AppPlatformManagementClient.AppResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myservice", "myapp");
            var collection = GetArmClient().GetAppResource(appResourceId).GetDeploymentResources();
            await collection.CreateOrUpdateAsync(true, deploymentName, deploymentResource);
        }

        [RecordedTest]
        public async Task CreateOrUpdate2()
        {
            // Example: Deployments_CreateOrUpdate_CustomContainer
            string deploymentName = "mydeployment";
            AppPlatformManagementClient.DeploymentResourceData deploymentResource = new AppPlatformManagementClient.DeploymentResourceData()
            {
                Properties = new AppPlatformManagementClient.Models.DeploymentResourceProperties()
                {
                    Source = new AppPlatformManagementClient.Models.CustomContainerUserSourceInfo()
                    {
                        CustomContainer = new AppPlatformManagementClient.Models.CustomContainer()
                        {
                            Server = "myacr.azurecr.io",
                            ContainerImage = "myContainerImage:v1",
                            ImageRegistryCredential = new AppPlatformManagementClient.Models.ImageRegistryCredential()
                            {
                                Username = "myUsername",
                                Password = "myPassword",
                            },
                        },
                        Type = "Container",
                    },
                    DeploymentSettings = new AppPlatformManagementClient.Models.DeploymentSettings()
                    {
                        ResourceRequests = new AppPlatformManagementClient.Models.ResourceRequests()
                        {
                            Cpu = "1000m",
                            Memory = "3Gi",
                        },
                    },
                },
            };

            var appResourceId = AppPlatformManagementClient.AppResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myservice", "myapp");
            var collection = GetArmClient().GetAppResource(appResourceId).GetDeploymentResources();
            await collection.CreateOrUpdateAsync(true, deploymentName, deploymentResource);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Deployments_Get
            string deploymentName = "mydeployment";

            var appResourceId = AppPlatformManagementClient.AppResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myservice", "myapp");
            var collection = GetArmClient().GetAppResource(appResourceId).GetDeploymentResources();
            await collection.GetAsync(deploymentName);
        }

        [RecordedTest]
        public async Task Get2()
        {
            // Example: Deployments_Get_CustomContainer
            string deploymentName = "mydeployment";

            var appResourceId = AppPlatformManagementClient.AppResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myservice", "myapp");
            var collection = GetArmClient().GetAppResource(appResourceId).GetDeploymentResources();
            await collection.GetAsync(deploymentName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: Deployments_List
            IEnumerable<string> version = null;

            var appResourceId = AppPlatformManagementClient.AppResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myservice", "myapp");
            var collection = GetArmClient().GetAppResource(appResourceId).GetDeploymentResources();
            await foreach (var _ in collection.GetAllAsync(version))
            {
            }
        }
    }
}

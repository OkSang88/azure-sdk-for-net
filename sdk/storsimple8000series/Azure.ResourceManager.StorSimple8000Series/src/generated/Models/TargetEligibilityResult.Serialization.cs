// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace StorSimple8000SeriesManagementClient.Models
{
    public partial class TargetEligibilityResult
    {
        internal static TargetEligibilityResult DeserializeTargetEligibilityResult(JsonElement element)
        {
            Optional<TargetEligibilityStatus> eligibilityStatus = default;
            Optional<IReadOnlyList<TargetEligibilityErrorMessage>> messages = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("eligibilityStatus"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    eligibilityStatus = property.Value.GetString().ToTargetEligibilityStatus();
                    continue;
                }
                if (property.NameEquals("messages"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<TargetEligibilityErrorMessage> array = new List<TargetEligibilityErrorMessage>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(TargetEligibilityErrorMessage.DeserializeTargetEligibilityErrorMessage(item));
                    }
                    messages = array;
                    continue;
                }
            }
            return new TargetEligibilityResult(Optional.ToNullable(eligibilityStatus), Optional.ToList(messages));
        }
    }
}

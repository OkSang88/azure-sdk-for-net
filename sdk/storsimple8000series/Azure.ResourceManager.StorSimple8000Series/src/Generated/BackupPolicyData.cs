// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;
using Azure.ResourceManager.StorSimple8000Series.Models;

namespace Azure.ResourceManager.StorSimple8000Series
{
    /// <summary> A class representing the BackupPolicy data model. </summary>
    public partial class BackupPolicyData : BaseModel
    {
        /// <summary> Initializes a new instance of BackupPolicyData. </summary>
        /// <param name="volumeIds"> The path IDs of the volumes which are part of the backup policy. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="volumeIds"/> is null. </exception>
        public BackupPolicyData(IEnumerable<string> volumeIds)
        {
            if (volumeIds == null)
            {
                throw new ArgumentNullException(nameof(volumeIds));
            }

            VolumeIds = volumeIds.ToList();
        }

        /// <summary> Initializes a new instance of BackupPolicyData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="type"> The type. </param>
        /// <param name="kind"> The Kind of the object. Currently only Series8000 is supported. </param>
        /// <param name="volumeIds"> The path IDs of the volumes which are part of the backup policy. </param>
        /// <param name="nextBackupTime"> The time of the next backup for the backup policy. </param>
        /// <param name="lastBackupTime"> The time of the last backup for the backup policy. </param>
        /// <param name="schedulesCount"> The count of schedules the backup policy contains. </param>
        /// <param name="scheduledBackupStatus"> Indicates whether at least one of the schedules in the backup policy is active or not. </param>
        /// <param name="backupPolicyCreationType"> The backup policy creation type. Indicates whether this was created through SaaS or through StorSimple Snapshot Manager. </param>
        /// <param name="ssmHostName"> If the backup policy was created by StorSimple Snapshot Manager, then this field indicates the hostname of the StorSimple Snapshot Manager. </param>
        internal BackupPolicyData(ResourceIdentifier id, string name, ResourceType type, string kind, IList<string> volumeIds, DateTimeOffset? nextBackupTime, DateTimeOffset? lastBackupTime, long? schedulesCount, ScheduledBackupStatus? scheduledBackupStatus, BackupPolicyCreationType? backupPolicyCreationType, string ssmHostName) : base(id, name, type, kind)
        {
            VolumeIds = volumeIds;
            NextBackupTime = nextBackupTime;
            LastBackupTime = lastBackupTime;
            SchedulesCount = schedulesCount;
            ScheduledBackupStatus = scheduledBackupStatus;
            BackupPolicyCreationType = backupPolicyCreationType;
            SsmHostName = ssmHostName;
        }

        /// <summary> The path IDs of the volumes which are part of the backup policy. </summary>
        public IList<string> VolumeIds { get; }
        /// <summary> The time of the next backup for the backup policy. </summary>
        public DateTimeOffset? NextBackupTime { get; }
        /// <summary> The time of the last backup for the backup policy. </summary>
        public DateTimeOffset? LastBackupTime { get; }
        /// <summary> The count of schedules the backup policy contains. </summary>
        public long? SchedulesCount { get; }
        /// <summary> Indicates whether at least one of the schedules in the backup policy is active or not. </summary>
        public ScheduledBackupStatus? ScheduledBackupStatus { get; }
        /// <summary> The backup policy creation type. Indicates whether this was created through SaaS or through StorSimple Snapshot Manager. </summary>
        public BackupPolicyCreationType? BackupPolicyCreationType { get; }
        /// <summary> If the backup policy was created by StorSimple Snapshot Manager, then this field indicates the hostname of the StorSimple Snapshot Manager. </summary>
        public string SsmHostName { get; }
    }
}

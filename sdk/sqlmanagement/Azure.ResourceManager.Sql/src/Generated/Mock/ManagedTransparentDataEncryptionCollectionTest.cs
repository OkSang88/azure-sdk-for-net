// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.Sql;
using Azure.ResourceManager.Sql.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Sql.Tests.Mock
{
    /// <summary> Test for ManagedTransparentDataEncryption. </summary>
    public partial class ManagedTransparentDataEncryptionCollectionMockTests : MockTestBase
    {
        public ManagedTransparentDataEncryptionCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync()
        {
            // Example: Update a database's Transparent Data Encryption state with minimal parameters
            var collection = GetArmClient().GetManagedDatabase(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/securitytde-42-rg/providers/Microsoft.Sql/managedInstances/securitytde-42/databases/testdb")).GetManagedTransparentDataEncryptions();
            Sql.Models.TransparentDataEncryptionName tdeName = new Sql.Models.TransparentDataEncryptionName("current");
            Sql.ManagedTransparentDataEncryptionData parameters = new Sql.ManagedTransparentDataEncryptionData()
            {
                State = Sql.Models.TransparentDataEncryptionState.Enabled,
            };

            await collection.CreateOrUpdateAsync(tdeName, parameters);
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get a database's transparent data encryption
            var collection = GetArmClient().GetManagedDatabase(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/security-tde-resourcegroup/providers/Microsoft.Sql/managedInstances/securitytde/databases/testdb")).GetManagedTransparentDataEncryptions();
            Sql.Models.TransparentDataEncryptionName tdeName = new Sql.Models.TransparentDataEncryptionName("current");

            await collection.GetAsync(tdeName);
        }

        [RecordedTest]
        public void GetAllAsync()
        {
            // Example: Get a list of the database's transparent data encryptions
            var collection = GetArmClient().GetManagedDatabase(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/security-tde-resourcegroup/providers/Microsoft.Sql/managedInstances/securitytde/databases/testdb")).GetManagedTransparentDataEncryptions();

            collection.GetAllAsync();
        }
    }
}

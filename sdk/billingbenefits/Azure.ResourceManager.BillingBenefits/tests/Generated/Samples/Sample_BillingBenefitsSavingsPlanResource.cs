// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.BillingBenefits;
using Azure.ResourceManager.BillingBenefits.Models;

namespace Azure.ResourceManager.BillingBenefits.Samples
{
    public partial class Sample_BillingBenefitsSavingsPlanResource
    {
        // SavingsPlansList
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetBillingBenefitsSavingsPlans_SavingsPlansList()
        {
            // Generated from example definition: specification/billingbenefits/resource-manager/Microsoft.BillingBenefits/stable/2022-11-01/examples/SavingsPlansList.json
            // this example is just showing the usage of "SavingsPlan_ListAll" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this TenantResource created on azure
            // for more information of creating TenantResource, please refer to the document of TenantResource
            var tenantResource = client.GetTenants().GetAllAsync().GetAsyncEnumerator().Current;

            // invoke the operation and iterate over the result
            string filter = "(properties%2farchived+eq+false)";
            string orderBy = "properties/displayName asc";
            float? skipToken = 50;
            float? take = 1;
            await foreach (BillingBenefitsSavingsPlanResource item in tenantResource.GetBillingBenefitsSavingsPlansAsync(filter: filter, orderBy: orderBy, skipToken: skipToken, take: take))
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                BillingBenefitsSavingsPlanData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine($"Succeeded");
        }

        // SavingsPlanItemGet
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_SavingsPlanItemGet()
        {
            // Generated from example definition: specification/billingbenefits/resource-manager/Microsoft.BillingBenefits/stable/2022-11-01/examples/SavingsPlanItemGet.json
            // this example is just showing the usage of "SavingsPlan_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this BillingBenefitsSavingsPlanResource created on azure
            // for more information of creating BillingBenefitsSavingsPlanResource, please refer to the document of BillingBenefitsSavingsPlanResource
            string savingsPlanOrderId = "20000000-0000-0000-0000-000000000000";
            string savingsPlanId = "30000000-0000-0000-0000-000000000000";
            ResourceIdentifier billingBenefitsSavingsPlanResourceId = BillingBenefitsSavingsPlanResource.CreateResourceIdentifier(savingsPlanOrderId, savingsPlanId);
            BillingBenefitsSavingsPlanResource billingBenefitsSavingsPlan = client.GetBillingBenefitsSavingsPlanResource(billingBenefitsSavingsPlanResourceId);

            // invoke the operation
            BillingBenefitsSavingsPlanResource result = await billingBenefitsSavingsPlan.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            BillingBenefitsSavingsPlanData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // SavingsPlanItemWithExpandedRenewPropertiesGet
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_SavingsPlanItemWithExpandedRenewPropertiesGet()
        {
            // Generated from example definition: specification/billingbenefits/resource-manager/Microsoft.BillingBenefits/stable/2022-11-01/examples/SavingsPlanItemExpandedGet.json
            // this example is just showing the usage of "SavingsPlan_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this BillingBenefitsSavingsPlanResource created on azure
            // for more information of creating BillingBenefitsSavingsPlanResource, please refer to the document of BillingBenefitsSavingsPlanResource
            string savingsPlanOrderId = "20000000-0000-0000-0000-000000000000";
            string savingsPlanId = "30000000-0000-0000-0000-000000000000";
            ResourceIdentifier billingBenefitsSavingsPlanResourceId = BillingBenefitsSavingsPlanResource.CreateResourceIdentifier(savingsPlanOrderId, savingsPlanId);
            BillingBenefitsSavingsPlanResource billingBenefitsSavingsPlan = client.GetBillingBenefitsSavingsPlanResource(billingBenefitsSavingsPlanResourceId);

            // invoke the operation
            string expand = "renewProperties";
            BillingBenefitsSavingsPlanResource result = await billingBenefitsSavingsPlan.GetAsync(expand: expand);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            BillingBenefitsSavingsPlanData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // SavingsPlanUpdate
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_SavingsPlanUpdate()
        {
            // Generated from example definition: specification/billingbenefits/resource-manager/Microsoft.BillingBenefits/stable/2022-11-01/examples/SavingsPlanUpdate.json
            // this example is just showing the usage of "SavingsPlan_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this BillingBenefitsSavingsPlanResource created on azure
            // for more information of creating BillingBenefitsSavingsPlanResource, please refer to the document of BillingBenefitsSavingsPlanResource
            string savingsPlanOrderId = "20000000-0000-0000-0000-000000000000";
            string savingsPlanId = "30000000-0000-0000-0000-000000000000";
            ResourceIdentifier billingBenefitsSavingsPlanResourceId = BillingBenefitsSavingsPlanResource.CreateResourceIdentifier(savingsPlanOrderId, savingsPlanId);
            BillingBenefitsSavingsPlanResource billingBenefitsSavingsPlan = client.GetBillingBenefitsSavingsPlanResource(billingBenefitsSavingsPlanResourceId);

            // invoke the operation
            BillingBenefitsSavingsPlanPatch patch = new BillingBenefitsSavingsPlanPatch()
            {
                Properties = new BillingBenefitsSavingsPlanPatchProperties()
                {
                    DisplayName = "TestDisplayName",
                    AppliedScopeType = BillingBenefitsAppliedScopeType.Single,
                    AppliedScopeProperties = new BillingBenefitsAppliedScopeProperties()
                    {
                        ResourceGroupId = new ResourceIdentifier("/subscriptions/10000000-0000-0000-0000-000000000000/resourceGroups/testrg"),
                    },
                    IsRenewed = true,
                    RenewPurchaseProperties = new BillingBenefitsPurchaseContent()
                    {
                        SkuName = "Compute_Savings_Plan",
                        DisplayName = "TestDisplayName_renewed",
                        BillingScopeId = new ResourceIdentifier("/subscriptions/10000000-0000-0000-0000-000000000000"),
                        Term = BillingBenefitsTerm.P1Y,
                        BillingPlan = BillingBenefitsBillingPlan.P1M,
                        AppliedScopeType = BillingBenefitsAppliedScopeType.Single,
                        Commitment = new BillingBenefitsCommitment()
                        {
                            Grain = BillingBenefitsCommitmentGrain.Hourly,
                            CurrencyCode = "USD",
                            Amount = 15.23,
                        },
                        IsRenewed = false,
                        AppliedScopeProperties = new BillingBenefitsAppliedScopeProperties()
                        {
                            ResourceGroupId = new ResourceIdentifier("/subscriptions/10000000-0000-0000-0000-000000000000/resourceGroups/testrg"),
                        },
                    },
                },
            };
            BillingBenefitsSavingsPlanResource result = await billingBenefitsSavingsPlan.UpdateAsync(patch);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            BillingBenefitsSavingsPlanData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // SavingsPlanValidateUpdate
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task ValidateUpdate_SavingsPlanValidateUpdate()
        {
            // Generated from example definition: specification/billingbenefits/resource-manager/Microsoft.BillingBenefits/stable/2022-11-01/examples/SavingsPlanValidateUpdate.json
            // this example is just showing the usage of "SavingsPlan_ValidateUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this BillingBenefitsSavingsPlanResource created on azure
            // for more information of creating BillingBenefitsSavingsPlanResource, please refer to the document of BillingBenefitsSavingsPlanResource
            string savingsPlanOrderId = "20000000-0000-0000-0000-000000000000";
            string savingsPlanId = "30000000-0000-0000-0000-000000000000";
            ResourceIdentifier billingBenefitsSavingsPlanResourceId = BillingBenefitsSavingsPlanResource.CreateResourceIdentifier(savingsPlanOrderId, savingsPlanId);
            BillingBenefitsSavingsPlanResource billingBenefitsSavingsPlan = client.GetBillingBenefitsSavingsPlanResource(billingBenefitsSavingsPlanResourceId);

            // invoke the operation and iterate over the result
            SavingsPlanUpdateValidateContent content = new SavingsPlanUpdateValidateContent()
            {
                Benefits =
{
new BillingBenefitsSavingsPlanPatchProperties()
{
AppliedScopeType = BillingBenefitsAppliedScopeType.ManagementGroup,
AppliedScopeProperties = new BillingBenefitsAppliedScopeProperties()
{
TenantId = Guid.Parse("30000000-0000-0000-0000-000000000100"),
ManagementGroupId = new ResourceIdentifier("/providers/Microsoft.Management/managementGroups/30000000-0000-0000-0000-000000000100"),
},
},new BillingBenefitsSavingsPlanPatchProperties()
{
AppliedScopeType = BillingBenefitsAppliedScopeType.ManagementGroup,
AppliedScopeProperties = new BillingBenefitsAppliedScopeProperties()
{
TenantId = Guid.Parse("30000000-0000-0000-0000-000000000100"),
ManagementGroupId = new ResourceIdentifier("/providers/Microsoft.Management/managementGroups/MockMG"),
},
}
},
            };
            await foreach (SavingsPlanValidateResult item in billingBenefitsSavingsPlan.ValidateUpdateAsync(content))
            {
                Console.WriteLine($"Succeeded: {item}");
            }

            Console.WriteLine($"Succeeded");
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.CosmosDB;
using Azure.ResourceManager.CosmosDB.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.CosmosDB.Tests.Mock
{
    /// <summary> Test for SqlDatabase. </summary>
    public partial class SqlDatabaseCollectionMockTests : MockTestBase
    {
        public SqlDatabaseCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: CosmosDBSqlDatabaseCreateUpdate
            string databaseName = "databaseName";
            CosmosDB.Models.SqlDatabaseCreateUpdateOptions createUpdateSqlDatabaseParameters = new CosmosDB.Models.SqlDatabaseCreateUpdateOptions(location: "West US", resource: new CosmosDB.Models.SqlDatabaseResource(id: "databaseName"))
            {
                Options = new CosmosDB.Models.CreateUpdateOptions(),
            };
            createUpdateSqlDatabaseParameters.Tags.ReplaceWith(new System.Collections.Generic.Dictionary<string, string>() { });
            var databaseAccountId = CosmosDB.DatabaseAccount.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "ddb1");
            var collection = GetArmClient().GetDatabaseAccount(databaseAccountId).GetSqlDatabases();
            await collection.CreateOrUpdateAsync(databaseName, createUpdateSqlDatabaseParameters);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: CosmosDBSqlDatabaseGet
            string databaseName = "databaseName";

            var databaseAccountId = CosmosDB.DatabaseAccount.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "ddb1");
            var collection = GetArmClient().GetDatabaseAccount(databaseAccountId).GetSqlDatabases();
            await collection.GetAsync(databaseName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: CosmosDBSqlDatabaseList

            var databaseAccountId = CosmosDB.DatabaseAccount.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rgName", "ddb1");
            var collection = GetArmClient().GetDatabaseAccount(databaseAccountId).GetSqlDatabases();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

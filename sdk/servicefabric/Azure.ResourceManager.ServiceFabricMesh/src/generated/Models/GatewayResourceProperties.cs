// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace ServiceFabricMeshManagementClient.Models
{
    /// <summary> This type describes properties of a gateway resource. </summary>
    public partial class GatewayResourceProperties : ProvisionedResourceProperties
    {
        /// <summary> Initializes a new instance of GatewayResourceProperties. </summary>
        /// <param name="sourceNetwork"> Network the gateway should listen on for requests. </param>
        /// <param name="destinationNetwork"> Network that the Application is using. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="sourceNetwork"/> or <paramref name="destinationNetwork"/> is null. </exception>
        public GatewayResourceProperties(NetworkRef sourceNetwork, NetworkRef destinationNetwork)
        {
            if (sourceNetwork == null)
            {
                throw new ArgumentNullException(nameof(sourceNetwork));
            }
            if (destinationNetwork == null)
            {
                throw new ArgumentNullException(nameof(destinationNetwork));
            }

            SourceNetwork = sourceNetwork;
            DestinationNetwork = destinationNetwork;
            Tcp = new ChangeTrackingList<TcpConfig>();
            Http = new ChangeTrackingList<HttpConfig>();
        }

        /// <summary> Initializes a new instance of GatewayResourceProperties. </summary>
        /// <param name="provisioningState"> State of the resource. </param>
        /// <param name="description"> User readable description of the gateway. </param>
        /// <param name="sourceNetwork"> Network the gateway should listen on for requests. </param>
        /// <param name="destinationNetwork"> Network that the Application is using. </param>
        /// <param name="tcp"> Configuration for tcp connectivity for this gateway. </param>
        /// <param name="http"> Configuration for http connectivity for this gateway. </param>
        /// <param name="status"> Status of the resource. </param>
        /// <param name="statusDetails"> Gives additional information about the current status of the gateway. </param>
        /// <param name="ipAddress"> IP address of the gateway. This is populated in the response and is ignored for incoming requests. </param>
        internal GatewayResourceProperties(string provisioningState, string description, NetworkRef sourceNetwork, NetworkRef destinationNetwork, IList<TcpConfig> tcp, IList<HttpConfig> http, ResourceStatus? status, string statusDetails, string ipAddress) : base(provisioningState)
        {
            Description = description;
            SourceNetwork = sourceNetwork;
            DestinationNetwork = destinationNetwork;
            Tcp = tcp;
            Http = http;
            Status = status;
            StatusDetails = statusDetails;
            IpAddress = ipAddress;
        }

        /// <summary> User readable description of the gateway. </summary>
        public string Description { get; set; }
        /// <summary> Network the gateway should listen on for requests. </summary>
        public NetworkRef SourceNetwork { get; set; }
        /// <summary> Network that the Application is using. </summary>
        public NetworkRef DestinationNetwork { get; set; }
        /// <summary> Configuration for tcp connectivity for this gateway. </summary>
        public IList<TcpConfig> Tcp { get; }
        /// <summary> Configuration for http connectivity for this gateway. </summary>
        public IList<HttpConfig> Http { get; }
        /// <summary> Status of the resource. </summary>
        public ResourceStatus? Status { get; }
        /// <summary> Gives additional information about the current status of the gateway. </summary>
        public string StatusDetails { get; }
        /// <summary> IP address of the gateway. This is populated in the response and is ignored for incoming requests. </summary>
        public string IpAddress { get; }
    }
}

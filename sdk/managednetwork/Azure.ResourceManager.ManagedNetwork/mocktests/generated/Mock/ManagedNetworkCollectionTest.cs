// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;
using ManagedNetworkManagementClient;
using ManagedNetworkManagementClient.Models;

namespace ManagedNetworkManagementClient.Tests.Mock
{
    /// <summary> Test for ManagedNetwork. </summary>
    public partial class ManagedNetworkCollectionMockTests : MockTestBase
    {
        public ManagedNetworkCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: ManagedNetworksPut
            string managedNetworkName = "myManagedNetwork";
            ManagedNetworkManagementClient.ManagedNetworkData managedNetwork = new ManagedNetworkManagementClient.ManagedNetworkData(location: "eastus")
            {
                Scope = new ManagedNetworkManagementClient.Models.Scope(),
            };
            managedNetwork.Tags.ReplaceWith(new System.Collections.Generic.Dictionary<string, string>() { });
            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup")).GetManagedNetworks();
            await collection.CreateOrUpdateAsync(true, managedNetworkName, managedNetwork);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: ManagedNetworksGet
            string managedNetworkName = "myManagedNetwork";

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup")).GetManagedNetworks();
            await collection.GetAsync(managedNetworkName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: ManagedNetworksListByResourceGroup
            int? top = null;
            string skiptoken = null;

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup")).GetManagedNetworks();
            await foreach (var _ in collection.GetAllAsync(top, skiptoken))
            {
            }
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.Network;
using Azure.ResourceManager.Network.Models;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Network.Tests.Mock
{
    /// <summary> Test for VirtualHub. </summary>
    public partial class VirtualHubCollectionMockTests : MockTestBase
    {
        public VirtualHubCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync()
        {
            // Example: VirtualHubPut
            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1")).GetVirtualHubs();
            string virtualHubName = "virtualHub2";
            Network.VirtualHubData virtualHubParameters = new Network.VirtualHubData()
            {
                VirtualWan = new WritableSubResource()
                {
                    Id = new ResourceIdentifier($"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Network/virtualWans/virtualWan1"),
                },
                AddressPrefix = "10.168.0.0/24",
                Sku = "Basic",
                Location = "West US",
            };

            await collection.CreateOrUpdateAsync(virtualHubName, virtualHubParameters);
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: VirtualHubGet
            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1")).GetVirtualHubs();
            string virtualHubName = "virtualHub1";

            await collection.GetAsync(virtualHubName);
        }

        [RecordedTest]
        public void GetAllAsync()
        {
            // Example: VirtualHubListByResourceGroup
            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1")).GetVirtualHubs();

            collection.GetAllAsync();
        }
    }
}

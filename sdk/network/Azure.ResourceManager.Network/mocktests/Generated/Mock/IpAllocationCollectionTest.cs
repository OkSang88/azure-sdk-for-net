// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.Network;
using Azure.ResourceManager.Network.Models;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Network.Tests.Mock
{
    /// <summary> Test for IpAllocation. </summary>
    public partial class IpAllocationCollectionMockTests : MockTestBase
    {
        public IpAllocationCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync()
        {
            // Example: Create IpAllocation
            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1")).GetIpAllocations();
            string ipAllocationName = "test-ipallocation";
            Network.IpAllocationData parameters = new Network.IpAllocationData()
            {
                TypePropertiesType = new Network.Models.IpAllocationType("Hypernet"),
                Prefix = "3.2.5.0/24",
                Location = "centraluseuap",
            };

            await collection.CreateOrUpdateAsync(ipAllocationName, parameters);
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get IpAllocation
            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1")).GetIpAllocations();
            string ipAllocationName = "test-ipallocation";
            string expand = null;

            await collection.GetAsync(ipAllocationName, expand);
        }

        [RecordedTest]
        public void GetAllAsync()
        {
            // Example: List IpAllocations in resource group
            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1")).GetIpAllocations();

            collection.GetAllAsync();
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.StorageSync.Tests.Mock;
using Azure.ResourceManager.StorageSync.Tests.Mock.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.StorageSync.Tests.Mock.Tests.Mock
{
    /// <summary> Test for CloudEndpoint. </summary>
    public partial class CloudEndpointMockTests : MockTestBase
    {
        public CloudEndpointMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: CloudEndpoints_Get
            var cloudEndpointId = StorageSync.Tests.Mock.CloudEndpoint.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "SampleResourceGroup_1", "SampleStorageSyncService_1", "SampleSyncGroup_1", "SampleCloudEndpoint_1");
            var cloudEndpoint = GetArmClient().GetCloudEndpoint(cloudEndpointId);

            await cloudEndpoint.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: CloudEndpoints_Delete
            var cloudEndpointId = StorageSync.Tests.Mock.CloudEndpoint.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "SampleResourceGroup_1", "SampleStorageSyncService_1", "SampleSyncGroup_1", "SampleCloudEndpoint_1");
            var cloudEndpoint = GetArmClient().GetCloudEndpoint(cloudEndpointId);

            await cloudEndpoint.DeleteAsync(true);
        }

        [RecordedTest]
        public async Task PreBackup()
        {
            // Example: CloudEndpoints_PreBackup
            var cloudEndpointId = StorageSync.Tests.Mock.CloudEndpoint.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "SampleResourceGroup_1", "SampleStorageSyncService_1", "SampleSyncGroup_1", "SampleCloudEndpoint_1");
            var cloudEndpoint = GetArmClient().GetCloudEndpoint(cloudEndpointId);
            StorageSync.Tests.Mock.Models.BackupRequest parameters = new StorageSync.Tests.Mock.Models.BackupRequest()
            {
                AzureFileShare = "https://sampleserver.file.core.test-cint.azure-test.net/sampleFileShare",
            };

            await cloudEndpoint.PreBackupAsync(true, parameters);
        }

        [RecordedTest]
        public async Task PostBackup()
        {
            // Example: CloudEndpoints_PostBackup
            var cloudEndpointId = StorageSync.Tests.Mock.CloudEndpoint.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "SampleResourceGroup_1", "SampleStorageSyncService_1", "SampleSyncGroup_1", "SampleCloudEndpoint_1");
            var cloudEndpoint = GetArmClient().GetCloudEndpoint(cloudEndpointId);
            StorageSync.Tests.Mock.Models.BackupRequest parameters = new StorageSync.Tests.Mock.Models.BackupRequest()
            {
                AzureFileShare = "https://sampleserver.file.core.test-cint.azure-test.net/sampleFileShare",
            };

            await cloudEndpoint.PostBackupAsync(true, parameters);
        }

        [RecordedTest]
        public async Task PreRestore()
        {
            // Example: CloudEndpoints_PreRestore
            var cloudEndpointId = StorageSync.Tests.Mock.CloudEndpoint.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "SampleResourceGroup_1", "SampleStorageSyncService_1", "SampleSyncGroup_1", "SampleCloudEndpoint_1");
            var cloudEndpoint = GetArmClient().GetCloudEndpoint(cloudEndpointId);
            StorageSync.Tests.Mock.Models.PreRestoreRequest parameters = new StorageSync.Tests.Mock.Models.PreRestoreRequest()
            {
                AzureFileShareUri = "https://hfsazbackupdevintncus2.file.core.test-cint.azure-test.net/sampleFileShare",
            };

            await cloudEndpoint.PreRestoreAsync(true, parameters);
        }

        [RecordedTest]
        public async Task Restoreheartbeat()
        {
            // Example: CloudEndpoints_restoreheartbeat
            var cloudEndpointId = StorageSync.Tests.Mock.CloudEndpoint.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "SampleResourceGroup_1", "SampleStorageSyncService_1", "SampleSyncGroup_1", "SampleCloudEndpoint_1");
            var cloudEndpoint = GetArmClient().GetCloudEndpoint(cloudEndpointId);

            await cloudEndpoint.RestoreheartbeatAsync();
        }

        [RecordedTest]
        public async Task PostRestore()
        {
            // Example: CloudEndpoints_PostRestore
            var cloudEndpointId = StorageSync.Tests.Mock.CloudEndpoint.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "SampleResourceGroup_1", "SampleStorageSyncService_1", "SampleSyncGroup_1", "SampleCloudEndpoint_1");
            var cloudEndpoint = GetArmClient().GetCloudEndpoint(cloudEndpointId);
            StorageSync.Tests.Mock.Models.PostRestoreRequest parameters = new StorageSync.Tests.Mock.Models.PostRestoreRequest()
            {
                AzureFileShareUri = "https://hfsazbackupdevintncus2.file.core.test-cint.azure-test.net/sampleFileShare",
                Status = "Succeeded",
                SourceAzureFileShareUri = "https://hfsazbackupdevintncus2.file.core.test-cint.azure-test.net/sampleFileShare",
            };

            await cloudEndpoint.PostRestoreAsync(true, parameters);
        }

        [RecordedTest]
        public async Task TriggerChangeDetection()
        {
            // Example: CloudEndpoints_TriggerChangeDetection
            var cloudEndpointId = StorageSync.Tests.Mock.CloudEndpoint.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "SampleResourceGroup_1", "SampleStorageSyncService_1", "SampleSyncGroup_1", "SampleCloudEndpoint_1");
            var cloudEndpoint = GetArmClient().GetCloudEndpoint(cloudEndpointId);
            StorageSync.Tests.Mock.Models.TriggerChangeDetectionParameters parameters = new StorageSync.Tests.Mock.Models.TriggerChangeDetectionParameters()
            {
                DirectoryPath = "NewDirectory",
                ChangeDetectionMode = new StorageSync.Tests.Mock.Models.ChangeDetectionMode("Recursive"),
            };

            await cloudEndpoint.TriggerChangeDetectionAsync(true, parameters);
        }
    }
}

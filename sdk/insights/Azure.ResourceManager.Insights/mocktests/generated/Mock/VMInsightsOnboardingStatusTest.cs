// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;
using Insights.Models;

namespace Insights.Tests.Mock
{
    /// <summary> Test for VMInsightsOnboardingStatus. </summary>
    public partial class VMInsightsOnboardingStatusMockTests : MockTestBase
    {
        public VMInsightsOnboardingStatusMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get status for a VM scale set that is actively reporting data
            var vMInsightsOnboardingStatus = GetArmClient().GetVMInsightsOnboardingStatus(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/my-service-cluster/providers/Microsoft.Compute/virtualMachineScaleSets/scale-set-01/providers"));

            await vMInsightsOnboardingStatus.GetAsync();
        }

        [RecordedTest]
        public async Task GetAsync2()
        {
            // Example: Get status for a VM that has not yet reported data
            var vMInsightsOnboardingStatus = GetArmClient().GetVMInsightsOnboardingStatus(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/vm-resource-group/providers/Microsoft.Compute/virtualMachines/ubuntu-vm/providers"));

            await vMInsightsOnboardingStatus.GetAsync();
        }

        [RecordedTest]
        public async Task GetAsync3()
        {
            // Example: Get status for a VM that is actively reporting data
            var vMInsightsOnboardingStatus = GetArmClient().GetVMInsightsOnboardingStatus(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/vm-resource-group/providers/Microsoft.Compute/virtualMachines/ubuntu-vm/providers"));

            await vMInsightsOnboardingStatus.GetAsync();
        }

        [RecordedTest]
        public async Task GetAsync4()
        {
            // Example: Get status for a resource group that has at least one VM that is actively reporting data
            var vMInsightsOnboardingStatus = GetArmClient().GetVMInsightsOnboardingStatus(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resource-group-with-vms/providers"));

            await vMInsightsOnboardingStatus.GetAsync();
        }

        [RecordedTest]
        public async Task GetAsync5()
        {
            // Example: Get status for a subscription that has at least one VM that is actively reporting data
            var vMInsightsOnboardingStatus = GetArmClient().GetVMInsightsOnboardingStatus(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/providers"));

            await vMInsightsOnboardingStatus.GetAsync();
        }
    }
}

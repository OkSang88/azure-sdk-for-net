// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.Sql.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Sql.Tests.Mock
{
    /// <summary> Test for ElasticPool. </summary>
    public partial class ElasticPoolMockTests : MockTestBase
    {
        public ElasticPoolMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get an elastic pool
            var elasticPool = GetArmClient().GetElasticPool(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/sqlcrudtest-2369/providers/Microsoft.Sql/servers/sqlcrudtest-8069/elasticPools/sqlcrudtest-8102"));

            await elasticPool.GetAsync();
        }

        [RecordedTest]
        public async Task DeleteAsync()
        {
            // Example: Delete an elastic pool
            var elasticPool = GetArmClient().GetElasticPool(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/sqlcrudtest-3129/providers/Microsoft.Sql/servers/sqlcrudtest-228/elasticPools/sqlcrudtest-3851"));

            await elasticPool.DeleteAsync();
        }

        [RecordedTest]
        public async Task UpdateAsync()
        {
            // Example: Assigns maintenance configuration to an elastic pool.
            var elasticPool = GetArmClient().GetElasticPool(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/sqlcrudtest-2369/providers/Microsoft.Sql/servers/sqlcrudtest-8069/elasticPools/sqlcrudtest-8102"));
            Sql.Models.ElasticPoolUpdate parameters = new Sql.Models.ElasticPoolUpdate()
            {
                MaintenanceConfigurationId = "/subscriptions/00000000-1111-2222-3333-444444444444/providers/Microsoft.Maintenance/publicMaintenanceConfigurations/SQL_JapanEast_1",
            };

            await elasticPool.UpdateAsync(parameters);
        }

        [RecordedTest]
        public async Task UpdateAsync2()
        {
            // Example: Resets maintenance configuration of an elastic pool to default.
            var elasticPool = GetArmClient().GetElasticPool(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/sqlcrudtest-2369/providers/Microsoft.Sql/servers/sqlcrudtest-8069/elasticPools/sqlcrudtest-8102"));
            Sql.Models.ElasticPoolUpdate parameters = new Sql.Models.ElasticPoolUpdate()
            {
                MaintenanceConfigurationId = "/subscriptions/00000000-1111-2222-3333-444444444444/providers/Microsoft.Maintenance/publicMaintenanceConfigurations/SQL_Default",
            };

            await elasticPool.UpdateAsync(parameters);
        }

        [RecordedTest]
        public async Task UpdateAsync3()
        {
            // Example: Update an elastic pool with all parameter
            var elasticPool = GetArmClient().GetElasticPool(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/sqlcrudtest-2369/providers/Microsoft.Sql/servers/sqlcrudtest-8069/elasticPools/sqlcrudtest-8102"));
            Sql.Models.ElasticPoolUpdate parameters = new Sql.Models.ElasticPoolUpdate()
            {
                Sku = new Sql.Models.Sku(name: "BC_Gen4")
                {
                    Tier = "BusinessCritical",
                    Capacity = 2,
                },
                PerDatabaseSettings = new Sql.Models.ElasticPoolPerDatabaseSettings()
                {
                    MinCapacity = 0.25,
                    MaxCapacity = 1,
                },
                ZoneRedundant = true,
                LicenseType = new Sql.Models.ElasticPoolLicenseType("LicenseIncluded"),
            };

            await elasticPool.UpdateAsync(parameters);
        }

        [RecordedTest]
        public async Task UpdateAsync4()
        {
            // Example: Update an elastic pool with minimum parameters
            var elasticPool = GetArmClient().GetElasticPool(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/sqlcrudtest-2369/providers/Microsoft.Sql/servers/sqlcrudtest-8069/elasticPools/sqlcrudtest-8102"));
            Sql.Models.ElasticPoolUpdate parameters = new Sql.Models.ElasticPoolUpdate();

            await elasticPool.UpdateAsync(parameters);
        }

        [RecordedTest]
        public void GetDatabasesAsync()
        {
            // Example: Gets a list of databases in an elastic pool.
            var elasticPool = GetArmClient().GetElasticPool(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/Default-SQL-SouthEastAsia/providers/Microsoft.Sql/servers/testsvr/elasticPools/pool1"));

            elasticPool.GetDatabasesAsync();
        }

        [RecordedTest]
        public void GetMetricsAsync()
        {
            // Example: List database usage metrics
            var elasticPool = GetArmClient().GetElasticPool(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/sqlcrudtest-6730/providers/Microsoft.Sql/servers/sqlcrudtest-9007/elasticPools/3481"));
            string filter = "name/value eq 'cpu_percent' and timeGrain eq '00:10:00' and startTime eq '2017-06-02T18:35:00Z' and endTime eq '2017-06-02T18:55:00Z'";

            elasticPool.GetMetricsAsync(filter);
        }

        [RecordedTest]
        public void GetMetricDefinitionsAsync()
        {
            // Example: List database usage metrics
            var elasticPool = GetArmClient().GetElasticPool(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/sqlcrudtest-6730/providers/Microsoft.Sql/servers/sqlcrudtest-9007/elasticPools/3481"));

            elasticPool.GetMetricDefinitionsAsync();
        }

        [RecordedTest]
        public async Task FailoverAsync()
        {
            // Example: Failover an elastic pool
            var elasticPool = GetArmClient().GetElasticPool(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Sql/servers/testServer/elasticPools/testElasticPool"));

            await elasticPool.FailoverAsync();
        }

        [RecordedTest]
        public void GetElasticPoolActivitiesAsync()
        {
            // Example: List Elastic pool activity
            var elasticPool = GetArmClient().GetElasticPool(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/sqlcrudtest-4291/providers/Microsoft.Sql/servers/sqlcrudtest-6574/elasticPools/8749"));

            elasticPool.GetElasticPoolActivitiesAsync();
        }

        [RecordedTest]
        public void GetElasticPoolDatabaseActivitiesAsync()
        {
            // Example: List elastic pool database activity
            var elasticPool = GetArmClient().GetElasticPool(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/sqlcrudtest-4673/providers/Microsoft.Sql/servers/sqlcrudtest-603/elasticPools/7537"));

            elasticPool.GetElasticPoolDatabaseActivitiesAsync();
        }

        [RecordedTest]
        public async Task CancelElasticPoolOperationAsync()
        {
            // Example: Cancel the elastic pool management operation
            var elasticPool = GetArmClient().GetElasticPool(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/sqlcrudtest-7398/providers/Microsoft.Sql/servers/sqlcrudtest-6661/elasticPools/testpool"));
            Guid operationId = Guid.Parse("f779414b-e748-4925-8cfe-c8598f7660ae");

            await elasticPool.CancelElasticPoolOperationAsync(operationId);
        }

        [RecordedTest]
        public void GetElasticPoolOperationsAsync()
        {
            // Example: List the elastic pool management operations
            var elasticPool = GetArmClient().GetElasticPool(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/sqlcrudtestgroup/providers/Microsoft.Sql/servers/sqlcrudtestserver/elasticPools/testpool"));

            elasticPool.GetElasticPoolOperationsAsync();
        }
    }
}

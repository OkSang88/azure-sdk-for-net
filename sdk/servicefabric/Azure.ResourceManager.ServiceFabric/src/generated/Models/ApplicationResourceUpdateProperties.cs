// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace ServiceFabricManagementClient.Models
{
    /// <summary> The application resource properties for patch operations. </summary>
    internal partial class ApplicationResourceUpdateProperties
    {
        /// <summary> Initializes a new instance of ApplicationResourceUpdateProperties. </summary>
        internal ApplicationResourceUpdateProperties()
        {
            Parameters = new ChangeTrackingDictionary<string, string>();
            Metrics = new ChangeTrackingList<ApplicationMetricDescription>();
            ManagedIdentities = new ChangeTrackingList<ApplicationUserAssignedIdentity>();
        }

        /// <summary> The version of the application type as defined in the application manifest. </summary>
        public string TypeVersion { get; }
        /// <summary> List of application parameters with overridden values from their default values specified in the application manifest. </summary>
        public IReadOnlyDictionary<string, string> Parameters { get; }
        /// <summary> Describes the policy for a monitored application upgrade. </summary>
        public ApplicationUpgradePolicy UpgradePolicy { get; }
        /// <summary> The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. If this property is set to zero, no capacity will be reserved. The value of this property cannot be more than the value of the MaximumNodes property. </summary>
        public long? MinimumNodes { get; }
        /// <summary> The maximum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. By default, the value of this property is zero and it means that the services can be placed on any node. </summary>
        public long? MaximumNodes { get; }
        /// <summary> Remove the current application capacity settings. </summary>
        public bool? RemoveApplicationCapacity { get; }
        /// <summary> List of application capacity metric description. </summary>
        public IReadOnlyList<ApplicationMetricDescription> Metrics { get; }
        /// <summary> List of user assigned identities for the application, each mapped to a friendly name. </summary>
        public IReadOnlyList<ApplicationUserAssignedIdentity> ManagedIdentities { get; }
    }
}

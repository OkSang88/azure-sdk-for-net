// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Network;
using Azure.ResourceManager.Network.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Network.Tests.Mock
{
    /// <summary> Test for ConnectionMonitor. </summary>
    public partial class ConnectionMonitorMockTests : MockTestBase
    {
        public ConnectionMonitorMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get connection monitor
            var connectionMonitorId = Network.ConnectionMonitor.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "nw1", "cm1");
            var connectionMonitor = GetArmClient().GetConnectionMonitor(connectionMonitorId);

            await connectionMonitor.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: Delete connection monitor
            var connectionMonitorId = Network.ConnectionMonitor.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "nw1", "cm1");
            var connectionMonitor = GetArmClient().GetConnectionMonitor(connectionMonitorId);

            await connectionMonitor.DeleteAsync();
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: Update connection monitor tags
            var connectionMonitorId = Network.ConnectionMonitor.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "nw1", "cm1");
            var connectionMonitor = GetArmClient().GetConnectionMonitor(connectionMonitorId);
            Network.Models.TagsObject parameters = new Network.Models.TagsObject();

            await connectionMonitor.UpdateAsync(parameters);
        }

        [RecordedTest]
        public async Task Stop()
        {
            // Example: Stop connection monitor
            var connectionMonitorId = Network.ConnectionMonitor.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "nw1", "cm1");
            var connectionMonitor = GetArmClient().GetConnectionMonitor(connectionMonitorId);

            await connectionMonitor.StopAsync();
        }

        [RecordedTest]
        public async Task Start()
        {
            // Example: Start connection monitor
            var connectionMonitorId = Network.ConnectionMonitor.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "nw1", "cm1");
            var connectionMonitor = GetArmClient().GetConnectionMonitor(connectionMonitorId);

            await connectionMonitor.StartAsync();
        }

        [RecordedTest]
        public async Task Query()
        {
            // Example: Query connection monitor
            var connectionMonitorId = Network.ConnectionMonitor.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "nw1", "cm1");
            var connectionMonitor = GetArmClient().GetConnectionMonitor(connectionMonitorId);

            await connectionMonitor.QueryAsync();
        }
    }
}

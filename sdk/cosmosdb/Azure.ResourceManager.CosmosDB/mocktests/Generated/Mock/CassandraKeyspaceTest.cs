// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.CosmosDB;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.CosmosDB.Tests.Mock
{
    /// <summary> Test for CassandraKeyspace. </summary>
    public partial class CassandraKeyspaceMockTests : MockTestBase
    {
        public CassandraKeyspaceMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: CosmosDBCassandraKeyspaceGet
            var cassandraKeyspaceId = CosmosDB.CassandraKeyspace.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "ddb1", "keyspaceName");
            var cassandraKeyspace = GetArmClient().GetCassandraKeyspace(cassandraKeyspaceId);

            await cassandraKeyspace.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: CosmosDBCassandraKeyspaceDelete
            var cassandraKeyspaceId = CosmosDB.CassandraKeyspace.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "ddb1", "keyspaceName");
            var cassandraKeyspace = GetArmClient().GetCassandraKeyspace(cassandraKeyspaceId);

            await cassandraKeyspace.DeleteAsync();
        }

        [RecordedTest]
        public async Task DatabaseAccountCassandraKeyspaceThroughputSettingGet()
        {
            // Example: CosmosDBCassandraKeyspaceThroughputGet
            var databaseAccountCassandraKeyspaceThroughputSettingId = CosmosDB.DatabaseAccountCassandraKeyspaceThroughputSetting.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "ddb1", "keyspaceName");
            var databaseAccountCassandraKeyspaceThroughputSetting = GetArmClient().GetDatabaseAccountCassandraKeyspaceThroughputSetting(databaseAccountCassandraKeyspaceThroughputSettingId);

            await databaseAccountCassandraKeyspaceThroughputSetting.GetAsync();
        }

        [RecordedTest]
        public async Task DatabaseAccountCassandraKeyspaceThroughputSettingMigrateCassandraKeyspaceToAutoscale()
        {
            // Example: CosmosDBCassandraKeyspaceMigrateToAutoscale
            var databaseAccountCassandraKeyspaceThroughputSettingId = CosmosDB.DatabaseAccountCassandraKeyspaceThroughputSetting.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "ddb1", "keyspaceName");
            var databaseAccountCassandraKeyspaceThroughputSetting = GetArmClient().GetDatabaseAccountCassandraKeyspaceThroughputSetting(databaseAccountCassandraKeyspaceThroughputSettingId);

            await databaseAccountCassandraKeyspaceThroughputSetting.MigrateCassandraKeyspaceToAutoscaleAsync();
        }

        [RecordedTest]
        public async Task DatabaseAccountCassandraKeyspaceThroughputSettingMigrateCassandraKeyspaceToManualThroughput()
        {
            // Example: CosmosDBCassandraKeyspaceMigrateToManualThroughput
            var databaseAccountCassandraKeyspaceThroughputSettingId = CosmosDB.DatabaseAccountCassandraKeyspaceThroughputSetting.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "ddb1", "keyspaceName");
            var databaseAccountCassandraKeyspaceThroughputSetting = GetArmClient().GetDatabaseAccountCassandraKeyspaceThroughputSetting(databaseAccountCassandraKeyspaceThroughputSettingId);

            await databaseAccountCassandraKeyspaceThroughputSetting.MigrateCassandraKeyspaceToManualThroughputAsync();
        }
    }
}

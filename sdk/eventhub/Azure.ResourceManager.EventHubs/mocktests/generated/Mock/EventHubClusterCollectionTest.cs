// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.EventHubs;
using Azure.ResourceManager.EventHubs.Models;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.EventHubs.Tests.Mock
{
    /// <summary> Test for EventHubCluster. </summary>
    public partial class EventHubClusterCollectionMockTests : MockTestBase
    {
        public EventHubClusterCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync()
        {
            // Example: ClusterPut
            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup")).GetEventHubClusters();
            string clusterName = "testCluster";
            EventHubs.EventHubClusterData parameters = new EventHubs.EventHubClusterData(location: "South Central US")
            {
                Sku = new EventHubs.Models.ClusterSku(name: new EventHubs.Models.ClusterSkuName("Dedicated"))
                {
                    Capacity = 1,
                },
            };
            parameters.Tags.ReplaceWith(new System.Collections.Generic.Dictionary<string, string>() { ["tag1"] = "value1", ["tag2"] = "value2", });
            await collection.CreateOrUpdateAsync(clusterName, parameters);
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: ClusterGet
            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup")).GetEventHubClusters();
            string clusterName = "testCluster";

            await collection.GetAsync(clusterName);
        }

        [RecordedTest]
        public void GetAllAsync()
        {
            // Example: ClustersListByResourceGroup
            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup")).GetEventHubClusters();

            collection.GetAllAsync();
        }
    }
}

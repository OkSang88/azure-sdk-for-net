// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Core.TestFramework;
using Azure.ResourceManager.DeviceUpdate;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.DeviceUpdate.Tests.Mock
{
    /// <summary> Test for DeviceUpdateAccount. </summary>
    public partial class DeviceUpdateAccountCollectionMockTests : MockTestBase
    {
        public DeviceUpdateAccountCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: Creates or updates Account
            string accountName = "contoso";
            DeviceUpdate.DeviceUpdateAccountData account = new DeviceUpdate.DeviceUpdateAccountData(location: "westus2");

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg")).GetDeviceUpdateAccounts();
            await collection.CreateOrUpdateAsync(true, accountName, account);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Gets Account details
            string accountName = "contoso";

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg")).GetDeviceUpdateAccounts();
            await collection.GetAsync(accountName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: Gets list of Accounts

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg")).GetDeviceUpdateAccounts();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

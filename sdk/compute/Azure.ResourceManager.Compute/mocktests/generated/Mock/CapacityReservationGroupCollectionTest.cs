// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Compute;
using Azure.ResourceManager.Compute.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Compute.Tests.Mock
{
    /// <summary> Test for CapacityReservationGroup. </summary>
    public partial class CapacityReservationGroupCollectionMockTests : MockTestBase
    {
        public CapacityReservationGroupCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: Create or update a capacity reservation group.
            string capacityReservationGroupName = "myCapacityReservationGroup";
            Compute.CapacityReservationGroupData parameters = new Compute.CapacityReservationGroupData(location: "westus")
            {
            };
            parameters.Tags.ReplaceWith(new Dictionary<string, string>()
            {
                ["department"] = "finance",
            });

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup")).GetCapacityReservationGroups();
            await collection.CreateOrUpdateAsync(true, capacityReservationGroupName, parameters);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get a capacity reservation Group.
            string capacityReservationGroupName = "myCapacityReservationGroup";
            Compute.Models.CapacityReservationGroupInstanceViewTypes? expand = null;

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup")).GetCapacityReservationGroups();
            await collection.GetAsync(capacityReservationGroupName, expand);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: List capacity reservation groups in resource group.
            Compute.Models.ExpandTypesForGetCapacityReservationGroups? expand = new Compute.Models.ExpandTypesForGetCapacityReservationGroups("virtualMachines/$ref");

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup")).GetCapacityReservationGroups();
            await foreach (var _ in collection.GetAllAsync(expand))
            {
            }
        }
    }
}

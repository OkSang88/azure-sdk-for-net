// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.Cdn.Models;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Cdn.Tests.Mock
{
    /// <summary> Test for CdnEndpoint. </summary>
    public partial class CdnEndpointMockTests : MockTestBase
    {
        public CdnEndpointMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Endpoints_Get
            var cdnEndpoint = GetArmClient().GetCdnEndpoint(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/RG/providers/Microsoft.Cdn/profiles/profile1/endpoints/endpoint1"));

            await cdnEndpoint.GetAsync();
        }

        [RecordedTest]
        public async Task DeleteAsync()
        {
            // Example: Endpoints_Delete
            var cdnEndpoint = GetArmClient().GetCdnEndpoint(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/RG/providers/Microsoft.Cdn/profiles/profile1/endpoints/endpoint1"));

            await cdnEndpoint.DeleteAsync();
        }

        [RecordedTest]
        public async Task UpdateAsync()
        {
            // Example: Endpoints_Update
            var cdnEndpoint = GetArmClient().GetCdnEndpoint(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/RG/providers/Microsoft.Cdn/profiles/profile1/endpoints/endpoint1"));
            Cdn.Models.EndpointUpdateOptions endpointUpdateProperties = new Cdn.Models.EndpointUpdateOptions();

            await cdnEndpoint.UpdateAsync(endpointUpdateProperties);
        }

        [RecordedTest]
        public async Task StartAsync()
        {
            // Example: Endpoints_Start
            var cdnEndpoint = GetArmClient().GetCdnEndpoint(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/RG/providers/Microsoft.Cdn/profiles/profile1/endpoints/endpoint1"));

            await cdnEndpoint.StartAsync();
        }

        [RecordedTest]
        public async Task StopAsync()
        {
            // Example: Endpoints_Stop
            var cdnEndpoint = GetArmClient().GetCdnEndpoint(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/RG/providers/Microsoft.Cdn/profiles/profile1/endpoints/endpoint1"));

            await cdnEndpoint.StopAsync();
        }

        [RecordedTest]
        public async Task PurgeContentAsync()
        {
            // Example: Endpoints_PurgeContent
            var cdnEndpoint = GetArmClient().GetCdnEndpoint(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/RG/providers/Microsoft.Cdn/profiles/profile1/endpoints/endpoint1"));
            Cdn.Models.PurgeOptions contentFilePaths = new Cdn.Models.PurgeOptions(contentPaths: new List<string>()
{
"/folder1",});

            await cdnEndpoint.PurgeContentAsync(contentFilePaths);
        }

        [RecordedTest]
        public async Task LoadContentAsync()
        {
            // Example: Endpoints_LoadContent
            var cdnEndpoint = GetArmClient().GetCdnEndpoint(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/RG/providers/Microsoft.Cdn/profiles/profile1/endpoints/endpoint1"));
            Cdn.Models.LoadOptions contentFilePaths = new Cdn.Models.LoadOptions(contentPaths: new List<string>()
{
"/folder1",});

            await cdnEndpoint.LoadContentAsync(contentFilePaths);
        }

        [RecordedTest]
        public async Task ValidateCustomDomainAsync()
        {
            // Example: Endpoints_ValidateCustomDomain
            var cdnEndpoint = GetArmClient().GetCdnEndpoint(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/RG/providers/Microsoft.Cdn/profiles/profile1/endpoints/endpoint1"));
            Cdn.Models.ValidateCustomDomainInput customDomainProperties = new Cdn.Models.ValidateCustomDomainInput(hostName: "www.someDomain.com");

            await cdnEndpoint.ValidateCustomDomainAsync(customDomainProperties);
        }

        [RecordedTest]
        public void GetResourceUsageAsync()
        {
            // Example: Endpoints_ListResourceUsage
            var cdnEndpoint = GetArmClient().GetCdnEndpoint(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/RG/providers/Microsoft.Cdn/profiles/profile1/endpoints/endpoint1"));

            cdnEndpoint.GetResourceUsageAsync();
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.EventHubs;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.EventHubs.Tests.Mock
{
    /// <summary> Test for EventHub. </summary>
    public partial class EventHubMockTests : MockTestBase
    {
        public EventHubMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: EventHubGet
            var eventHubId = EventHubs.EventHub.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "Default-NotificationHubs-AustraliaEast", "sdk-Namespace-716", "sdk-EventHub-10");
            var eventHub = GetArmClient().GetEventHub(eventHubId);

            await eventHub.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: EventHubDelete
            var eventHubId = EventHubs.EventHub.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ArunMonocle", "sdk-Namespace-5357", "sdk-EventHub-6547");
            var eventHub = GetArmClient().GetEventHub(eventHubId);

            await eventHub.DeleteAsync();
        }
    }
}

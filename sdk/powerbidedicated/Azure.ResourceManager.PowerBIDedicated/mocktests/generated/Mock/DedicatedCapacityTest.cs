// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.PowerBIDedicated.Tests.Mock;
using Azure.ResourceManager.PowerBIDedicated.Tests.Mock.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.PowerBIDedicated.Tests.Mock.Tests.Mock
{
    /// <summary> Test for DedicatedCapacity. </summary>
    public partial class DedicatedCapacityMockTests : MockTestBase
    {
        public DedicatedCapacityMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get details of a capacity
            var dedicatedCapacityId = PowerBIDedicated.Tests.Mock.DedicatedCapacity.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "TestRG", "azsdktest");
            var dedicatedCapacity = GetArmClient().GetDedicatedCapacity(dedicatedCapacityId);

            await dedicatedCapacity.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: Get details of a capacity
            var dedicatedCapacityId = PowerBIDedicated.Tests.Mock.DedicatedCapacity.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "TestRG", "azsdktest");
            var dedicatedCapacity = GetArmClient().GetDedicatedCapacity(dedicatedCapacityId);

            await dedicatedCapacity.DeleteAsync(true);
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: Update capacity parameters
            var dedicatedCapacityId = PowerBIDedicated.Tests.Mock.DedicatedCapacity.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "TestRG", "azsdktest");
            var dedicatedCapacity = GetArmClient().GetDedicatedCapacity(dedicatedCapacityId);
            PowerBIDedicated.Tests.Mock.Models.DedicatedCapacityUpdateParameters capacityUpdateParameters = new PowerBIDedicated.Tests.Mock.Models.DedicatedCapacityUpdateParameters()
            {
                Sku = new PowerBIDedicated.Tests.Mock.Models.CapacitySku(name: "A1")
                {
                    Tier = new PowerBIDedicated.Tests.Mock.Models.CapacitySkuTier("PBIE_Azure"),
                },
                Administration = new PowerBIDedicated.Tests.Mock.Models.DedicatedCapacityAdministrators(),
            };

            await dedicatedCapacity.UpdateAsync(true, capacityUpdateParameters);
        }

        [RecordedTest]
        public async Task Update2()
        {
            // Example: Update capacity to Generation 2
            var dedicatedCapacityId = PowerBIDedicated.Tests.Mock.DedicatedCapacity.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "TestRG", "azsdktest");
            var dedicatedCapacity = GetArmClient().GetDedicatedCapacity(dedicatedCapacityId);
            PowerBIDedicated.Tests.Mock.Models.DedicatedCapacityUpdateParameters capacityUpdateParameters = new PowerBIDedicated.Tests.Mock.Models.DedicatedCapacityUpdateParameters()
            {
                Sku = new PowerBIDedicated.Tests.Mock.Models.CapacitySku(name: "A1")
                {
                    Tier = new PowerBIDedicated.Tests.Mock.Models.CapacitySkuTier("PBIE_Azure"),
                },
                Mode = new PowerBIDedicated.Tests.Mock.Models.Mode("Gen2"),
            };

            await dedicatedCapacity.UpdateAsync(true, capacityUpdateParameters);
        }

        [RecordedTest]
        public async Task Suspend()
        {
            // Example: Suspend capacity
            var dedicatedCapacityId = PowerBIDedicated.Tests.Mock.DedicatedCapacity.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "TestRG", "azsdktest");
            var dedicatedCapacity = GetArmClient().GetDedicatedCapacity(dedicatedCapacityId);

            await dedicatedCapacity.SuspendAsync(true);
        }

        [RecordedTest]
        public async Task Resume()
        {
            // Example: Get details of a capacity
            var dedicatedCapacityId = PowerBIDedicated.Tests.Mock.DedicatedCapacity.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "TestRG", "azsdktest");
            var dedicatedCapacity = GetArmClient().GetDedicatedCapacity(dedicatedCapacityId);

            await dedicatedCapacity.ResumeAsync(true);
        }

        [RecordedTest]
        public async Task GetSkusForCapacity()
        {
            // Example: List eligible SKUs for an existing capacity
            var dedicatedCapacityId = PowerBIDedicated.Tests.Mock.DedicatedCapacity.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "TestRG", "azsdktest");
            var dedicatedCapacity = GetArmClient().GetDedicatedCapacity(dedicatedCapacityId);

            await foreach (var _ in dedicatedCapacity.GetSkusForCapacityAsync())
            {
            }
        }
    }
}

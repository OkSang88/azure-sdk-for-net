// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.Cdn.Models;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Cdn.Tests.Mock
{
    /// <summary> Test for AfdOriginGroup. </summary>
    public partial class AfdOriginGroupMockTests : MockTestBase
    {
        public AfdOriginGroupMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: AFDOriginGroups_Get
            var afdOriginGroup = GetArmClient().GetAfdOriginGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/RG/providers/Microsoft.Cdn/profiles/profile1/originGroups/origingroup1"));

            await afdOriginGroup.GetAsync();
        }

        [RecordedTest]
        public async Task DeleteAsync()
        {
            // Example: AFDOriginGroups_Delete
            var afdOriginGroup = GetArmClient().GetAfdOriginGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/RG/providers/Microsoft.Cdn/profiles/profile1/originGroups/origingroup1"));

            await afdOriginGroup.DeleteAsync();
        }

        [RecordedTest]
        public async Task UpdateAsync()
        {
            // Example: AFDOriginGroups_Update
            var afdOriginGroup = GetArmClient().GetAfdOriginGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/RG/providers/Microsoft.Cdn/profiles/profile1/originGroups/origingroup1"));
            Cdn.Models.AfdOriginGroupUpdateOptions originGroupUpdateProperties = new Cdn.Models.AfdOriginGroupUpdateOptions()
            {
                LoadBalancingSettings = new Cdn.Models.LoadBalancingSettingsParameters()
                {
                    SampleSize = 3,
                    SuccessfulSamplesRequired = 3,
                    AdditionalLatencyInMilliseconds = 1000,
                },
                HealthProbeSettings = new Cdn.Models.HealthProbeParameters()
                {
                    ProbePath = "/path2",
                    ProbeRequestType = Cdn.Models.HealthProbeRequestType.NotSet,
                    ProbeProtocol = Cdn.Models.ProbeProtocol.NotSet,
                    ProbeIntervalInSeconds = 10,
                },
                TrafficRestorationTimeToHealedOrNewEndpointsInMinutes = 5,
            };

            await afdOriginGroup.UpdateAsync(originGroupUpdateProperties);
        }

        [RecordedTest]
        public void GetResourceUsageAsync()
        {
            // Example: AFDOriginGroups_ListResourceUsage
            var afdOriginGroup = GetArmClient().GetAfdOriginGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/RG/providers/Microsoft.Cdn/profiles/profile1/originGroups/origingroup1"));

            afdOriginGroup.GetResourceUsageAsync();
        }
    }
}

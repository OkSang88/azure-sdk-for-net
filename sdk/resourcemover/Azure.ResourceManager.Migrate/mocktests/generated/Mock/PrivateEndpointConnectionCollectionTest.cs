// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Migrate;
using Azure.ResourceManager.Migrate.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Migrate.Tests.Mock
{
    /// <summary> Test for PrivateEndpointConnection. </summary>
    public partial class PrivateEndpointConnectionCollectionMockTests : MockTestBase
    {
        public PrivateEndpointConnectionCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: PrivateEndpointConnections_Create
            string privateEndpointConnectionName = "custestpece80project3980pe.7e35576b-3df4-478e-9759-f64351cf4f43";
            Migrate.PrivateEndpointConnectionData privateEndpointConnectionBody = new Migrate.PrivateEndpointConnectionData(properties: new Migrate.Models.PrivateEndpointConnectionProperties()
            {
                PrivateLinkServiceConnectionState = new Migrate.Models.PrivateLinkServiceConnectionState()
                {
                    Status = new Migrate.Models.PrivateLinkServiceConnectionStateStatus("Approved"),
                    Description = null,
                    ActionsRequired = "",
                },
            })
            {
                ETag = "\"00009300-0000-0300-0000-602b967b0000\"",
            };

            var projectId = Migrate.Project.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "abgoyal-westEurope", "abgoyalWEselfhostb72bproject");
            var collection = GetArmClient().GetProject(projectId).GetPrivateEndpointConnections();
            await collection.CreateOrUpdateAsync(true, privateEndpointConnectionName, privateEndpointConnectionBody);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: PrivateEndpointConnections_Get
            string privateEndpointConnectionName = "custestpece80project3980pe.7e35576b-3df4-478e-9759-f64351cf4f43";

            var projectId = Migrate.Project.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "abgoyal-westEurope", "abgoyalWEselfhostb72bproject");
            var collection = GetArmClient().GetProject(projectId).GetPrivateEndpointConnections();
            await collection.GetAsync(privateEndpointConnectionName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: PrivateEndpointConnections_ListByProject

            var projectId = Migrate.Project.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "abgoyal-westEurope", "abgoyalWEselfhostb72bproject");
            var collection = GetArmClient().GetProject(projectId).GetPrivateEndpointConnections();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

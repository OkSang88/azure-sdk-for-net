// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;
using ServiceFabricMeshManagementClient;
using ServiceFabricMeshManagementClient.Models;

namespace ServiceFabricMeshManagementClient.Tests.Mock
{
    /// <summary> Test for VolumeResourceDescription. </summary>
    public partial class VolumeResourceDescriptionCollectionMockTests : MockTestBase
    {
        public VolumeResourceDescriptionCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: CreateOrUpdateVolume
            string volumeResourceName = "sampleVolume";
            ServiceFabricMeshManagementClient.VolumeResourceDescriptionData volumeResourceDescription = new ServiceFabricMeshManagementClient.VolumeResourceDescriptionData(location: "EastUS", provider: new ServiceFabricMeshManagementClient.Models.VolumeProvider("SFAzureFile"))
            {
                Description = "Service Fabric Mesh sample volume.",
                AzureFileParameters = new ServiceFabricMeshManagementClient.Models.VolumeProviderParametersAzureFile(accountName: "sbzdemoaccount", shareName: "sharel")
                {
                    AccountKey = "provide-account-key-here",
                },
            };
            volumeResourceDescription.Tags.ReplaceWith(new System.Collections.Generic.Dictionary<string, string>() { });
            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/sbz_demo")).GetVolumeResourceDescriptions();
            await collection.CreateOrUpdateAsync(true, volumeResourceName, volumeResourceDescription);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: GetVolume
            string volumeResourceName = "sampleVolume";

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/sbz_demo")).GetVolumeResourceDescriptions();
            await collection.GetAsync(volumeResourceName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: ListVolumesByResourceGroup

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/sbz_demo")).GetVolumeResourceDescriptions();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.PrivateDns.Tests.Mock;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.PrivateDns.Tests.Mock.Tests.Mock
{
    /// <summary> Test for RecordSet. </summary>
    public partial class PrivateDnsZoneCNAMEMockTests : MockTestBase
    {
        public PrivateDnsZoneCNAMEMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: GET Private DNS Zone A Record Set
            var privateDnsZoneCNAMEId = PrivateDns.Tests.Mock.PrivateDnsZoneCNAME.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "resourceGroup1", "privatezone1.com", "A", "recordA");
            var privateDnsZoneCNAME = GetArmClient().GetPrivateDnsZoneCNAME(privateDnsZoneCNAMEId);

            await privateDnsZoneCNAME.GetAsync();
        }

        [RecordedTest]
        public async Task Get2()
        {
            // Example: GET Private DNS Zone AAAA Record Set
            var privateDnsZoneCNAMEId = PrivateDns.Tests.Mock.PrivateDnsZoneCNAME.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "resourceGroup1", "privatezone1.com", "AAAA", "recordAAAA");
            var privateDnsZoneCNAME = GetArmClient().GetPrivateDnsZoneCNAME(privateDnsZoneCNAMEId);

            await privateDnsZoneCNAME.GetAsync();
        }

        [RecordedTest]
        public async Task Get3()
        {
            // Example: GET Private DNS Zone CNAME Record Set
            var privateDnsZoneCNAMEId = PrivateDns.Tests.Mock.PrivateDnsZoneCNAME.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "resourceGroup1", "privatezone1.com", "CNAME", "recordCNAME");
            var privateDnsZoneCNAME = GetArmClient().GetPrivateDnsZoneCNAME(privateDnsZoneCNAMEId);

            await privateDnsZoneCNAME.GetAsync();
        }

        [RecordedTest]
        public async Task Get4()
        {
            // Example: GET Private DNS Zone MX Record Set
            var privateDnsZoneCNAMEId = PrivateDns.Tests.Mock.PrivateDnsZoneCNAME.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "resourceGroup1", "privatezone1.com", "MX", "recordMX");
            var privateDnsZoneCNAME = GetArmClient().GetPrivateDnsZoneCNAME(privateDnsZoneCNAMEId);

            await privateDnsZoneCNAME.GetAsync();
        }

        [RecordedTest]
        public async Task Get5()
        {
            // Example: GET Private DNS Zone PTR Record Set
            var privateDnsZoneCNAMEId = PrivateDns.Tests.Mock.PrivateDnsZoneCNAME.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "resourceGroup1", "0.0.127.in-addr.arpa", "PTR", "1");
            var privateDnsZoneCNAME = GetArmClient().GetPrivateDnsZoneCNAME(privateDnsZoneCNAMEId);

            await privateDnsZoneCNAME.GetAsync();
        }

        [RecordedTest]
        public async Task Get6()
        {
            // Example: GET Private DNS Zone SOA Record Set
            var privateDnsZoneCNAMEId = PrivateDns.Tests.Mock.PrivateDnsZoneCNAME.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "resourceGroup1", "privatezone1.com", "SOA", "@");
            var privateDnsZoneCNAME = GetArmClient().GetPrivateDnsZoneCNAME(privateDnsZoneCNAMEId);

            await privateDnsZoneCNAME.GetAsync();
        }

        [RecordedTest]
        public async Task Get7()
        {
            // Example: GET Private DNS Zone SRV Record Set
            var privateDnsZoneCNAMEId = PrivateDns.Tests.Mock.PrivateDnsZoneCNAME.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "resourceGroup1", "privatezone1.com", "SRV", "recordSRV");
            var privateDnsZoneCNAME = GetArmClient().GetPrivateDnsZoneCNAME(privateDnsZoneCNAMEId);

            await privateDnsZoneCNAME.GetAsync();
        }

        [RecordedTest]
        public async Task Get8()
        {
            // Example: GET Private DNS Zone TXT Record Set
            var privateDnsZoneCNAMEId = PrivateDns.Tests.Mock.PrivateDnsZoneCNAME.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "resourceGroup1", "privatezone1.com", "TXT", "recordTXT");
            var privateDnsZoneCNAME = GetArmClient().GetPrivateDnsZoneCNAME(privateDnsZoneCNAMEId);

            await privateDnsZoneCNAME.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: DELETE Private DNS Zone A Record Set
            var privateDnsZoneCNAMEId = PrivateDns.Tests.Mock.PrivateDnsZoneCNAME.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "resourceGroup1", "privatezone1.com", "A", "recordA");
            var privateDnsZoneCNAME = GetArmClient().GetPrivateDnsZoneCNAME(privateDnsZoneCNAMEId);
            string ifMatch = null;

            await privateDnsZoneCNAME.DeleteAsync(true, ifMatch);
        }

        [RecordedTest]
        public async Task Delete2()
        {
            // Example: DELETE Private DNS Zone AAAA Record Set
            var privateDnsZoneCNAMEId = PrivateDns.Tests.Mock.PrivateDnsZoneCNAME.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "resourceGroup1", "privatezone1.com", "AAAA", "recordAAAA");
            var privateDnsZoneCNAME = GetArmClient().GetPrivateDnsZoneCNAME(privateDnsZoneCNAMEId);
            string ifMatch = null;

            await privateDnsZoneCNAME.DeleteAsync(true, ifMatch);
        }

        [RecordedTest]
        public async Task Delete3()
        {
            // Example: DELETE Private DNS Zone CNAME Record Set
            var privateDnsZoneCNAMEId = PrivateDns.Tests.Mock.PrivateDnsZoneCNAME.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "resourceGroup1", "privatezone1.com", "CNAME", "recordCNAME");
            var privateDnsZoneCNAME = GetArmClient().GetPrivateDnsZoneCNAME(privateDnsZoneCNAMEId);
            string ifMatch = null;

            await privateDnsZoneCNAME.DeleteAsync(true, ifMatch);
        }

        [RecordedTest]
        public async Task Delete4()
        {
            // Example: DELETE Private DNS Zone MX Record Set
            var privateDnsZoneCNAMEId = PrivateDns.Tests.Mock.PrivateDnsZoneCNAME.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "resourceGroup1", "privatezone1.com", "MX", "recordMX");
            var privateDnsZoneCNAME = GetArmClient().GetPrivateDnsZoneCNAME(privateDnsZoneCNAMEId);
            string ifMatch = null;

            await privateDnsZoneCNAME.DeleteAsync(true, ifMatch);
        }

        [RecordedTest]
        public async Task Delete5()
        {
            // Example: DELETE Private DNS Zone PTR Record Set
            var privateDnsZoneCNAMEId = PrivateDns.Tests.Mock.PrivateDnsZoneCNAME.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "resourceGroup1", "0.0.127.in-addr.arpa", "PTR", "1");
            var privateDnsZoneCNAME = GetArmClient().GetPrivateDnsZoneCNAME(privateDnsZoneCNAMEId);
            string ifMatch = null;

            await privateDnsZoneCNAME.DeleteAsync(true, ifMatch);
        }

        [RecordedTest]
        public async Task Delete6()
        {
            // Example: DELETE Private DNS Zone SRV Record Set
            var privateDnsZoneCNAMEId = PrivateDns.Tests.Mock.PrivateDnsZoneCNAME.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "resourceGroup1", "privatezone1.com", "SRV", "recordSRV");
            var privateDnsZoneCNAME = GetArmClient().GetPrivateDnsZoneCNAME(privateDnsZoneCNAMEId);
            string ifMatch = null;

            await privateDnsZoneCNAME.DeleteAsync(true, ifMatch);
        }

        [RecordedTest]
        public async Task Delete7()
        {
            // Example: DELETE Private DNS Zone TXT Record Set
            var privateDnsZoneCNAMEId = PrivateDns.Tests.Mock.PrivateDnsZoneCNAME.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "resourceGroup1", "privatezone1.com", "TXT", "recordTXT");
            var privateDnsZoneCNAME = GetArmClient().GetPrivateDnsZoneCNAME(privateDnsZoneCNAMEId);
            string ifMatch = null;

            await privateDnsZoneCNAME.DeleteAsync(true, ifMatch);
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: PATCH Private DNS Zone A Record Set
            var privateDnsZoneCNAMEId = PrivateDns.Tests.Mock.PrivateDnsZoneCNAME.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "resourceGroup1", "privatezone1.com", "A", "recordA");
            var privateDnsZoneCNAME = GetArmClient().GetPrivateDnsZoneCNAME(privateDnsZoneCNAMEId);
            PrivateDns.Tests.Mock.RecordSetData parameters = new PrivateDns.Tests.Mock.RecordSetData();
            string ifMatch = null;

            await privateDnsZoneCNAME.UpdateAsync(parameters, ifMatch);
        }

        [RecordedTest]
        public async Task Update2()
        {
            // Example: PATCH Private DNS Zone AAAA Record Set
            var privateDnsZoneCNAMEId = PrivateDns.Tests.Mock.PrivateDnsZoneCNAME.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "resourceGroup1", "privatezone1.com", "AAAA", "recordAAAA");
            var privateDnsZoneCNAME = GetArmClient().GetPrivateDnsZoneCNAME(privateDnsZoneCNAMEId);
            PrivateDns.Tests.Mock.RecordSetData parameters = new PrivateDns.Tests.Mock.RecordSetData();
            string ifMatch = null;

            await privateDnsZoneCNAME.UpdateAsync(parameters, ifMatch);
        }

        [RecordedTest]
        public async Task Update3()
        {
            // Example: PATCH Private DNS Zone CNAME Record Set
            var privateDnsZoneCNAMEId = PrivateDns.Tests.Mock.PrivateDnsZoneCNAME.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "resourceGroup1", "privatezone1.com", "CNAME", "recordCNAME");
            var privateDnsZoneCNAME = GetArmClient().GetPrivateDnsZoneCNAME(privateDnsZoneCNAMEId);
            PrivateDns.Tests.Mock.RecordSetData parameters = new PrivateDns.Tests.Mock.RecordSetData();
            string ifMatch = null;

            await privateDnsZoneCNAME.UpdateAsync(parameters, ifMatch);
        }

        [RecordedTest]
        public async Task Update4()
        {
            // Example: PATCH Private DNS Zone MX Record Set
            var privateDnsZoneCNAMEId = PrivateDns.Tests.Mock.PrivateDnsZoneCNAME.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "resourceGroup1", "privatezone1.com", "MX", "recordMX");
            var privateDnsZoneCNAME = GetArmClient().GetPrivateDnsZoneCNAME(privateDnsZoneCNAMEId);
            PrivateDns.Tests.Mock.RecordSetData parameters = new PrivateDns.Tests.Mock.RecordSetData();
            string ifMatch = null;

            await privateDnsZoneCNAME.UpdateAsync(parameters, ifMatch);
        }

        [RecordedTest]
        public async Task Update5()
        {
            // Example: PATCH Private DNS Zone PTR Record Set
            var privateDnsZoneCNAMEId = PrivateDns.Tests.Mock.PrivateDnsZoneCNAME.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "resourceGroup1", "0.0.127.in-addr.arpa", "PTR", "1");
            var privateDnsZoneCNAME = GetArmClient().GetPrivateDnsZoneCNAME(privateDnsZoneCNAMEId);
            PrivateDns.Tests.Mock.RecordSetData parameters = new PrivateDns.Tests.Mock.RecordSetData();
            string ifMatch = null;

            await privateDnsZoneCNAME.UpdateAsync(parameters, ifMatch);
        }

        [RecordedTest]
        public async Task Update6()
        {
            // Example: PATCH Private DNS Zone SOA Record Set
            var privateDnsZoneCNAMEId = PrivateDns.Tests.Mock.PrivateDnsZoneCNAME.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "resourceGroup1", "privatezone1.com", "SOA", "@");
            var privateDnsZoneCNAME = GetArmClient().GetPrivateDnsZoneCNAME(privateDnsZoneCNAMEId);
            PrivateDns.Tests.Mock.RecordSetData parameters = new PrivateDns.Tests.Mock.RecordSetData();
            string ifMatch = null;

            await privateDnsZoneCNAME.UpdateAsync(parameters, ifMatch);
        }

        [RecordedTest]
        public async Task Update7()
        {
            // Example: PATCH Private DNS Zone SRV Record Set
            var privateDnsZoneCNAMEId = PrivateDns.Tests.Mock.PrivateDnsZoneCNAME.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "resourceGroup1", "privatezone1.com", "SRV", "recordSRV");
            var privateDnsZoneCNAME = GetArmClient().GetPrivateDnsZoneCNAME(privateDnsZoneCNAMEId);
            PrivateDns.Tests.Mock.RecordSetData parameters = new PrivateDns.Tests.Mock.RecordSetData();
            string ifMatch = null;

            await privateDnsZoneCNAME.UpdateAsync(parameters, ifMatch);
        }

        [RecordedTest]
        public async Task Update8()
        {
            // Example: PATCH Private DNS Zone TXT Record Set
            var privateDnsZoneCNAMEId = PrivateDns.Tests.Mock.PrivateDnsZoneCNAME.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "resourceGroup1", "privatezone1.com", "TXT", "recordTXT");
            var privateDnsZoneCNAME = GetArmClient().GetPrivateDnsZoneCNAME(privateDnsZoneCNAMEId);
            PrivateDns.Tests.Mock.RecordSetData parameters = new PrivateDns.Tests.Mock.RecordSetData();
            string ifMatch = null;

            await privateDnsZoneCNAME.UpdateAsync(parameters, ifMatch);
        }
    }
}

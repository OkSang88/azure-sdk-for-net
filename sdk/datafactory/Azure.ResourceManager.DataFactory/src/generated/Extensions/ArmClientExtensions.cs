// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager;

namespace DataFactoryManagementClient
{
    /// <summary> A class to add extension methods to ArmClient. </summary>
    public static partial class ArmClientExtensions
    {
        #region Factory
        /// <summary> Gets an object representing a Factory along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="Factory" /> object. </returns>
        public static Factory GetFactory(this ArmClient armClient, ResourceIdentifier id)
        {
            Factory.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new Factory(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region IntegrationRuntimeResource
        /// <summary> Gets an object representing a IntegrationRuntimeResource along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="IntegrationRuntimeResource" /> object. </returns>
        public static IntegrationRuntimeResource GetIntegrationRuntimeResource(this ArmClient armClient, ResourceIdentifier id)
        {
            IntegrationRuntimeResource.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new IntegrationRuntimeResource(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region LinkedServiceResource
        /// <summary> Gets an object representing a LinkedServiceResource along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="LinkedServiceResource" /> object. </returns>
        public static LinkedServiceResource GetLinkedServiceResource(this ArmClient armClient, ResourceIdentifier id)
        {
            LinkedServiceResource.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new LinkedServiceResource(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region DatasetResource
        /// <summary> Gets an object representing a DatasetResource along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DatasetResource" /> object. </returns>
        public static DatasetResource GetDatasetResource(this ArmClient armClient, ResourceIdentifier id)
        {
            DatasetResource.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new DatasetResource(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region PipelineResource
        /// <summary> Gets an object representing a PipelineResource along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="PipelineResource" /> object. </returns>
        public static PipelineResource GetPipelineResource(this ArmClient armClient, ResourceIdentifier id)
        {
            PipelineResource.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new PipelineResource(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region TriggerResource
        /// <summary> Gets an object representing a TriggerResource along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="TriggerResource" /> object. </returns>
        public static TriggerResource GetTriggerResource(this ArmClient armClient, ResourceIdentifier id)
        {
            TriggerResource.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new TriggerResource(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region DataFlowResource
        /// <summary> Gets an object representing a DataFlowResource along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DataFlowResource" /> object. </returns>
        public static DataFlowResource GetDataFlowResource(this ArmClient armClient, ResourceIdentifier id)
        {
            DataFlowResource.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new DataFlowResource(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ManagedVirtualNetworkResource
        /// <summary> Gets an object representing a ManagedVirtualNetworkResource along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ManagedVirtualNetworkResource" /> object. </returns>
        public static ManagedVirtualNetworkResource GetManagedVirtualNetworkResource(this ArmClient armClient, ResourceIdentifier id)
        {
            ManagedVirtualNetworkResource.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ManagedVirtualNetworkResource(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ManagedPrivateEndpointResource
        /// <summary> Gets an object representing a ManagedPrivateEndpointResource along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ManagedPrivateEndpointResource" /> object. </returns>
        public static ManagedPrivateEndpointResource GetManagedPrivateEndpointResource(this ArmClient armClient, ResourceIdentifier id)
        {
            ManagedPrivateEndpointResource.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ManagedPrivateEndpointResource(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region PrivateEndpointConnectionResource
        /// <summary> Gets an object representing a PrivateEndpointConnectionResource along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="PrivateEndpointConnectionResource" /> object. </returns>
        public static PrivateEndpointConnectionResource GetPrivateEndpointConnectionResource(this ArmClient armClient, ResourceIdentifier id)
        {
            PrivateEndpointConnectionResource.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new PrivateEndpointConnectionResource(clientOptions, credential, uri, pipeline, id));
        }
        #endregion
    }
}

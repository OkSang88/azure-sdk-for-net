// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Maps.Tests.Mock;
using Azure.ResourceManager.Maps.Tests.Mock.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Maps.Tests.Mock.Tests.Mock
{
    /// <summary> Test for Creator. </summary>
    public partial class CreatorMockTests : MockTestBase
    {
        public CreatorMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get Creator Resource
            var creatorId = Maps.Tests.Mock.Creator.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myMapsAccount", "myCreator");
            var creator = GetArmClient().GetCreator(creatorId);

            await creator.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: Delete Creator Resource
            var creatorId = Maps.Tests.Mock.Creator.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myMapsAccount", "myCreator");
            var creator = GetArmClient().GetCreator(creatorId);

            await creator.DeleteAsync(true);
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: Update Creator Resource
            var creatorId = Maps.Tests.Mock.Creator.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myMapsAccount", "myCreator");
            var creator = GetArmClient().GetCreator(creatorId);
            Maps.Tests.Mock.Models.CreatorUpdateParameters creatorUpdateParameters = new Maps.Tests.Mock.Models.CreatorUpdateParameters()
            {
                StorageUnits = 10,
            };

            await creator.UpdateAsync(creatorUpdateParameters);
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.Sql.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Sql.Tests.Mock
{
    /// <summary> Test for JobAgent. </summary>
    public partial class JobAgentMockTests : MockTestBase
    {
        public JobAgentMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get a job agent
            var jobAgent = GetArmClient().GetJobAgent(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Sql/servers/server1/jobAgents/agent1"));

            await jobAgent.GetAsync();
        }

        [RecordedTest]
        public async Task DeleteAsync()
        {
            // Example: Delete a job agent
            var jobAgent = GetArmClient().GetJobAgent(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Sql/servers/server1/jobAgents/agent1"));

            await jobAgent.DeleteAsync();
        }

        [RecordedTest]
        public async Task UpdateAsync()
        {
            // Example: Update a job agent's tags.
            var jobAgent = GetArmClient().GetJobAgent(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Sql/servers/server1/jobAgents/agent1"));
            Sql.Models.JobAgentUpdate parameters = new Sql.Models.JobAgentUpdate();

            await jobAgent.UpdateAsync(parameters);
        }

        [RecordedTest]
        public void GetJobExecutionsByAgentAsync()
        {
            // Example: List all job executions in a job agent with filtering.
            var jobAgent = GetArmClient().GetJobAgent(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Sql/servers/server1/jobAgents/agent1"));
            DateTimeOffset? createTimeMin = DateTimeOffset.Parse("2017-03-21T19:00:00Z");
            DateTimeOffset? createTimeMax = DateTimeOffset.Parse("2017-03-21T19:05:00Z");
            DateTimeOffset? endTimeMin = DateTimeOffset.Parse("2017-03-21T19:20:00Z");
            DateTimeOffset? endTimeMax = DateTimeOffset.Parse("2017-03-21T19:25:00Z");
            bool? isActive = false;
            int? skip = null;
            int? top = null;

            jobAgent.GetJobExecutionsByAgentAsync(createTimeMin, createTimeMax, endTimeMin, endTimeMax, isActive, skip, top);
        }

        [RecordedTest]
        public void GetJobExecutionsByAgentAsync2()
        {
            // Example: List all job executions in a job agent.
            var jobAgent = GetArmClient().GetJobAgent(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Sql/servers/server1/jobAgents/agent1"));
            DateTimeOffset? createTimeMin = null;
            DateTimeOffset? createTimeMax = null;
            DateTimeOffset? endTimeMin = null;
            DateTimeOffset? endTimeMax = null;
            bool? isActive = null;
            int? skip = null;
            int? top = null;

            jobAgent.GetJobExecutionsByAgentAsync(createTimeMin, createTimeMax, endTimeMin, endTimeMax, isActive, skip, top);
        }
    }
}

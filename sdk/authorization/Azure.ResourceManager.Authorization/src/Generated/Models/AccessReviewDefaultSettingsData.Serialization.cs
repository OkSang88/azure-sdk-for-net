// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;
using Azure.ResourceManager.Authorization.Models;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Authorization
{
    public partial class AccessReviewDefaultSettingsData
    {
        internal static AccessReviewDefaultSettingsData DeserializeAccessReviewDefaultSettingsData(JsonElement element)
        {
            ResourceIdentifier id = default;
            string name = default;
            ResourceType type = default;
            SystemData systemData = default;
            Optional<bool> mailNotificationsEnabled = default;
            Optional<bool> reminderNotificationsEnabled = default;
            Optional<bool> defaultDecisionEnabled = default;
            Optional<bool> justificationRequiredOnApproval = default;
            Optional<DefaultDecisionType> defaultDecision = default;
            Optional<bool> autoApplyDecisionsEnabled = default;
            Optional<bool> recommendationsEnabled = default;
            Optional<TimeSpan> recommendationLookBackDuration = default;
            Optional<int> instanceDurationInDays = default;
            Optional<AccessReviewRecurrenceRangeType> type0 = default;
            Optional<int> numberOfOccurrences = default;
            Optional<DateTimeOffset?> startDate = default;
            Optional<DateTimeOffset?> endDate = default;
            Optional<AccessReviewRecurrencePatternType> type1 = default;
            Optional<int> interval = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    id = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("systemData"))
                {
                    systemData = JsonSerializer.Deserialize<SystemData>(property.Value.ToString());
                    continue;
                }
                if (property.NameEquals("properties"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("mailNotificationsEnabled"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            mailNotificationsEnabled = property0.Value.GetBoolean();
                            continue;
                        }
                        if (property0.NameEquals("reminderNotificationsEnabled"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            reminderNotificationsEnabled = property0.Value.GetBoolean();
                            continue;
                        }
                        if (property0.NameEquals("defaultDecisionEnabled"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            defaultDecisionEnabled = property0.Value.GetBoolean();
                            continue;
                        }
                        if (property0.NameEquals("justificationRequiredOnApproval"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            justificationRequiredOnApproval = property0.Value.GetBoolean();
                            continue;
                        }
                        if (property0.NameEquals("defaultDecision"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            defaultDecision = new DefaultDecisionType(property0.Value.GetString());
                            continue;
                        }
                        if (property0.NameEquals("autoApplyDecisionsEnabled"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            autoApplyDecisionsEnabled = property0.Value.GetBoolean();
                            continue;
                        }
                        if (property0.NameEquals("recommendationsEnabled"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            recommendationsEnabled = property0.Value.GetBoolean();
                            continue;
                        }
                        if (property0.NameEquals("recommendationLookBackDuration"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            recommendationLookBackDuration = property0.Value.GetTimeSpan("P");
                            continue;
                        }
                        if (property0.NameEquals("instanceDurationInDays"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            instanceDurationInDays = property0.Value.GetInt32();
                            continue;
                        }
                        if (property0.NameEquals("recurrence"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            foreach (var property1 in property0.Value.EnumerateObject())
                            {
                                if (property1.NameEquals("range"))
                                {
                                    if (property1.Value.ValueKind == JsonValueKind.Null)
                                    {
                                        property1.ThrowNonNullablePropertyIsNull();
                                        continue;
                                    }
                                    foreach (var property2 in property1.Value.EnumerateObject())
                                    {
                                        if (property2.NameEquals("type"))
                                        {
                                            if (property2.Value.ValueKind == JsonValueKind.Null)
                                            {
                                                property2.ThrowNonNullablePropertyIsNull();
                                                continue;
                                            }
                                            type0 = new AccessReviewRecurrenceRangeType(property2.Value.GetString());
                                            continue;
                                        }
                                        if (property2.NameEquals("numberOfOccurrences"))
                                        {
                                            if (property2.Value.ValueKind == JsonValueKind.Null)
                                            {
                                                property2.ThrowNonNullablePropertyIsNull();
                                                continue;
                                            }
                                            numberOfOccurrences = property2.Value.GetInt32();
                                            continue;
                                        }
                                        if (property2.NameEquals("startDate"))
                                        {
                                            if (property2.Value.ValueKind == JsonValueKind.Null)
                                            {
                                                startDate = null;
                                                continue;
                                            }
                                            startDate = property2.Value.GetDateTimeOffset("O");
                                            continue;
                                        }
                                        if (property2.NameEquals("endDate"))
                                        {
                                            if (property2.Value.ValueKind == JsonValueKind.Null)
                                            {
                                                endDate = null;
                                                continue;
                                            }
                                            endDate = property2.Value.GetDateTimeOffset("O");
                                            continue;
                                        }
                                    }
                                    continue;
                                }
                                if (property1.NameEquals("pattern"))
                                {
                                    if (property1.Value.ValueKind == JsonValueKind.Null)
                                    {
                                        property1.ThrowNonNullablePropertyIsNull();
                                        continue;
                                    }
                                    foreach (var property2 in property1.Value.EnumerateObject())
                                    {
                                        if (property2.NameEquals("type"))
                                        {
                                            if (property2.Value.ValueKind == JsonValueKind.Null)
                                            {
                                                property2.ThrowNonNullablePropertyIsNull();
                                                continue;
                                            }
                                            type1 = new AccessReviewRecurrencePatternType(property2.Value.GetString());
                                            continue;
                                        }
                                        if (property2.NameEquals("interval"))
                                        {
                                            if (property2.Value.ValueKind == JsonValueKind.Null)
                                            {
                                                property2.ThrowNonNullablePropertyIsNull();
                                                continue;
                                            }
                                            interval = property2.Value.GetInt32();
                                            continue;
                                        }
                                    }
                                    continue;
                                }
                            }
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new AccessReviewDefaultSettingsData(id, name, type, systemData, Optional.ToNullable(mailNotificationsEnabled), Optional.ToNullable(reminderNotificationsEnabled), Optional.ToNullable(defaultDecisionEnabled), Optional.ToNullable(justificationRequiredOnApproval), Optional.ToNullable(defaultDecision), Optional.ToNullable(autoApplyDecisionsEnabled), Optional.ToNullable(recommendationsEnabled), Optional.ToNullable(recommendationLookBackDuration), Optional.ToNullable(instanceDurationInDays), Optional.ToNullable(type0), Optional.ToNullable(numberOfOccurrences), Optional.ToNullable(startDate), Optional.ToNullable(endDate), Optional.ToNullable(type1), Optional.ToNullable(interval));
        }
    }
}

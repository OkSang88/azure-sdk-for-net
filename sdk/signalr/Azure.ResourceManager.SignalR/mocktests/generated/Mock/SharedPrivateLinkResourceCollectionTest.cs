// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;
using SignalRManagementClient;

namespace SignalRManagementClient.Tests.Mock
{
    /// <summary> Test for SharedPrivateLinkResource. </summary>
    public partial class SharedPrivateLinkResourceCollectionMockTests : MockTestBase
    {
        public SharedPrivateLinkResourceCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: SignalRSharedPrivateLinkResources_CreateOrUpdate
            string sharedPrivateLinkResourceName = "upstream";
            SignalRManagementClient.SharedPrivateLinkResourceData parameters = new SignalRManagementClient.SharedPrivateLinkResourceData()
            {
                GroupId = "sites",
                PrivateLinkResourceId = "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/Microsoft.Web/sites/myWebApp",
                RequestMessage = "Please approve",
            };

            var signalRResourceId = SignalRManagementClient.SignalRResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "mySignalRService");
            var collection = GetArmClient().GetSignalRResource(signalRResourceId).GetSharedPrivateLinkResources();
            await collection.CreateOrUpdateAsync(true, sharedPrivateLinkResourceName, parameters);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: SignalRSharedPrivateLinkResources_Get
            string sharedPrivateLinkResourceName = "upstream";

            var signalRResourceId = SignalRManagementClient.SignalRResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "mySignalRService");
            var collection = GetArmClient().GetSignalRResource(signalRResourceId).GetSharedPrivateLinkResources();
            await collection.GetAsync(sharedPrivateLinkResourceName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: SignalRSharedPrivateLinkResources_List

            var signalRResourceId = SignalRManagementClient.SignalRResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "mySignalRService");
            var collection = GetArmClient().GetSignalRResource(signalRResourceId).GetSharedPrivateLinkResources();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

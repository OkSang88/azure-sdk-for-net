// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Authorization.Models
{
    /// <summary> Access Review History Definition. </summary>
    internal partial class AccessReviewHistoryDefinition : ResourceData
    {
        /// <summary> Initializes a new instance of AccessReviewHistoryDefinition. </summary>
        internal AccessReviewHistoryDefinition()
        {
            Decisions = new ChangeTrackingList<AccessReviewResult>();
            Scopes = new ChangeTrackingList<AccessReviewScope>();
            Instances = new ChangeTrackingList<AccessReviewHistoryInstance>();
        }

        /// <summary> The display name for the history definition. </summary>
        public string DisplayName { get; }
        /// <summary> Date time used when selecting review data, all reviews included in data start on or after this date. For use only with one-time/non-recurring reports. </summary>
        public DateTimeOffset? ReviewHistoryPeriodStartOn { get; }
        /// <summary> Date time used when selecting review data, all reviews included in data end on or before this date. For use only with one-time/non-recurring reports. </summary>
        public DateTimeOffset? ReviewHistoryPeriodEndOn { get; }
        /// <summary> Collection of review decisions which the history data should be filtered on. For example if Approve and Deny are supplied the data will only contain review results in which the decision maker approved or denied a review request. </summary>
        public IReadOnlyList<AccessReviewResult> Decisions { get; }
        /// <summary> This read-only field specifies the of the requested review history data. This is either requested, in-progress, done or error. </summary>
        public AccessReviewHistoryDefinitionStatus? Status { get; }
        /// <summary> Date time when history definition was created. </summary>
        public DateTimeOffset? CreatedOn { get; }
        /// <summary> A collection of scopes used when selecting review history data. </summary>
        public IReadOnlyList<AccessReviewScope> Scopes { get; }
        /// <summary> Set of access review history instances for this history definition. </summary>
        public IReadOnlyList<AccessReviewHistoryInstance> Instances { get; }
        /// <summary> The recurrence range type. The possible values are: endDate, noEnd, numbered. </summary>
        public AccessReviewRecurrenceRangeType? TypePropertiesSettingsRangeType { get; }
        /// <summary> The number of times to repeat the access review. Required and must be positive if type is numbered. </summary>
        public int? NumberOfOccurrences { get; }
        /// <summary> The DateTime when the review is scheduled to be start. This could be a date in the future. Required on create. </summary>
        public DateTimeOffset? StartOn { get; }
        /// <summary> The DateTime when the review is scheduled to end. Required if type is endDate. </summary>
        public DateTimeOffset? EndOn { get; }
        /// <summary> The recurrence type : weekly, monthly, etc. </summary>
        public AccessReviewRecurrencePatternType? TypePropertiesSettingsPatternType { get; }
        /// <summary> The interval for recurrence. For a quarterly review, the interval is 3 for type : absoluteMonthly. </summary>
        public int? Interval { get; }
        /// <summary> The identity id. </summary>
        public string PrincipalId { get; }
        /// <summary> The identity type : user/servicePrincipal. </summary>
        public AccessReviewActorIdentityType? PrincipalType { get; }
        /// <summary> The identity display name. </summary>
        public string PrincipalName { get; }
        /// <summary> The user principal name(if valid). </summary>
        public string UserPrincipalName { get; }
    }
}

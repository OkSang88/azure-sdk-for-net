// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using StorSimple8000SeriesManagementClient.Models;

namespace StorSimple8000SeriesManagementClient
{
    /// <summary> A class representing the TimeSettings data model. </summary>
    public partial class TimeSettingsData : BaseModel
    {
        /// <summary> Initializes a new instance of TimeSettingsData. </summary>
        /// <param name="timeZone"> The timezone of device, like &apos;(UTC -06:00) Central America&apos;. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="timeZone"/> is null. </exception>
        public TimeSettingsData(string timeZone)
        {
            if (timeZone == null)
            {
                throw new ArgumentNullException(nameof(timeZone));
            }

            TimeZone = timeZone;
            SecondaryTimeServer = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of TimeSettingsData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="type"> The type. </param>
        /// <param name="kind"> The Kind of the object. Currently only Series8000 is supported. </param>
        /// <param name="timeZone"> The timezone of device, like &apos;(UTC -06:00) Central America&apos;. </param>
        /// <param name="primaryTimeServer"> The primary Network Time Protocol (NTP) server name, like &apos;time.windows.com&apos;. </param>
        /// <param name="secondaryTimeServer"> The secondary Network Time Protocol (NTP) server name, like &apos;time.contoso.com&apos;. It&apos;s optional. </param>
        internal TimeSettingsData(ResourceIdentifier id, string name, ResourceType type, string kind, string timeZone, string primaryTimeServer, IList<string> secondaryTimeServer) : base(id, name, type, kind)
        {
            TimeZone = timeZone;
            PrimaryTimeServer = primaryTimeServer;
            SecondaryTimeServer = secondaryTimeServer;
        }

        /// <summary> The timezone of device, like &apos;(UTC -06:00) Central America&apos;. </summary>
        public string TimeZone { get; set; }
        /// <summary> The primary Network Time Protocol (NTP) server name, like &apos;time.windows.com&apos;. </summary>
        public string PrimaryTimeServer { get; set; }
        /// <summary> The secondary Network Time Protocol (NTP) server name, like &apos;time.contoso.com&apos;. It&apos;s optional. </summary>
        public IList<string> SecondaryTimeServer { get; }
    }
}

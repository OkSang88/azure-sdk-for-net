// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using ContainerRegistryManagementClient.Models;

namespace ContainerRegistryManagementClient
{
    /// <summary> A class representing the Run data model. </summary>
    public partial class RunData : ProxyResource
    {
        /// <summary> Initializes a new instance of RunData. </summary>
        public RunData()
        {
            OutputImages = new ChangeTrackingList<ImageDescriptor>();
            CustomRegistries = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of RunData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="type"> The type. </param>
        /// <param name="systemData"> Metadata pertaining to creation and last modification of the resource. </param>
        /// <param name="runId"> The unique identifier for the run. </param>
        /// <param name="status"> The current status of the run. </param>
        /// <param name="lastUpdatedTime"> The last updated time for the run. </param>
        /// <param name="runType"> The type of run. </param>
        /// <param name="agentPoolName"> The dedicated agent pool for the run. </param>
        /// <param name="createTime"> The time the run was scheduled. </param>
        /// <param name="startTime"> The time the run started. </param>
        /// <param name="finishTime"> The time the run finished. </param>
        /// <param name="outputImages"> The list of all images that were generated from the run. This is applicable if the run generates base image dependencies. </param>
        /// <param name="task"> The task against which run was scheduled. </param>
        /// <param name="imageUpdateTrigger"> The image update trigger that caused the run. This is applicable if the task has base image trigger configured. </param>
        /// <param name="sourceTrigger"> The source trigger that caused the run. </param>
        /// <param name="timerTrigger"> The timer trigger that caused the run. </param>
        /// <param name="platform"> The platform properties against which the run will happen. </param>
        /// <param name="agentConfiguration"> The machine configuration of the run agent. </param>
        /// <param name="sourceRegistryAuth"> The scope of the credentials that were used to login to the source registry during this run. </param>
        /// <param name="customRegistries"> The list of custom registries that were logged in during this run. </param>
        /// <param name="runErrorMessage"> The error message received from backend systems after the run is scheduled. </param>
        /// <param name="updateTriggerToken"> The update trigger token passed for the Run. </param>
        /// <param name="logArtifact"> The image description for the log artifact. </param>
        /// <param name="provisioningState"> The provisioning state of a run. </param>
        /// <param name="isArchiveEnabled"> The value that indicates whether archiving is enabled or not. </param>
        internal RunData(ResourceIdentifier id, string name, ResourceType type, SystemData systemData, string runId, RunStatus? status, DateTimeOffset? lastUpdatedTime, RunType? runType, string agentPoolName, DateTimeOffset? createTime, DateTimeOffset? startTime, DateTimeOffset? finishTime, IList<ImageDescriptor> outputImages, string task, ImageUpdateTrigger imageUpdateTrigger, SourceTriggerDescriptor sourceTrigger, TimerTriggerDescriptor timerTrigger, PlatformProperties platform, AgentProperties agentConfiguration, string sourceRegistryAuth, IList<string> customRegistries, string runErrorMessage, string updateTriggerToken, ImageDescriptor logArtifact, ProvisioningState? provisioningState, bool? isArchiveEnabled) : base(id, name, type, systemData)
        {
            RunId = runId;
            Status = status;
            LastUpdatedTime = lastUpdatedTime;
            RunType = runType;
            AgentPoolName = agentPoolName;
            CreateTime = createTime;
            StartTime = startTime;
            FinishTime = finishTime;
            OutputImages = outputImages;
            Task = task;
            ImageUpdateTrigger = imageUpdateTrigger;
            SourceTrigger = sourceTrigger;
            TimerTrigger = timerTrigger;
            Platform = platform;
            AgentConfiguration = agentConfiguration;
            SourceRegistryAuth = sourceRegistryAuth;
            CustomRegistries = customRegistries;
            RunErrorMessage = runErrorMessage;
            UpdateTriggerToken = updateTriggerToken;
            LogArtifact = logArtifact;
            ProvisioningState = provisioningState;
            IsArchiveEnabled = isArchiveEnabled;
        }

        /// <summary> The unique identifier for the run. </summary>
        public string RunId { get; set; }
        /// <summary> The current status of the run. </summary>
        public RunStatus? Status { get; set; }
        /// <summary> The last updated time for the run. </summary>
        public DateTimeOffset? LastUpdatedTime { get; set; }
        /// <summary> The type of run. </summary>
        public RunType? RunType { get; set; }
        /// <summary> The dedicated agent pool for the run. </summary>
        public string AgentPoolName { get; set; }
        /// <summary> The time the run was scheduled. </summary>
        public DateTimeOffset? CreateTime { get; set; }
        /// <summary> The time the run started. </summary>
        public DateTimeOffset? StartTime { get; set; }
        /// <summary> The time the run finished. </summary>
        public DateTimeOffset? FinishTime { get; set; }
        /// <summary> The list of all images that were generated from the run. This is applicable if the run generates base image dependencies. </summary>
        public IList<ImageDescriptor> OutputImages { get; }
        /// <summary> The task against which run was scheduled. </summary>
        public string Task { get; set; }
        /// <summary> The image update trigger that caused the run. This is applicable if the task has base image trigger configured. </summary>
        public ImageUpdateTrigger ImageUpdateTrigger { get; set; }
        /// <summary> The source trigger that caused the run. </summary>
        public SourceTriggerDescriptor SourceTrigger { get; set; }
        /// <summary> The timer trigger that caused the run. </summary>
        public TimerTriggerDescriptor TimerTrigger { get; set; }
        /// <summary> The platform properties against which the run will happen. </summary>
        public PlatformProperties Platform { get; set; }
        /// <summary> The machine configuration of the run agent. </summary>
        public AgentProperties AgentConfiguration { get; set; }
        /// <summary> The scope of the credentials that were used to login to the source registry during this run. </summary>
        public string SourceRegistryAuth { get; set; }
        /// <summary> The list of custom registries that were logged in during this run. </summary>
        public IList<string> CustomRegistries { get; }
        /// <summary> The error message received from backend systems after the run is scheduled. </summary>
        public string RunErrorMessage { get; }
        /// <summary> The update trigger token passed for the Run. </summary>
        public string UpdateTriggerToken { get; set; }
        /// <summary> The image description for the log artifact. </summary>
        public ImageDescriptor LogArtifact { get; }
        /// <summary> The provisioning state of a run. </summary>
        public ProvisioningState? ProvisioningState { get; set; }
        /// <summary> The value that indicates whether archiving is enabled or not. </summary>
        public bool? IsArchiveEnabled { get; set; }
    }
}

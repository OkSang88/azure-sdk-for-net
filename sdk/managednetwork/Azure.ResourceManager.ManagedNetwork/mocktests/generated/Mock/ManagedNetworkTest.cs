// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.ManagedNetwork.Tests.Mock;
using Azure.ResourceManager.ManagedNetwork.Tests.Mock.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.ManagedNetwork.Tests.Mock.Tests.Mock
{
    /// <summary> Test for ManagedNetwork. </summary>
    public partial class ManagedNetworkMockTests : MockTestBase
    {
        public ManagedNetworkMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: ManagedNetworksGet
            var managedNetworkId = ManagedNetwork.Tests.Mock.ManagedNetwork.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myManagedNetwork");
            var managedNetwork = GetArmClient().GetManagedNetwork(managedNetworkId);

            await managedNetwork.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: ManagedNetworksDelete
            var managedNetworkId = ManagedNetwork.Tests.Mock.ManagedNetwork.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myManagedNetwork");
            var managedNetwork = GetArmClient().GetManagedNetwork(managedNetworkId);

            await managedNetwork.DeleteAsync(true);
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: ManagedNetworksPatch
            var managedNetworkId = ManagedNetwork.Tests.Mock.ManagedNetwork.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myManagedNetwork");
            var managedNetwork = GetArmClient().GetManagedNetwork(managedNetworkId);
            ManagedNetwork.Tests.Mock.Models.ManagedNetworkUpdate parameters = new ManagedNetwork.Tests.Mock.Models.ManagedNetworkUpdate();

            await managedNetwork.UpdateAsync(true, parameters);
        }
    }
}

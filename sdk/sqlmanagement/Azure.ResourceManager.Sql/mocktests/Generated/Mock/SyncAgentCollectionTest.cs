// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Sql;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Sql.Tests.Mock
{
    /// <summary> Test for SyncAgent. </summary>
    public partial class SyncAgentCollectionMockTests : MockTestBase
    {
        public SyncAgentCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: Create a new sync agent
            string syncAgentName = "syncagentcrud-3187";
            Sql.SyncAgentData parameters = new Sql.SyncAgentData()
            {
                SyncDatabaseId = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default-SQL-Onebox/providers/Microsoft.Sql/servers/syncagentcrud-8475/databases/sync",
            };

            var sqlServerId = Sql.SqlServer.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "syncagentcrud-65440", "syncagentcrud-8475");
            var collection = GetArmClient().GetSqlServer(sqlServerId).GetSyncAgents();
            await collection.CreateOrUpdateAsync(true, syncAgentName, parameters);
        }

        [RecordedTest]
        public async Task CreateOrUpdate2()
        {
            // Example: Update a sync agent
            string syncAgentName = "syncagentcrud-3187";
            Sql.SyncAgentData parameters = new Sql.SyncAgentData()
            {
                SyncDatabaseId = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default-SQL-Onebox/providers/Microsoft.Sql/servers/syncagentcrud-8475/databases/sync",
            };

            var sqlServerId = Sql.SqlServer.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "syncagentcrud-65440", "syncagentcrud-8475");
            var collection = GetArmClient().GetSqlServer(sqlServerId).GetSyncAgents();
            await collection.CreateOrUpdateAsync(true, syncAgentName, parameters);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get a sync agent
            string syncAgentName = "syncagentcrud-3187";

            var sqlServerId = Sql.SqlServer.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "syncagentcrud-65440", "syncagentcrud-8475");
            var collection = GetArmClient().GetSqlServer(sqlServerId).GetSyncAgents();
            await collection.GetAsync(syncAgentName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: Get sync agents under a server

            var sqlServerId = Sql.SqlServer.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "syncagentcrud-65440", "syncagentcrud-8475");
            var collection = GetArmClient().GetSqlServer(sqlServerId).GetSyncAgents();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

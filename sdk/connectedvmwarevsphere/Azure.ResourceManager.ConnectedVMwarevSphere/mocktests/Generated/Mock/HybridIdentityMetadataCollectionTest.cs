// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.ConnectedVMwarevSphere;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.ConnectedVMwarevSphere.Tests.Mock
{
    /// <summary> Test for HybridIdentityMetadata. </summary>
    public partial class HybridIdentityMetadataCollectionMockTests : MockTestBase
    {
        public HybridIdentityMetadataCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: CreateHybridIdentityMetadata
            string metadataName = "default";
            ConnectedVMwarevSphere.HybridIdentityMetadataData body = new ConnectedVMwarevSphere.HybridIdentityMetadataData()
            {
                VmId = "f8b82dff-38ef-4220-99ef-d3a3f86ddc6c",
                PublicKey = "8ec7d60c-9700-40b1-8e6e-e5b2f6f477f2",
            };

            var virtualMachineId = ConnectedVMwarevSphere.VirtualMachine.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg", "ContosoVm");
            var collection = GetArmClient().GetVirtualMachine(virtualMachineId).GetHybridIdentityMetadatas();
            await collection.CreateOrUpdateAsync(metadataName, body);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: GetHybridIdentityMetadata
            string metadataName = "default";

            var virtualMachineId = ConnectedVMwarevSphere.VirtualMachine.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg", "ContosoVm");
            var collection = GetArmClient().GetVirtualMachine(virtualMachineId).GetHybridIdentityMetadatas();
            await collection.GetAsync(metadataName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: HybridIdentityMetadataListByVm

            var virtualMachineId = ConnectedVMwarevSphere.VirtualMachine.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg", "ContosoVm");
            var collection = GetArmClient().GetVirtualMachine(virtualMachineId).GetHybridIdentityMetadatas();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

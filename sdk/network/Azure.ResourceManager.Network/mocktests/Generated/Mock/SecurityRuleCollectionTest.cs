// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Network;
using Azure.ResourceManager.Network.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Network.Tests.Mock
{
    /// <summary> Test for SecurityRule. </summary>
    public partial class SecurityRuleCollectionMockTests : MockTestBase
    {
        public SecurityRuleCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: Create security rule
            string securityRuleName = "rule1";
            Network.SecurityRuleData securityRuleParameters = new Network.SecurityRuleData()
            {
                Protocol = new Network.Models.SecurityRuleProtocol("*"),
                SourcePortRange = "*",
                DestinationPortRange = "8080",
                SourceAddressPrefix = "10.0.0.0/8",
                DestinationAddressPrefix = "11.0.0.0/8",
                Access = new Network.Models.SecurityRuleAccess("Deny"),
                Priority = 100,
                Direction = new Network.Models.SecurityRuleDirection("Outbound"),
            };

            var networkSecurityGroupId = Network.NetworkSecurityGroup.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "testnsg");
            var collection = GetArmClient().GetNetworkSecurityGroup(networkSecurityGroupId).GetSecurityRules();
            await collection.CreateOrUpdateAsync(true, securityRuleName, securityRuleParameters);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get network security rule in network security group
            string securityRuleName = "rule1";

            var networkSecurityGroupId = Network.NetworkSecurityGroup.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "testnsg");
            var collection = GetArmClient().GetNetworkSecurityGroup(networkSecurityGroupId).GetSecurityRules();
            await collection.GetAsync(securityRuleName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: List network security rules in network security group

            var networkSecurityGroupId = Network.NetworkSecurityGroup.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "testnsg");
            var collection = GetArmClient().GetNetworkSecurityGroup(networkSecurityGroupId).GetSecurityRules();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

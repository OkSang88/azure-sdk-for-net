// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager;

namespace OperationalInsightsManagementClient
{
    /// <summary> A class to add extension methods to ArmClient. </summary>
    public static partial class ArmClientExtensions
    {
        #region DataExport
        /// <summary> Gets an object representing a DataExport along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DataExport" /> object. </returns>
        public static DataExport GetDataExport(this ArmClient armClient, ResourceIdentifier id)
        {
            DataExport.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new DataExport(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region DataSource
        /// <summary> Gets an object representing a DataSource along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DataSource" /> object. </returns>
        public static DataSource GetDataSource(this ArmClient armClient, ResourceIdentifier id)
        {
            DataSource.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new DataSource(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region LinkedService
        /// <summary> Gets an object representing a LinkedService along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="LinkedService" /> object. </returns>
        public static LinkedService GetLinkedService(this ArmClient armClient, ResourceIdentifier id)
        {
            LinkedService.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new LinkedService(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region LinkedStorageAccountsResource
        /// <summary> Gets an object representing a LinkedStorageAccountsResource along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="LinkedStorageAccountsResource" /> object. </returns>
        public static LinkedStorageAccountsResource GetLinkedStorageAccountsResource(this ArmClient armClient, ResourceIdentifier id)
        {
            LinkedStorageAccountsResource.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new LinkedStorageAccountsResource(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region StorageInsight
        /// <summary> Gets an object representing a StorageInsight along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="StorageInsight" /> object. </returns>
        public static StorageInsight GetStorageInsight(this ArmClient armClient, ResourceIdentifier id)
        {
            StorageInsight.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new StorageInsight(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region SavedSearch
        /// <summary> Gets an object representing a SavedSearch along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SavedSearch" /> object. </returns>
        public static SavedSearch GetSavedSearch(this ArmClient armClient, ResourceIdentifier id)
        {
            SavedSearch.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new SavedSearch(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region Table
        /// <summary> Gets an object representing a Table along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="Table" /> object. </returns>
        public static Table GetTable(this ArmClient armClient, ResourceIdentifier id)
        {
            Table.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new Table(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region Cluster
        /// <summary> Gets an object representing a Cluster along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="Cluster" /> object. </returns>
        public static Cluster GetCluster(this ArmClient armClient, ResourceIdentifier id)
        {
            Cluster.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new Cluster(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region Workspace
        /// <summary> Gets an object representing a Workspace along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="Workspace" /> object. </returns>
        public static Workspace GetWorkspace(this ArmClient armClient, ResourceIdentifier id)
        {
            Workspace.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new Workspace(clientOptions, credential, uri, pipeline, id));
        }
        #endregion
    }
}

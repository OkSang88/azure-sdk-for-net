// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;
using PrivateDnsManagementClient;

namespace PrivateDnsManagementClient.Tests.Mock
{
    /// <summary> Test for VirtualNetworkLink. </summary>
    public partial class VirtualNetworkLinkMockTests : MockTestBase
    {
        public VirtualNetworkLinkMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: GET Private DNS Zone Virtual Network Link
            var virtualNetworkLinkId = PrivateDnsManagementClient.VirtualNetworkLink.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "resourceGroup1", "privatezone1.com", "virtualNetworkLink1");
            var virtualNetworkLink = GetArmClient().GetVirtualNetworkLink(virtualNetworkLinkId);

            await virtualNetworkLink.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: DELETE Private DNS Zone Virtual Network Link
            var virtualNetworkLinkId = PrivateDnsManagementClient.VirtualNetworkLink.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "resourceGroup1", "privatezone1.com", "virtualNetworkLink1");
            var virtualNetworkLink = GetArmClient().GetVirtualNetworkLink(virtualNetworkLinkId);
            string ifMatch = null;

            await virtualNetworkLink.DeleteAsync(true, ifMatch);
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: PATCH Private DNS Zone Virtual Network Link
            var virtualNetworkLinkId = PrivateDnsManagementClient.VirtualNetworkLink.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "resourceGroup1", "privatezone1.com", "virtualNetworkLink1");
            var virtualNetworkLink = GetArmClient().GetVirtualNetworkLink(virtualNetworkLinkId);
            PrivateDnsManagementClient.VirtualNetworkLinkData parameters = new PrivateDnsManagementClient.VirtualNetworkLinkData(location: AzureLocation.WestUS)
            {
                RegistrationEnabled = true,
            };
            parameters.Tags.ReplaceWith(new Dictionary<string, string>() { ["key2"] = "value2", }); string ifMatch = null;

            await virtualNetworkLink.UpdateAsync(true, parameters, ifMatch);
        }
    }
}

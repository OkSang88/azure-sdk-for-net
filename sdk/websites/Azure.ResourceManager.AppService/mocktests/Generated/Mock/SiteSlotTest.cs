// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.AppService;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.AppService.Tests.Mock
{
    /// <summary> Test for WebSite. </summary>
    public partial class SiteSlotMockTests : MockTestBase
    {
        public SiteSlotMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task GetSiteBackupsSlot()
        {
            // Example: List backups
            var siteSlotId = AppService.SiteSlot.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg123", "tests346", "staging");
            var siteSlot = GetArmClient().GetSiteSlot(siteSlotId);

            await foreach (var _ in siteSlot.GetSiteBackupsSlotAsync())
            {
            }
        }

        [RecordedTest]
        public async Task GetNetworkTraceOperationSlot()
        {
            // Example: Get the current status of a network trace operation for a site
            var siteSlotId = AppService.SiteSlot.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg123", "SampleApp", "Production");
            var siteSlot = GetArmClient().GetSiteSlot(siteSlotId);
            string operationId = "c291433b-53ad-4c49-8cae-0a293eae1c6d";

            await siteSlot.GetNetworkTraceOperationSlotAsync(operationId);
        }

        [RecordedTest]
        public async Task StartWebSiteNetworkTraceOperationSlot()
        {
            // Example: Start a new network trace operation for a site
            var siteSlotId = AppService.SiteSlot.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg123", "SampleApp", "Production");
            var siteSlot = GetArmClient().GetSiteSlot(siteSlotId);
            int? durationInSeconds = 60;
            int? maxFrameLength = null;
            string sasUrl = null;

            await siteSlot.StartWebSiteNetworkTraceOperationSlotAsync(true, durationInSeconds, maxFrameLength, sasUrl);
        }

        [RecordedTest]
        public async Task StopWebSiteNetworkTraceSlot()
        {
            // Example: Stop a currently running network trace operation for a site
            var siteSlotId = AppService.SiteSlot.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg123", "SampleApp", "Production");
            var siteSlot = GetArmClient().GetSiteSlot(siteSlotId);

            await siteSlot.StopWebSiteNetworkTraceSlotAsync();
        }

        [RecordedTest]
        public async Task GetNetworkTracesSlot()
        {
            // Example: Get NetworkTraces for a site
            var siteSlotId = AppService.SiteSlot.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg123", "SampleApp", "Production");
            var siteSlot = GetArmClient().GetSiteSlot(siteSlotId);
            string operationId = "c291433b-53ad-4c49-8cae-0a293eae1c6d";

            await foreach (var _ in siteSlot.GetNetworkTracesSlotAsync(operationId))
            {
            }
        }

        [RecordedTest]
        public async Task GetNetworkTraceOperationSlotV2()
        {
            // Example: Get the current status of a network trace operation for a site
            var siteSlotId = AppService.SiteSlot.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg123", "SampleApp", "Production");
            var siteSlot = GetArmClient().GetSiteSlot(siteSlotId);
            string operationId = "c291433b-53ad-4c49-8cae-0a293eae1c6d";

            await siteSlot.GetNetworkTraceOperationSlotV2Async(operationId);
        }

        [RecordedTest]
        public async Task GetNetworkTracesSlotV2()
        {
            // Example: Get NetworkTraces for a site
            var siteSlotId = AppService.SiteSlot.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg123", "SampleApp", "Production");
            var siteSlot = GetArmClient().GetSiteSlot(siteSlotId);
            string operationId = "c291433b-53ad-4c49-8cae-0a293eae1c6d";

            await foreach (var _ in siteSlot.GetNetworkTracesSlotV2Async(operationId))
            {
            }
        }

        [RecordedTest]
        public async Task GetPrivateLinkResourcesSlot()
        {
            // Example: Get private link resources of a site
            var siteSlotId = AppService.SiteSlot.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg", "testSite", "stage");
            var siteSlot = GetArmClient().GetSiteSlot(siteSlotId);

            await foreach (var _ in siteSlot.GetPrivateLinkResourcesSlotAsync())
            {
            }
        }

        [RecordedTest]
        public async Task StartNetworkTraceSlot()
        {
            // Example: Start a new network trace operation for a site
            var siteSlotId = AppService.SiteSlot.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg123", "SampleApp", "Production");
            var siteSlot = GetArmClient().GetSiteSlot(siteSlotId);
            int? durationInSeconds = 60;
            int? maxFrameLength = null;
            string sasUrl = null;

            await siteSlot.StartNetworkTraceSlotAsync(true, durationInSeconds, maxFrameLength, sasUrl);
        }

        [RecordedTest]
        public async Task StopNetworkTraceSlot()
        {
            // Example: Stop a currently running network trace operation for a site
            var siteSlotId = AppService.SiteSlot.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg123", "SampleApp", "Production");
            var siteSlot = GetArmClient().GetSiteSlot(siteSlotId);

            await siteSlot.StopNetworkTraceSlotAsync();
        }

        [RecordedTest]
        public async Task SiteSlotResourceHealthMetadataGet()
        {
            // Example: Get ResourceHealthMetadata
            var siteSlotResourceHealthMetadataId = AppService.SiteSlotResourceHealthMetadata.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "Default-Web-NorthCentralUS", "newsiteinnewASE-NCUS", "Production");
            var siteSlotResourceHealthMetadata = GetArmClient().GetSiteSlotResourceHealthMetadata(siteSlotResourceHealthMetadataId);

            await siteSlotResourceHealthMetadata.GetAsync();
        }

        [RecordedTest]
        public async Task SiteSlotBasicPublishingCredentialsPolicyFtpGet()
        {
            // Example: Get FTP Allowed
            var siteSlotBasicPublishingCredentialsPolicyFtpId = AppService.SiteSlotBasicPublishingCredentialsPolicyFtp.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg", "testSite", "stage");
            var siteSlotBasicPublishingCredentialsPolicyFtp = GetArmClient().GetSiteSlotBasicPublishingCredentialsPolicyFtp(siteSlotBasicPublishingCredentialsPolicyFtpId);

            await siteSlotBasicPublishingCredentialsPolicyFtp.GetAsync();
        }

        [RecordedTest]
        public async Task SiteSlotBasicPublishingCredentialsPolicyScmGet()
        {
            // Example: Get SCM Allowed
            var siteSlotBasicPublishingCredentialsPolicyScmId = AppService.SiteSlotBasicPublishingCredentialsPolicyScm.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg", "testSite", "stage");
            var siteSlotBasicPublishingCredentialsPolicyScm = GetArmClient().GetSiteSlotBasicPublishingCredentialsPolicyScm(siteSlotBasicPublishingCredentialsPolicyScmId);

            await siteSlotBasicPublishingCredentialsPolicyScm.GetAsync();
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;
using DnsManagementClient;

namespace DnsManagementClient.Tests.Mock
{
    /// <summary> Test for RecordSet. </summary>
    public partial class DnsZoneCAAMockTests : MockTestBase
    {
        public DnsZoneCAAMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get A recordset
            var dnsZoneCAAId = DnsManagementClient.DnsZoneCAA.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "zone1", "A", "record1");
            var dnsZoneCAA = GetArmClient().GetDnsZoneCAA(dnsZoneCAAId);

            await dnsZoneCAA.GetAsync();
        }

        [RecordedTest]
        public async Task Get2()
        {
            // Example: Get AAAA recordset
            var dnsZoneCAAId = DnsManagementClient.DnsZoneCAA.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "zone1", "AAAA", "record1");
            var dnsZoneCAA = GetArmClient().GetDnsZoneCAA(dnsZoneCAAId);

            await dnsZoneCAA.GetAsync();
        }

        [RecordedTest]
        public async Task Get3()
        {
            // Example: Get CAA recordset
            var dnsZoneCAAId = DnsManagementClient.DnsZoneCAA.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "zone1", "CAA", "record1");
            var dnsZoneCAA = GetArmClient().GetDnsZoneCAA(dnsZoneCAAId);

            await dnsZoneCAA.GetAsync();
        }

        [RecordedTest]
        public async Task Get4()
        {
            // Example: Get CNAME recordset
            var dnsZoneCAAId = DnsManagementClient.DnsZoneCAA.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "zone1", "CNAME", "record1");
            var dnsZoneCAA = GetArmClient().GetDnsZoneCAA(dnsZoneCAAId);

            await dnsZoneCAA.GetAsync();
        }

        [RecordedTest]
        public async Task Get5()
        {
            // Example: Get MX recordset
            var dnsZoneCAAId = DnsManagementClient.DnsZoneCAA.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "zone1", "MX", "record1");
            var dnsZoneCAA = GetArmClient().GetDnsZoneCAA(dnsZoneCAAId);

            await dnsZoneCAA.GetAsync();
        }

        [RecordedTest]
        public async Task Get6()
        {
            // Example: Get NS recordset
            var dnsZoneCAAId = DnsManagementClient.DnsZoneCAA.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "zone1", "NS", "record1");
            var dnsZoneCAA = GetArmClient().GetDnsZoneCAA(dnsZoneCAAId);

            await dnsZoneCAA.GetAsync();
        }

        [RecordedTest]
        public async Task Get7()
        {
            // Example: Get PTR recordset
            var dnsZoneCAAId = DnsManagementClient.DnsZoneCAA.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "0.0.127.in-addr.arpa", "PTR", "1");
            var dnsZoneCAA = GetArmClient().GetDnsZoneCAA(dnsZoneCAAId);

            await dnsZoneCAA.GetAsync();
        }

        [RecordedTest]
        public async Task Get8()
        {
            // Example: Get SOA recordset
            var dnsZoneCAAId = DnsManagementClient.DnsZoneCAA.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "zone1", "SOA", "@");
            var dnsZoneCAA = GetArmClient().GetDnsZoneCAA(dnsZoneCAAId);

            await dnsZoneCAA.GetAsync();
        }

        [RecordedTest]
        public async Task Get9()
        {
            // Example: Get SRV recordset
            var dnsZoneCAAId = DnsManagementClient.DnsZoneCAA.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "zone1", "SRV", "record1");
            var dnsZoneCAA = GetArmClient().GetDnsZoneCAA(dnsZoneCAAId);

            await dnsZoneCAA.GetAsync();
        }

        [RecordedTest]
        public async Task Get10()
        {
            // Example: Get TXT recordset
            var dnsZoneCAAId = DnsManagementClient.DnsZoneCAA.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "zone1", "TXT", "record1");
            var dnsZoneCAA = GetArmClient().GetDnsZoneCAA(dnsZoneCAAId);

            await dnsZoneCAA.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: Delete A recordset
            var dnsZoneCAAId = DnsManagementClient.DnsZoneCAA.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "zone1", "A", "record1");
            var dnsZoneCAA = GetArmClient().GetDnsZoneCAA(dnsZoneCAAId);
            string ifMatch = null;

            await dnsZoneCAA.DeleteAsync(ifMatch);
        }

        [RecordedTest]
        public async Task Delete2()
        {
            // Example: Delete AAAA recordset
            var dnsZoneCAAId = DnsManagementClient.DnsZoneCAA.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "zone1", "AAAA", "record1");
            var dnsZoneCAA = GetArmClient().GetDnsZoneCAA(dnsZoneCAAId);
            string ifMatch = null;

            await dnsZoneCAA.DeleteAsync(ifMatch);
        }

        [RecordedTest]
        public async Task Delete3()
        {
            // Example: Delete CAA recordset
            var dnsZoneCAAId = DnsManagementClient.DnsZoneCAA.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "zone1", "CAA", "record1");
            var dnsZoneCAA = GetArmClient().GetDnsZoneCAA(dnsZoneCAAId);
            string ifMatch = null;

            await dnsZoneCAA.DeleteAsync(ifMatch);
        }

        [RecordedTest]
        public async Task Delete4()
        {
            // Example: Delete CNAME recordset
            var dnsZoneCAAId = DnsManagementClient.DnsZoneCAA.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "zone1", "A", "record1");
            var dnsZoneCAA = GetArmClient().GetDnsZoneCAA(dnsZoneCAAId);
            string ifMatch = null;

            await dnsZoneCAA.DeleteAsync(ifMatch);
        }

        [RecordedTest]
        public async Task Delete5()
        {
            // Example: Delete MX recordset
            var dnsZoneCAAId = DnsManagementClient.DnsZoneCAA.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "zone1", "A", "record1");
            var dnsZoneCAA = GetArmClient().GetDnsZoneCAA(dnsZoneCAAId);
            string ifMatch = null;

            await dnsZoneCAA.DeleteAsync(ifMatch);
        }

        [RecordedTest]
        public async Task Delete6()
        {
            // Example: Delete NS recordset
            var dnsZoneCAAId = DnsManagementClient.DnsZoneCAA.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "zone1", "A", "record1");
            var dnsZoneCAA = GetArmClient().GetDnsZoneCAA(dnsZoneCAAId);
            string ifMatch = null;

            await dnsZoneCAA.DeleteAsync(ifMatch);
        }

        [RecordedTest]
        public async Task Delete7()
        {
            // Example: Delete PTR recordset
            var dnsZoneCAAId = DnsManagementClient.DnsZoneCAA.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "0.0.127.in-addr.arpa", "PTR", "1");
            var dnsZoneCAA = GetArmClient().GetDnsZoneCAA(dnsZoneCAAId);
            string ifMatch = null;

            await dnsZoneCAA.DeleteAsync(ifMatch);
        }

        [RecordedTest]
        public async Task Delete8()
        {
            // Example: Delete SRV recordset
            var dnsZoneCAAId = DnsManagementClient.DnsZoneCAA.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "zone1", "SRV", "record1");
            var dnsZoneCAA = GetArmClient().GetDnsZoneCAA(dnsZoneCAAId);
            string ifMatch = null;

            await dnsZoneCAA.DeleteAsync(ifMatch);
        }

        [RecordedTest]
        public async Task Delete9()
        {
            // Example: Delete TXT recordset
            var dnsZoneCAAId = DnsManagementClient.DnsZoneCAA.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "zone1", "TXT", "record1");
            var dnsZoneCAA = GetArmClient().GetDnsZoneCAA(dnsZoneCAAId);
            string ifMatch = null;

            await dnsZoneCAA.DeleteAsync(ifMatch);
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: Patch A recordset
            var dnsZoneCAAId = DnsManagementClient.DnsZoneCAA.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "zone1", "A", "record1");
            var dnsZoneCAA = GetArmClient().GetDnsZoneCAA(dnsZoneCAAId);
            DnsManagementClient.RecordSetData parameters = new DnsManagementClient.RecordSetData();
            string ifMatch = null;

            await dnsZoneCAA.UpdateAsync(parameters, ifMatch);
        }

        [RecordedTest]
        public async Task Update2()
        {
            // Example: Patch AAAA recordset
            var dnsZoneCAAId = DnsManagementClient.DnsZoneCAA.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "zone1", "AAAA", "record1");
            var dnsZoneCAA = GetArmClient().GetDnsZoneCAA(dnsZoneCAAId);
            DnsManagementClient.RecordSetData parameters = new DnsManagementClient.RecordSetData();
            string ifMatch = null;

            await dnsZoneCAA.UpdateAsync(parameters, ifMatch);
        }

        [RecordedTest]
        public async Task Update3()
        {
            // Example: Patch CAA recordset
            var dnsZoneCAAId = DnsManagementClient.DnsZoneCAA.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "zone1", "CAA", "record1");
            var dnsZoneCAA = GetArmClient().GetDnsZoneCAA(dnsZoneCAAId);
            DnsManagementClient.RecordSetData parameters = new DnsManagementClient.RecordSetData();
            string ifMatch = null;

            await dnsZoneCAA.UpdateAsync(parameters, ifMatch);
        }

        [RecordedTest]
        public async Task Update4()
        {
            // Example: Patch CNAME recordset
            var dnsZoneCAAId = DnsManagementClient.DnsZoneCAA.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "zone1", "CNAME", "record1");
            var dnsZoneCAA = GetArmClient().GetDnsZoneCAA(dnsZoneCAAId);
            DnsManagementClient.RecordSetData parameters = new DnsManagementClient.RecordSetData();
            string ifMatch = null;

            await dnsZoneCAA.UpdateAsync(parameters, ifMatch);
        }

        [RecordedTest]
        public async Task Update5()
        {
            // Example: Patch MX recordset
            var dnsZoneCAAId = DnsManagementClient.DnsZoneCAA.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "zone1", "MX", "record1");
            var dnsZoneCAA = GetArmClient().GetDnsZoneCAA(dnsZoneCAAId);
            DnsManagementClient.RecordSetData parameters = new DnsManagementClient.RecordSetData();
            string ifMatch = null;

            await dnsZoneCAA.UpdateAsync(parameters, ifMatch);
        }

        [RecordedTest]
        public async Task Update6()
        {
            // Example: Patch NS recordset
            var dnsZoneCAAId = DnsManagementClient.DnsZoneCAA.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "zone1", "NS", "record1");
            var dnsZoneCAA = GetArmClient().GetDnsZoneCAA(dnsZoneCAAId);
            DnsManagementClient.RecordSetData parameters = new DnsManagementClient.RecordSetData();
            string ifMatch = null;

            await dnsZoneCAA.UpdateAsync(parameters, ifMatch);
        }

        [RecordedTest]
        public async Task Update7()
        {
            // Example: Patch PTR recordset
            var dnsZoneCAAId = DnsManagementClient.DnsZoneCAA.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "0.0.127.in-addr.arpa", "PTR", "1");
            var dnsZoneCAA = GetArmClient().GetDnsZoneCAA(dnsZoneCAAId);
            DnsManagementClient.RecordSetData parameters = new DnsManagementClient.RecordSetData();
            string ifMatch = null;

            await dnsZoneCAA.UpdateAsync(parameters, ifMatch);
        }

        [RecordedTest]
        public async Task Update8()
        {
            // Example: Patch SOA recordset
            var dnsZoneCAAId = DnsManagementClient.DnsZoneCAA.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "zone1", "SOA", "@");
            var dnsZoneCAA = GetArmClient().GetDnsZoneCAA(dnsZoneCAAId);
            DnsManagementClient.RecordSetData parameters = new DnsManagementClient.RecordSetData();
            string ifMatch = null;

            await dnsZoneCAA.UpdateAsync(parameters, ifMatch);
        }

        [RecordedTest]
        public async Task Update9()
        {
            // Example: Patch SRV recordset
            var dnsZoneCAAId = DnsManagementClient.DnsZoneCAA.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "zone1", "SRV", "record1");
            var dnsZoneCAA = GetArmClient().GetDnsZoneCAA(dnsZoneCAAId);
            DnsManagementClient.RecordSetData parameters = new DnsManagementClient.RecordSetData();
            string ifMatch = null;

            await dnsZoneCAA.UpdateAsync(parameters, ifMatch);
        }

        [RecordedTest]
        public async Task Update10()
        {
            // Example: Patch TXT recordset
            var dnsZoneCAAId = DnsManagementClient.DnsZoneCAA.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "zone1", "TXT", "record1");
            var dnsZoneCAA = GetArmClient().GetDnsZoneCAA(dnsZoneCAAId);
            DnsManagementClient.RecordSetData parameters = new DnsManagementClient.RecordSetData();
            string ifMatch = null;

            await dnsZoneCAA.UpdateAsync(parameters, ifMatch);
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;
using Azure.ResourceManager.WebPubSub;
using Azure.ResourceManager.WebPubSub.Models;

namespace Azure.ResourceManager.WebPubSub.Tests.Mock
{
    /// <summary> Test for WebPubSubHub. </summary>
    public partial class WebPubSubHubCollectionMockTests : MockTestBase
    {
        public WebPubSubHubCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: WebPubSubHubs_CreateOrUpdate
            string hubName = "exampleHub";
            WebPubSubHubData parameters = new WebPubSubHubData(properties: new Models.WebPubSubHubProperties());

            var webPubSubId = WebPubSub.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myWebPubSubService");
            var collection = GetArmClient().GetWebPubSub(webPubSubId).GetWebPubSubHubs();
            await collection.CreateOrUpdateAsync(hubName, parameters);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: WebPubSubHubs_Get
            string hubName = "exampleHub";

            var webPubSubId = WebPubSub.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myWebPubSubService");
            var collection = GetArmClient().GetWebPubSub(webPubSubId).GetWebPubSubHubs();
            await collection.GetAsync(hubName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: WebPubSubHubs_List

            var webPubSubId = WebPubSub.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myWebPubSubService");
            var collection = GetArmClient().GetWebPubSub(webPubSubId).GetWebPubSubHubs();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

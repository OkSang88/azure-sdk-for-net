// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Network;
using Azure.ResourceManager.Network.Models;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Network.Tests.Mock
{
    /// <summary> Test for AzureFirewall. </summary>
    public partial class AzureFirewallCollectionMockTests : MockTestBase
    {
        public AzureFirewallCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: Create Azure Firewall
            string azureFirewallName = "azurefirewall";
            Network.AzureFirewallData parameters = new Network.AzureFirewallData()
            {
                ThreatIntelMode = new Network.Models.AzureFirewallThreatIntelMode("Alert"),
                Sku = new Network.Models.AzureFirewallSku()
                {
                    Name = new Network.Models.AzureFirewallSkuName("AZFW_VNet"),
                    Tier = new Network.Models.AzureFirewallSkuTier("Standard"),
                },
                Location = "West US",
            };

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1")).GetAzureFirewalls();
            await collection.CreateOrUpdateAsync(true, azureFirewallName, parameters);
        }

        [RecordedTest]
        public async Task CreateOrUpdate2()
        {
            // Example: Create Azure Firewall With Additional Properties
            string azureFirewallName = "azurefirewall";
            Network.AzureFirewallData parameters = new Network.AzureFirewallData()
            {
                ThreatIntelMode = new Network.Models.AzureFirewallThreatIntelMode("Alert"),
                Sku = new Network.Models.AzureFirewallSku()
                {
                    Name = new Network.Models.AzureFirewallSkuName("AZFW_VNet"),
                    Tier = new Network.Models.AzureFirewallSkuTier("Standard"),
                },
                Location = "West US",
            };

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1")).GetAzureFirewalls();
            await collection.CreateOrUpdateAsync(true, azureFirewallName, parameters);
        }

        [RecordedTest]
        public async Task CreateOrUpdate3()
        {
            // Example: Create Azure Firewall With IpGroups
            string azureFirewallName = "azurefirewall";
            Network.AzureFirewallData parameters = new Network.AzureFirewallData()
            {
                ThreatIntelMode = new Network.Models.AzureFirewallThreatIntelMode("Alert"),
                Sku = new Network.Models.AzureFirewallSku()
                {
                    Name = new Network.Models.AzureFirewallSkuName("AZFW_VNet"),
                    Tier = new Network.Models.AzureFirewallSkuTier("Standard"),
                },
                Location = "West US",
            };

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1")).GetAzureFirewalls();
            await collection.CreateOrUpdateAsync(true, azureFirewallName, parameters);
        }

        [RecordedTest]
        public async Task CreateOrUpdate4()
        {
            // Example: Create Azure Firewall With Zones
            string azureFirewallName = "azurefirewall";
            Network.AzureFirewallData parameters = new Network.AzureFirewallData()
            {
                ThreatIntelMode = new Network.Models.AzureFirewallThreatIntelMode("Alert"),
                Sku = new Network.Models.AzureFirewallSku()
                {
                    Name = new Network.Models.AzureFirewallSkuName("AZFW_VNet"),
                    Tier = new Network.Models.AzureFirewallSkuTier("Standard"),
                },
                Location = "West US 2",
            };

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1")).GetAzureFirewalls();
            await collection.CreateOrUpdateAsync(true, azureFirewallName, parameters);
        }

        [RecordedTest]
        public async Task CreateOrUpdate5()
        {
            // Example: Create Azure Firewall With management subnet
            string azureFirewallName = "azurefirewall";
            Network.AzureFirewallData parameters = new Network.AzureFirewallData()
            {
                ManagementIpConfiguration = new Network.Models.AzureFirewallIPConfiguration()
                {
                    Name = "azureFirewallMgmtIpConfiguration",
                    Subnet = new WritableSubResource()
                    {
                        Id = new ResourceIdentifier($"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnet2/subnets/AzureFirewallManagementSubnet"),
                    },
                    PublicIPAddress = new WritableSubResource()
                    {
                        Id = new ResourceIdentifier($"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/managementPipName"),
                    },
                },
                ThreatIntelMode = new Network.Models.AzureFirewallThreatIntelMode("Alert"),
                Sku = new Network.Models.AzureFirewallSku()
                {
                    Name = new Network.Models.AzureFirewallSkuName("AZFW_VNet"),
                    Tier = new Network.Models.AzureFirewallSkuTier("Standard"),
                },
                Location = "West US",
            };

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1")).GetAzureFirewalls();
            await collection.CreateOrUpdateAsync(true, azureFirewallName, parameters);
        }

        [RecordedTest]
        public async Task CreateOrUpdate6()
        {
            // Example: Create Azure Firewall in virtual Hub
            string azureFirewallName = "azurefirewall";
            Network.AzureFirewallData parameters = new Network.AzureFirewallData()
            {
                ThreatIntelMode = new Network.Models.AzureFirewallThreatIntelMode("Alert"),
                VirtualHub = new WritableSubResource()
                {
                    Id = new ResourceIdentifier($"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/hub1"),
                },
                FirewallPolicy = new WritableSubResource()
                {
                    Id = new ResourceIdentifier($"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Network/firewallPolicies/policy1"),
                },
                HubIPAddresses = new Network.Models.HubIPAddresses()
                {
                    PublicIPs = new Network.Models.HubPublicIPAddresses()
                    {
                        Count = 1,
                    },
                },
                Sku = new Network.Models.AzureFirewallSku()
                {
                    Name = new Network.Models.AzureFirewallSkuName("AZFW_Hub"),
                    Tier = new Network.Models.AzureFirewallSkuTier("Standard"),
                },
                Location = "West US",
            };

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1")).GetAzureFirewalls();
            await collection.CreateOrUpdateAsync(true, azureFirewallName, parameters);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get Azure Firewall
            string azureFirewallName = "azurefirewall";

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1")).GetAzureFirewalls();
            await collection.GetAsync(azureFirewallName);
        }

        [RecordedTest]
        public async Task Get2()
        {
            // Example: Get Azure Firewall With Additional Properties
            string azureFirewallName = "azurefirewall";

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1")).GetAzureFirewalls();
            await collection.GetAsync(azureFirewallName);
        }

        [RecordedTest]
        public async Task Get3()
        {
            // Example: Get Azure Firewall With IpGroups
            string azureFirewallName = "azurefirewall";

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1")).GetAzureFirewalls();
            await collection.GetAsync(azureFirewallName);
        }

        [RecordedTest]
        public async Task Get4()
        {
            // Example: Get Azure Firewall With Zones
            string azureFirewallName = "azurefirewall";

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1")).GetAzureFirewalls();
            await collection.GetAsync(azureFirewallName);
        }

        [RecordedTest]
        public async Task Get5()
        {
            // Example: Get Azure Firewall With management subnet
            string azureFirewallName = "azurefirewall";

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1")).GetAzureFirewalls();
            await collection.GetAsync(azureFirewallName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: List all Azure Firewalls for a given resource group

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1")).GetAzureFirewalls();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace RedisManagementClient.Models
{
    /// <summary> Create properties for a linked server. </summary>
    internal partial class RedisLinkedServerCreateProperties
    {
        /// <summary> Initializes a new instance of RedisLinkedServerCreateProperties. </summary>
        /// <param name="linkedRedisCacheId"> Fully qualified resourceId of the linked redis cache. </param>
        /// <param name="linkedRedisCacheLocation"> Location of the linked redis cache. </param>
        /// <param name="serverRole"> Role of the linked server. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="linkedRedisCacheId"/> or <paramref name="linkedRedisCacheLocation"/> is null. </exception>
        internal RedisLinkedServerCreateProperties(string linkedRedisCacheId, string linkedRedisCacheLocation, ReplicationRole serverRole)
        {
            if (linkedRedisCacheId == null)
            {
                throw new ArgumentNullException(nameof(linkedRedisCacheId));
            }
            if (linkedRedisCacheLocation == null)
            {
                throw new ArgumentNullException(nameof(linkedRedisCacheLocation));
            }

            LinkedRedisCacheId = linkedRedisCacheId;
            LinkedRedisCacheLocation = linkedRedisCacheLocation;
            ServerRole = serverRole;
        }

        /// <summary> Fully qualified resourceId of the linked redis cache. </summary>
        public string LinkedRedisCacheId { get; }
        /// <summary> Location of the linked redis cache. </summary>
        public string LinkedRedisCacheLocation { get; }
        /// <summary> Role of the linked server. </summary>
        public ReplicationRole ServerRole { get; }
    }
}

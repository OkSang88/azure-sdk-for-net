// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;
using NotificationHubsManagementClient;
using NotificationHubsManagementClient.Models;

namespace NotificationHubsManagementClient.Tests.Mock
{
    /// <summary> Test for NotificationHubResource. </summary>
    public partial class NotificationHubResourceMockTests : MockTestBase
    {
        public NotificationHubResourceMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: NotificationHubGet
            var notificationHubResourceId = NotificationHubsManagementClient.NotificationHubResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "5ktrial", "nh-sdk-ns", "nh-sdk-hub");
            var notificationHubResource = GetArmClient().GetNotificationHubResource(notificationHubResourceId);

            await notificationHubResource.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: NotificationHubDelete
            var notificationHubResourceId = NotificationHubsManagementClient.NotificationHubResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "5ktrial", "nh-sdk-ns", "nh-sdk-hub");
            var notificationHubResource = GetArmClient().GetNotificationHubResource(notificationHubResourceId);

            await notificationHubResource.DeleteAsync(true);
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: NotificationHubPatch
            var notificationHubResourceId = NotificationHubsManagementClient.NotificationHubResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "sdkresourceGroup", "nh-sdk-ns", "sdk-notificationHubs-8708");
            var notificationHubResource = GetArmClient().GetNotificationHubResource(notificationHubResourceId);
            NotificationHubsManagementClient.Models.NotificationHubPatchParameters parameters = new NotificationHubsManagementClient.Models.NotificationHubPatchParameters(location: AzureLocation.WestUS);

            await notificationHubResource.UpdateAsync(parameters);
        }

        [RecordedTest]
        public async Task DebugSend()
        {
            // Example: debugsend
            var notificationHubResourceId = NotificationHubsManagementClient.NotificationHubResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "5ktrial", "nh-sdk-ns", "nh-sdk-hub");
            var notificationHubResource = GetArmClient().GetNotificationHubResource(notificationHubResourceId);
            object parameters = new Dictionary<string, object>()
            {
                ["data"] = new Dictionary<string, object>()
                {
                    ["message"] = "Hello",
                }
            ,
            }
            ;

            await notificationHubResource.DebugSendAsync(parameters);
        }

        [RecordedTest]
        public async Task GetPnsCredentials()
        {
            // Example: notificationHubPnsCredentials
            var notificationHubResourceId = NotificationHubsManagementClient.NotificationHubResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "5ktrial", "nh-sdk-ns", "nh-sdk-hub");
            var notificationHubResource = GetArmClient().GetNotificationHubResource(notificationHubResourceId);

            await notificationHubResource.GetPnsCredentialsAsync();
        }
    }
}

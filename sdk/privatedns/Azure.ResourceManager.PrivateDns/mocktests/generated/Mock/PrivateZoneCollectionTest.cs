// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Core.TestFramework;
using Azure.ResourceManager.PrivateDns;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.PrivateDns.Tests.Mock
{
    /// <summary> Test for PrivateZone. </summary>
    public partial class PrivateZoneCollectionMockTests : MockTestBase
    {
        public PrivateZoneCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: PUT Private DNS Zone
            string privateZoneName = "privatezone1.com";
            PrivateDns.PrivateZoneData parameters = new PrivateDns.PrivateZoneData(location: "Global")
            {
            };
            parameters.Tags.ReplaceWith(new Dictionary<string, string>()
            {
                ["key1"] = "value1",
            });
            string ifMatch = null;
            string ifNoneMatch = null;

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1")).GetPrivateZones();
            await collection.CreateOrUpdateAsync(true, privateZoneName, parameters, ifMatch, ifNoneMatch);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: GET Private DNS Zone
            string privateZoneName = "privatezone1.com";

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1")).GetPrivateZones();
            await collection.GetAsync(privateZoneName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: GET Private DNS Zone by Resource Group
            int? top = null;

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1")).GetPrivateZones();
            await foreach (var _ in collection.GetAllAsync(top))
            {
            }
        }
    }
}

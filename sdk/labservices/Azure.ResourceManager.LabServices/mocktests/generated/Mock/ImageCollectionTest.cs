// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.LabServices;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.LabServices.Tests.Mock
{
    /// <summary> Test for Image. </summary>
    public partial class ImageCollectionMockTests : MockTestBase
    {
        public ImageCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: putImage
            string imageName = "image1";
            LabServices.ImageData body = new LabServices.ImageData()
            {
                EnabledState = LabServices.Models.EnableState.Enabled,
            };

            var labPlanId = LabServices.LabPlan.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg123", "testlabplan");
            var collection = GetArmClient().GetLabPlan(labPlanId).GetImages();
            await collection.CreateOrUpdateAsync(true, imageName, body);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: getImage
            string imageName = "image1";

            var labPlanId = LabServices.LabPlan.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg123", "testlabplan");
            var collection = GetArmClient().GetLabPlan(labPlanId).GetImages();
            await collection.GetAsync(imageName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: listImages
            string filter = null;

            var labPlanId = LabServices.LabPlan.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg123", "testlabplan");
            var collection = GetArmClient().GetLabPlan(labPlanId).GetImages();
            await foreach (var _ in collection.GetAllAsync(filter))
            {
            }
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Sql;
using Azure.ResourceManager.Sql.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Sql.Tests.Mock
{
    /// <summary> Test for DatabaseVulnerabilityAssessment. </summary>
    public partial class ManagedInstanceDatabaseVulnerabilityAssessmentCollectionMockTests : MockTestBase
    {
        public ManagedInstanceDatabaseVulnerabilityAssessmentCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: Create a database's vulnerability assessment with all parameters
            Sql.Models.VulnerabilityAssessmentName vulnerabilityAssessmentName = new Sql.Models.VulnerabilityAssessmentName("default");
            Sql.DatabaseVulnerabilityAssessmentData parameters = new Sql.DatabaseVulnerabilityAssessmentData()
            {
                StorageContainerPath = "https://myStorage.blob.core.windows.net/vulnerability-assessment/",
                StorageContainerSasKey = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
                RecurringScans = new Sql.Models.VulnerabilityAssessmentRecurringScansProperties()
                {
                    IsEnabled = true,
                    EmailSubscriptionAdmins = true,
                },
            };

            var managedDatabaseId = Sql.ManagedDatabase.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "vulnerabilityaseessmenttest-4799", "vulnerabilityaseessmenttest-6440", "testdb");
            var collection = GetArmClient().GetManagedDatabase(managedDatabaseId).GetManagedInstanceDatabaseVulnerabilityAssessments();
            await collection.CreateOrUpdateAsync(true, vulnerabilityAssessmentName, parameters);
        }

        [RecordedTest]
        public async Task CreateOrUpdate2()
        {
            // Example: Create a database's vulnerability assessment with minimal parameters
            Sql.Models.VulnerabilityAssessmentName vulnerabilityAssessmentName = new Sql.Models.VulnerabilityAssessmentName("default");
            Sql.DatabaseVulnerabilityAssessmentData parameters = new Sql.DatabaseVulnerabilityAssessmentData()
            {
                StorageContainerPath = "https://myStorage.blob.core.windows.net/vulnerability-assessment/",
                StorageContainerSasKey = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
            };

            var managedDatabaseId = Sql.ManagedDatabase.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "vulnerabilityaseessmenttest-4799", "vulnerabilityaseessmenttest-6440", "testdb");
            var collection = GetArmClient().GetManagedDatabase(managedDatabaseId).GetManagedInstanceDatabaseVulnerabilityAssessments();
            await collection.CreateOrUpdateAsync(true, vulnerabilityAssessmentName, parameters);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get a database's vulnerability assessment
            Sql.Models.VulnerabilityAssessmentName vulnerabilityAssessmentName = new Sql.Models.VulnerabilityAssessmentName("default");

            var managedDatabaseId = Sql.ManagedDatabase.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "vulnerabilityaseessmenttest-4799", "vulnerabilityaseessmenttest-6440", "testdb");
            var collection = GetArmClient().GetManagedDatabase(managedDatabaseId).GetManagedInstanceDatabaseVulnerabilityAssessments();
            await collection.GetAsync(vulnerabilityAssessmentName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: Get a database's vulnerability assessments list

            var managedDatabaseId = Sql.ManagedDatabase.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "vulnerabilityaseessmenttest-4799", "vulnerabilityaseessmenttest-6440", "testdb");
            var collection = GetArmClient().GetManagedDatabase(managedDatabaseId).GetManagedInstanceDatabaseVulnerabilityAssessments();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

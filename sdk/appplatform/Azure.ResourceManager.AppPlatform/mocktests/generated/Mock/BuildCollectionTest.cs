// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.AppPlatform;
using Azure.ResourceManager.AppPlatform.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.AppPlatform.Tests.Mock
{
    /// <summary> Test for Build. </summary>
    public partial class BuildCollectionMockTests : MockTestBase
    {
        public BuildCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: BuildService_CreateOrUpdateBuild
            string buildName = "mybuild";
            AppPlatform.BuildData build = new AppPlatform.BuildData()
            {
                Properties = new AppPlatform.Models.BuildProperties()
                {
                    RelativePath = "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855-20210601-3ed9f4a2-986b-4bbd-b833-a42dccb2f777",
                    Builder = "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/buildServices/default/builders/default",
                    AgentPool = "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/buildServices/default/agentPools/default",
                },
            };

            var buildServiceId = AppPlatform.BuildService.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myservice", "default");
            var collection = GetArmClient().GetBuildService(buildServiceId).GetBuilds();
            await collection.CreateOrUpdateAsync(true, buildName, build);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: BuildService_GetBuild
            string buildName = "mybuild";

            var buildServiceId = AppPlatform.BuildService.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myservice", "default");
            var collection = GetArmClient().GetBuildService(buildServiceId).GetBuilds();
            await collection.GetAsync(buildName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: BuildService_ListBuilds

            var buildServiceId = AppPlatform.BuildService.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myservice", "default");
            var collection = GetArmClient().GetBuildService(buildServiceId).GetBuilds();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

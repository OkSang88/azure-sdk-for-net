// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Network;
using Azure.ResourceManager.Network.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Network.Tests.Mock
{
    /// <summary> Test for AzureFirewall. </summary>
    public partial class AzureFirewallMockTests : MockTestBase
    {
        public AzureFirewallMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get Azure Firewall
            var azureFirewallId = Network.AzureFirewall.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "azurefirewall");
            var azureFirewall = GetArmClient().GetAzureFirewall(azureFirewallId);

            await azureFirewall.GetAsync();
        }

        [RecordedTest]
        public async Task Get2()
        {
            // Example: Get Azure Firewall With Additional Properties
            var azureFirewallId = Network.AzureFirewall.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "azurefirewall");
            var azureFirewall = GetArmClient().GetAzureFirewall(azureFirewallId);

            await azureFirewall.GetAsync();
        }

        [RecordedTest]
        public async Task Get3()
        {
            // Example: Get Azure Firewall With IpGroups
            var azureFirewallId = Network.AzureFirewall.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "azurefirewall");
            var azureFirewall = GetArmClient().GetAzureFirewall(azureFirewallId);

            await azureFirewall.GetAsync();
        }

        [RecordedTest]
        public async Task Get4()
        {
            // Example: Get Azure Firewall With Zones
            var azureFirewallId = Network.AzureFirewall.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "azurefirewall");
            var azureFirewall = GetArmClient().GetAzureFirewall(azureFirewallId);

            await azureFirewall.GetAsync();
        }

        [RecordedTest]
        public async Task Get5()
        {
            // Example: Get Azure Firewall With management subnet
            var azureFirewallId = Network.AzureFirewall.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "azurefirewall");
            var azureFirewall = GetArmClient().GetAzureFirewall(azureFirewallId);

            await azureFirewall.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: Delete Azure Firewall
            var azureFirewallId = Network.AzureFirewall.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "azurefirewall");
            var azureFirewall = GetArmClient().GetAzureFirewall(azureFirewallId);

            await azureFirewall.DeleteAsync(true);
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: Update Azure Firewall Tags
            var azureFirewallId = Network.AzureFirewall.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "azfwtest", "fw1");
            var azureFirewall = GetArmClient().GetAzureFirewall(azureFirewallId);
            Network.Models.TagsObject parameters = new Network.Models.TagsObject();

            await azureFirewall.UpdateAsync(true, parameters);
        }
    }
}

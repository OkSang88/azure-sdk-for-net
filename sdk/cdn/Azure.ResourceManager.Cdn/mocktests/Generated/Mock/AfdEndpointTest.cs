// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Cdn;
using Azure.ResourceManager.Cdn.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Cdn.Tests.Mock
{
    /// <summary> Test for AfdEndpoint. </summary>
    public partial class AfdEndpointMockTests : MockTestBase
    {
        public AfdEndpointMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: AFDEndpoints_Get
            var afdEndpointId = Cdn.AfdEndpoint.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "RG", "profile1", "endpoint1");
            var afdEndpoint = GetArmClient().GetAfdEndpoint(afdEndpointId);

            await afdEndpoint.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: AFDEndpoints_Delete
            var afdEndpointId = Cdn.AfdEndpoint.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "RG", "profile1", "endpoint1");
            var afdEndpoint = GetArmClient().GetAfdEndpoint(afdEndpointId);

            await afdEndpoint.DeleteAsync();
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: AFDEndpoints_Update
            var afdEndpointId = Cdn.AfdEndpoint.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "RG", "profile1", "endpoint1");
            var afdEndpoint = GetArmClient().GetAfdEndpoint(afdEndpointId);
            Cdn.Models.AfdEndpointUpdateOptions endpointUpdateProperties = new Cdn.Models.AfdEndpointUpdateOptions()
            {
                OriginResponseTimeoutSeconds = 30,
                EnabledState = new Cdn.Models.EnabledState("Enabled"),
            };

            await afdEndpoint.UpdateAsync(endpointUpdateProperties);
        }

        [RecordedTest]
        public async Task PurgeContent()
        {
            // Example: AFDEndpoints_PurgeContent
            var afdEndpointId = Cdn.AfdEndpoint.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "RG", "profile1", "endpoint1");
            var afdEndpoint = GetArmClient().GetAfdEndpoint(afdEndpointId);
            Cdn.Models.AfdPurgeOptions contents = new Cdn.Models.AfdPurgeOptions(contentPaths: new List<string>()
{
"/folder1",});

            await afdEndpoint.PurgeContentAsync(contents);
        }

        [RecordedTest]
        public async Task GetResourceUsage()
        {
            // Example: AFDEndpoints_ListResourceUsage
            var afdEndpointId = Cdn.AfdEndpoint.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "RG", "profile1", "endpoint1");
            var afdEndpoint = GetArmClient().GetAfdEndpoint(afdEndpointId);

            await foreach (var _ in afdEndpoint.GetResourceUsageAsync())
            {
            }
        }

        [RecordedTest]
        public async Task ValidateCustomDomain()
        {
            // Example: Endpoints_ValidateCustomDomain
            var afdEndpointId = Cdn.AfdEndpoint.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "RG", "profile1", "endpoint1");
            var afdEndpoint = GetArmClient().GetAfdEndpoint(afdEndpointId);
            Cdn.Models.ValidateCustomDomainInput customDomainProperties = new Cdn.Models.ValidateCustomDomainInput(hostName: "www.someDomain.com");

            await afdEndpoint.ValidateCustomDomainAsync(customDomainProperties);
        }
    }
}

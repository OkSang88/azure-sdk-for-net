// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;
using AzureQuotaExtensionAPI;

namespace AzureQuotaExtensionAPI.Tests.Mock
{
    /// <summary> Test for CurrentUsagesBase. </summary>
    public partial class CurrentUsagesBaseMockTests : MockTestBase
    {
        public CurrentUsagesBaseMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Quotas_UsagesRequest_ForCompute
            var currentUsagesBaseId = AzureQuotaExtensionAPI.CurrentUsagesBase.CreateResourceIdentifier("subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Compute/locations/eastus", "standardNDSFamily");
            var currentUsagesBase = GetArmClient().GetCurrentUsagesBase(currentUsagesBaseId);

            await currentUsagesBase.GetAsync();
        }

        [RecordedTest]
        public async Task Get2()
        {
            // Example: Quotas_UsagesRequest_ForNetwork
            var currentUsagesBaseId = AzureQuotaExtensionAPI.CurrentUsagesBase.CreateResourceIdentifier("subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Network/locations/eastus", "MinPublicIpInterNetworkPrefixLength");
            var currentUsagesBase = GetArmClient().GetCurrentUsagesBase(currentUsagesBaseId);

            await currentUsagesBase.GetAsync();
        }
    }
}

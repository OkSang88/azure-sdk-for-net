// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;
using StorSimple8000SeriesManagementClient;

namespace StorSimple8000SeriesManagementClient.Tests.Mock
{
    /// <summary> Test for Job. </summary>
    public partial class JobCollectionMockTests : MockTestBase
    {
        public JobCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: JobsGet
            string jobName = "70a29339-de6d-48e8-b24f-e25ee6769a00";

            var deviceId = StorSimple8000SeriesManagementClient.Device.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ResourceGroupForSDKTest", "ManagerForSDKTest1", "sca07forsdktest");
            var collection = GetArmClient().GetDevice(deviceId).GetJobs();
            await collection.GetAsync(jobName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: JobsListByDevice
            string filter = "jobType eq 'ManualBackup'";

            var deviceId = StorSimple8000SeriesManagementClient.Device.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ResourceGroupForSDKTest", "ManagerForSDKTest1", "Device05ForSDKTest");
            var collection = GetArmClient().GetDevice(deviceId).GetJobs();
            await foreach (var _ in collection.GetAllAsync(filter))
            {
            }
        }
    }
}

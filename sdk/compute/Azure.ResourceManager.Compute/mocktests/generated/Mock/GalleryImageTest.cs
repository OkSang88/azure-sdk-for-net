// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.Compute.Models;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Compute.Tests.Mock
{
    /// <summary> Test for GalleryImage. </summary>
    public partial class GalleryImageMockTests : MockTestBase
    {
        public GalleryImageMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get a gallery image.
            var galleryImage = GetArmClient().GetGalleryImage(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Compute/galleries/myGalleryName/images/myGalleryImageName"));

            await galleryImage.GetAsync();
        }

        [RecordedTest]
        public async Task DeleteAsync()
        {
            // Example: Delete a gallery image.
            var galleryImage = GetArmClient().GetGalleryImage(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Compute/galleries/myGalleryName/images/myGalleryImageName"));

            await galleryImage.DeleteAsync();
        }

        [RecordedTest]
        public async Task UpdateAsync()
        {
            // Example: Update a simple gallery image.
            var galleryImage = GetArmClient().GetGalleryImage(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Compute/galleries/myGalleryName/images/myGalleryImageName"));
            Compute.Models.GalleryImageUpdate galleryImage2 = new Compute.Models.GalleryImageUpdate()
            {
                OsType = Compute.Models.OperatingSystemTypes.Windows,
                OsState = Compute.Models.OperatingSystemStateTypes.Generalized,
                HyperVGeneration = new Compute.Models.HyperVGeneration("V1"),
                Identifier = new Compute.Models.GalleryImageIdentifier(publisher: "myPublisherName", offer: "myOfferName", sku: "mySkuName"),
            };

            await galleryImage.UpdateAsync(galleryImage2);
        }
    }
}

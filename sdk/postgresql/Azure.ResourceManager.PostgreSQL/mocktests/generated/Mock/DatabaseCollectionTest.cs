// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.PostgreSQL.Tests.Mock;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.PostgreSQL.Tests.Mock.Tests.Mock
{
    /// <summary> Test for Database. </summary>
    public partial class DatabaseCollectionMockTests : MockTestBase
    {
        public DatabaseCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: Create a database
            string databaseName = "db1";
            PostgreSQL.Tests.Mock.DatabaseData parameters = new PostgreSQL.Tests.Mock.DatabaseData()
            {
                Charset = "utf8",
                Collation = "en_US.utf8",
            };

            var serverId = PostgreSQL.Tests.Mock.Server.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "TestGroup", "testserver");
            var collection = GetArmClient().GetServer(serverId).GetDatabases();
            await collection.CreateOrUpdateAsync(true, databaseName, parameters);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get a database
            string databaseName = "db1";

            var serverId = PostgreSQL.Tests.Mock.Server.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "TestGroup", "testserver");
            var collection = GetArmClient().GetServer(serverId).GetDatabases();
            await collection.GetAsync(databaseName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: List databases in a server

            var serverId = PostgreSQL.Tests.Mock.Server.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "TestGroup", "testserver");
            var collection = GetArmClient().GetServer(serverId).GetDatabases();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

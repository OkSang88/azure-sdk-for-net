// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.Redis.Models
{
    /// <summary> Properties of a linked server to be returned in get/put response. </summary>
    internal partial class RedisLinkedServerProperties : RedisLinkedServerCreateProperties
    {
        /// <summary> Initializes a new instance of RedisLinkedServerProperties. </summary>
        /// <param name="linkedRedisCacheId"> Fully qualified resourceId of the linked redis cache. </param>
        /// <param name="linkedRedisCacheLocation"> Location of the linked redis cache. </param>
        /// <param name="serverRole"> Role of the linked server. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="linkedRedisCacheId"/> or <paramref name="linkedRedisCacheLocation"/> is null. </exception>
        internal RedisLinkedServerProperties(string linkedRedisCacheId, string linkedRedisCacheLocation, ReplicationRole serverRole) : base(linkedRedisCacheId, linkedRedisCacheLocation, serverRole)
        {
            if (linkedRedisCacheId == null)
            {
                throw new ArgumentNullException(nameof(linkedRedisCacheId));
            }
            if (linkedRedisCacheLocation == null)
            {
                throw new ArgumentNullException(nameof(linkedRedisCacheLocation));
            }
        }

        /// <summary> Terminal state of the link between primary and secondary redis cache. </summary>
        public string ProvisioningState { get; }
    }
}

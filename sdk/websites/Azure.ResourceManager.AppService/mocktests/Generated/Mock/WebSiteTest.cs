// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.AppService.Models;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.AppService.Tests.Mock
{
    /// <summary> Test for WebSite. </summary>
    public partial class WebSiteMockTests : MockTestBase
    {
        public WebSiteMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public void GetSiteBackupsAsync()
        {
            // Example: List backups
            var webSite = GetArmClient().GetWebSite(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testrg123/providers/Microsoft.Web/sites/tests346"));

            webSite.GetSiteBackupsAsync();
        }

        [RecordedTest]
        public async Task GetNetworkTraceOperationAsync()
        {
            // Example: Get the current status of a network trace operation for a site
            var webSite = GetArmClient().GetWebSite(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testrg123/providers/Microsoft.Web/sites/SampleApp"));
            string operationId = "c291433b-53ad-4c49-8cae-0a293eae1c6d";

            await webSite.GetNetworkTraceOperationAsync(operationId);
        }

        [RecordedTest]
        public async Task StartWebSiteNetworkTraceOperationAsync()
        {
            // Example: Start a new network trace operation for a site
            var webSite = GetArmClient().GetWebSite(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testrg123/providers/Microsoft.Web/sites/SampleApp"));
            int? durationInSeconds = 60;
            int? maxFrameLength = null;
            string sasUrl = null;

            await webSite.StartWebSiteNetworkTraceOperationAsync(durationInSeconds, maxFrameLength, sasUrl);
        }

        [RecordedTest]
        public async Task StopWebSiteNetworkTraceAsync()
        {
            // Example: Stop a currently running network trace operation for a site
            var webSite = GetArmClient().GetWebSite(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testrg123/providers/Microsoft.Web/sites/SampleApp"));

            await webSite.StopWebSiteNetworkTraceAsync();
        }

        [RecordedTest]
        public async Task GetNetworkTracesAsync()
        {
            // Example: Get NetworkTraces for a site
            var webSite = GetArmClient().GetWebSite(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testrg123/providers/Microsoft.Web/sites/SampleApp"));
            string operationId = "c291433b-53ad-4c49-8cae-0a293eae1c6d";

            await webSite.GetNetworkTracesAsync(operationId);
        }

        [RecordedTest]
        public async Task GetNetworkTraceOperationV2Async()
        {
            // Example: Get the current status of a network trace operation for a site
            var webSite = GetArmClient().GetWebSite(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testrg123/providers/Microsoft.Web/sites/SampleApp"));
            string operationId = "c291433b-53ad-4c49-8cae-0a293eae1c6d";

            await webSite.GetNetworkTraceOperationV2Async(operationId);
        }

        [RecordedTest]
        public async Task GetNetworkTracesV2Async()
        {
            // Example: Get NetworkTraces for a site
            var webSite = GetArmClient().GetWebSite(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testrg123/providers/Microsoft.Web/sites/SampleApp"));
            string operationId = "c291433b-53ad-4c49-8cae-0a293eae1c6d";

            await webSite.GetNetworkTracesV2Async(operationId);
        }

        [RecordedTest]
        public async Task GetPrivateLinkResourcesAsync()
        {
            // Example: Get private link resources of a site
            var webSite = GetArmClient().GetWebSite(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg/providers/Microsoft.Web/sites/testSite"));

            await webSite.GetPrivateLinkResourcesAsync();
        }

        [RecordedTest]
        public async Task StartNetworkTraceAsync()
        {
            // Example: Start a new network trace operation for a site
            var webSite = GetArmClient().GetWebSite(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testrg123/providers/Microsoft.Web/sites/SampleApp"));
            int? durationInSeconds = 60;
            int? maxFrameLength = null;
            string sasUrl = null;

            await webSite.StartNetworkTraceAsync(durationInSeconds, maxFrameLength, sasUrl);
        }

        [RecordedTest]
        public async Task StopNetworkTraceAsync()
        {
            // Example: Stop a currently running network trace operation for a site
            var webSite = GetArmClient().GetWebSite(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testrg123/providers/Microsoft.Web/sites/SampleApp"));

            await webSite.StopNetworkTraceAsync();
        }

        [RecordedTest]
        public async Task SiteResourceHealthMetadataGetAsync()
        {
            // Example: Get ResourceHealthMetadata
            var siteResourceHealthMetadata = GetArmClient().GetSiteResourceHealthMetadata(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/Default-Web-NorthCentralUS/providers/Microsoft.Web/sites/newsiteinnewASE-NCUS/resourceHealthMetadata/default"));

            await siteResourceHealthMetadata.GetAsync();
        }

        [RecordedTest]
        public async Task BasicPublishingCredentialsPolicyFtpGetAsync()
        {
            // Example: Get FTP Allowed
            var basicPublishingCredentialsPolicyFtp = GetArmClient().GetBasicPublishingCredentialsPolicyFtp(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg/providers/Microsoft.Web/sites/testSite/basicPublishingCredentialsPolicies/ftp"));

            await basicPublishingCredentialsPolicyFtp.GetAsync();
        }

        [RecordedTest]
        public async Task SiteBasicPublishingCredentialsPolicyScmGetAsync()
        {
            // Example: Get SCM Allowed
            var siteBasicPublishingCredentialsPolicyScm = GetArmClient().GetSiteBasicPublishingCredentialsPolicyScm(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg/providers/Microsoft.Web/sites/testSite/basicPublishingCredentialsPolicies/scm"));

            await siteBasicPublishingCredentialsPolicyScm.GetAsync();
        }
    }
}

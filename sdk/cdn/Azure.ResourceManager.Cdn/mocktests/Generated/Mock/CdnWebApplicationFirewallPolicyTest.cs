// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Cdn;
using Azure.ResourceManager.Cdn.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Cdn.Tests.Mock
{
    /// <summary> Test for CdnWebApplicationFirewallPolicy. </summary>
    public partial class CdnWebApplicationFirewallPolicyMockTests : MockTestBase
    {
        public CdnWebApplicationFirewallPolicyMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get Policy
            var cdnWebApplicationFirewallPolicyId = Cdn.CdnWebApplicationFirewallPolicy.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "MicrosoftCdnWafPolicy");
            var cdnWebApplicationFirewallPolicy = GetArmClient().GetCdnWebApplicationFirewallPolicy(cdnWebApplicationFirewallPolicyId);

            await cdnWebApplicationFirewallPolicy.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: Delete protection policy
            var cdnWebApplicationFirewallPolicyId = Cdn.CdnWebApplicationFirewallPolicy.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "Policy1");
            var cdnWebApplicationFirewallPolicy = GetArmClient().GetCdnWebApplicationFirewallPolicy(cdnWebApplicationFirewallPolicyId);

            await cdnWebApplicationFirewallPolicy.DeleteAsync();
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: Creates specific policy
            var cdnWebApplicationFirewallPolicyId = Cdn.CdnWebApplicationFirewallPolicy.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "MicrosoftCdnWafPolicy");
            var cdnWebApplicationFirewallPolicy = GetArmClient().GetCdnWebApplicationFirewallPolicy(cdnWebApplicationFirewallPolicyId);
            Cdn.Models.CdnWebApplicationFirewallPolicyPatchOptions cdnWebApplicationFirewallPolicyPatchParameters = new Cdn.Models.CdnWebApplicationFirewallPolicyPatchOptions();

            await cdnWebApplicationFirewallPolicy.UpdateAsync(cdnWebApplicationFirewallPolicyPatchParameters);
        }
    }
}

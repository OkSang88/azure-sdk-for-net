// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.StorSimple8000Series.Tests.Mock;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.StorSimple8000Series.Tests.Mock.Tests.Mock
{
    /// <summary> Test for Volume. </summary>
    public partial class VolumeCollectionMockTests : MockTestBase
    {
        public VolumeCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: VolumesCreateOrUpdate
            string volumeName = "Volume1ForSDKTest";
            StorSimple8000Series.Tests.Mock.VolumeData parameters = new StorSimple8000Series.Tests.Mock.VolumeData(sizeInBytes: 5368709120, volumeType: StorSimple8000Series.Tests.Mock.Models.VolumeType.Tiered, accessControlRecordIds: new List<string>()
{
"/subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.StorSimple/managers/ManagerForSDKTest1/accessControlRecords/ACR2",}, volumeStatus: StorSimple8000Series.Tests.Mock.Models.VolumeStatus.Offline, monitoringStatus: StorSimple8000Series.Tests.Mock.Models.MonitoringStatus.Enabled);

            var volumeContainerId = StorSimple8000Series.Tests.Mock.VolumeContainer.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ResourceGroupForSDKTest", "ManagerForSDKTest1", "Device05ForSDKTest", "VolumeContainerForSDKTest");
            var collection = GetArmClient().GetVolumeContainer(volumeContainerId).GetVolumes();
            await collection.CreateOrUpdateAsync(true, volumeName, parameters);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: VolumesGet
            string volumeName = "Volume1ForSDKTest";

            var volumeContainerId = StorSimple8000Series.Tests.Mock.VolumeContainer.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ResourceGroupForSDKTest", "ManagerForSDKTest1", "Device05ForSDKTest", "VolumeContainerForSDKTest");
            var collection = GetArmClient().GetVolumeContainer(volumeContainerId).GetVolumes();
            await collection.GetAsync(volumeName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: VolumesListByVolumeContainer

            var volumeContainerId = StorSimple8000Series.Tests.Mock.VolumeContainer.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ResourceGroupForSDKTest", "ManagerForSDKTest1", "Device05ForSDKTest", "volumeContainerForSDKTest");
            var collection = GetArmClient().GetVolumeContainer(volumeContainerId).GetVolumes();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

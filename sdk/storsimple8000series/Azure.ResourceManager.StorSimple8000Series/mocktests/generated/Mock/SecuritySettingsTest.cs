// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.StorSimple8000Series;
using Azure.ResourceManager.StorSimple8000Series.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.StorSimple8000Series.Tests.Mock
{
    /// <summary> Test for SecuritySettings. </summary>
    public partial class SecuritySettingsMockTests : MockTestBase
    {
        public SecuritySettingsMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: DeviceSettingsGetSecuritySettings
            var securitySettingsId = StorSimple8000Series.SecuritySettings.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ResourceGroupForSDKTest", "ManagerForSDKTest1", "Device05ForSDKTest");
            var securitySettings = GetArmClient().GetSecuritySettings(securitySettingsId);

            await securitySettings.GetAsync();
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: DeviceSettingsUpdateSecuritySettings
            var securitySettingsId = StorSimple8000Series.SecuritySettings.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ResourceGroupForSDKTest", "ManagerForSDKTest1", "Device05ForSDKTest");
            var securitySettings = GetArmClient().GetSecuritySettings(securitySettingsId);
            StorSimple8000Series.Models.SecuritySettingsPatch parameters = new StorSimple8000Series.Models.SecuritySettingsPatch()
            {
                RemoteManagementSettings = new StorSimple8000Series.Models.RemoteManagementSettingsPatch(remoteManagementMode: StorSimple8000Series.Models.RemoteManagementModeConfiguration.HttpsAndHttpEnabled),
                DeviceAdminPassword = new StorSimple8000Series.Models.AsymmetricEncryptedSecret(value: "<value>", encryptionAlgorithm: StorSimple8000Series.Models.EncryptionAlgorithm.RsaesPkcs1V15)
                {
                    EncryptionCertThumbprint = "A872A2DF196AC7682EE24791E7DE2E2A360F5926",
                },
                SnapshotPassword = new StorSimple8000Series.Models.AsymmetricEncryptedSecret(value: "<value>", encryptionAlgorithm: StorSimple8000Series.Models.EncryptionAlgorithm.RsaesPkcs1V15)
                {
                    EncryptionCertThumbprint = "A872A2DF196AC7682EE24791E7DE2E2A360F5926",
                },
                ChapSettings = new StorSimple8000Series.Models.ChapSettings()
                {
                    InitiatorUser = "test-initiator-user",
                    InitiatorSecret = new StorSimple8000Series.Models.AsymmetricEncryptedSecret(value: "V/uVfWk5OcXfMC0HvUV89o9+cmF636jBnqhFM1pD/zHhmh8Z1KB5/LhVV3T53uGjIlKL3wjhwg+9NIQrIbYuKhl/r8jSftSSH+WqUnQHTRDWazjPAeMu6ozrL5RYzP1h5mgw7XtidZPaaV9ae/uF1KQPkK6TIARaOTdr8I/BLWUg7WdDrfARNYHnW6ezXek1M9Qhv1sL9fZY+JrGB58LF6D2aC2Xjed4K4Jk6v2T1ieneNV27uIdnt21TajuM7w90UlRiVZJZtq/KdEUfqI28C7VoUdcXluAwzR95Ho8hmyIJDqeW3/Wxymdjv+Rctwqtmcka9i2G85Hj8SVV3g4kA==", encryptionAlgorithm: StorSimple8000Series.Models.EncryptionAlgorithm.RsaesPkcs1V15)
                    {
                        EncryptionCertThumbprint = "A872A2DF196AC7682EE24791E7DE2E2A360F5926",
                    },
                    TargetUser = "test-target-user",
                    TargetSecret = new StorSimple8000Series.Models.AsymmetricEncryptedSecret(value: "OTR4uwVpy+pf0zthnCIAUXurC8NdSh8RpRG5GWL9TSv4WtkVmpeU/U2A4vjkrchfQOzI1x+uooWikWW9txwwQOM+/N3NG44+/dlHoaEe7AxjmItCKhNj8K2RM6D1mb45wicbF/M4uanuXnGXuT+JmZ+1Lcy2k1GXsk67ejplz2K08h37B+oIW85qMUHLdKuuQlAA/fFS+q6qMti3j2Q8Fr+Sh4U76/2AZVkKRtFeqPB1QhC12dFx6TFoZJkMFzdQz4WNvWVelIK2McKNnOiH0/Z5lAXC7164uzReAoTEfqoNU7qqqRrHhsdwWPu6jbeUn8BQnr7A/X6NWvgeax+HGA==", encryptionAlgorithm: StorSimple8000Series.Models.EncryptionAlgorithm.RsaesPkcs1V15)
                    {
                        EncryptionCertThumbprint = "A872A2DF196AC7682EE24791E7DE2E2A360F5926",
                    },
                },
            };

            await securitySettings.UpdateAsync(true, parameters);
        }

        [RecordedTest]
        public async Task SyncRemotemanagementCertificate()
        {
            // Example: DeviceSettingsSyncRemotemanagementCertificate
            var securitySettingsId = StorSimple8000Series.SecuritySettings.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ResourceGroupForSDKTest", "ManagerForSDKTest1", "Device05ForSDKTest");
            var securitySettings = GetArmClient().GetSecuritySettings(securitySettingsId);

            await securitySettings.SyncRemotemanagementCertificateAsync(true);
        }
    }
}

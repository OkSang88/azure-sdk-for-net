// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.StorSimple8000Series.Models
{
    public partial class ConfigureDeviceRequest : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Kind))
            {
                writer.WritePropertyName("kind");
                writer.WriteStringValue(Kind);
            }
            writer.WritePropertyName("properties");
            writer.WriteStartObject();
            writer.WritePropertyName("friendlyName");
            writer.WriteStringValue(FriendlyName);
            writer.WritePropertyName("currentDeviceName");
            writer.WriteStringValue(CurrentDeviceName);
            writer.WritePropertyName("timeZone");
            writer.WriteStringValue(TimeZone);
            if (Optional.IsDefined(DnsSettings))
            {
                writer.WritePropertyName("dnsSettings");
                writer.WriteObjectValue(DnsSettings);
            }
            if (Optional.IsDefined(NetworkInterfaceData0Settings))
            {
                writer.WritePropertyName("networkInterfaceData0Settings");
                writer.WriteObjectValue(NetworkInterfaceData0Settings);
            }
            writer.WriteEndObject();
            writer.WriteEndObject();
        }

        internal static ConfigureDeviceRequest DeserializeConfigureDeviceRequest(JsonElement element)
        {
            Optional<string> kind = default;
            ResourceIdentifier id = default;
            string name = default;
            ResourceType type = default;
            string friendlyName = default;
            string currentDeviceName = default;
            string timeZone = default;
            Optional<SecondaryDNSSettings> dnsSettings = default;
            Optional<NetworkInterfaceData0Settings> networkInterfaceData0Settings = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("kind"))
                {
                    kind = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("id"))
                {
                    id = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("properties"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("friendlyName"))
                        {
                            friendlyName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("currentDeviceName"))
                        {
                            currentDeviceName = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("timeZone"))
                        {
                            timeZone = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("dnsSettings"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            dnsSettings = SecondaryDNSSettings.DeserializeSecondaryDNSSettings(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("networkInterfaceData0Settings"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            networkInterfaceData0Settings = NetworkInterfaceData0Settings.DeserializeNetworkInterfaceData0Settings(property0.Value);
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new ConfigureDeviceRequest(id, name, type, kind.Value, friendlyName, currentDeviceName, timeZone, dnsSettings.Value, networkInterfaceData0Settings.Value);
        }
    }
}

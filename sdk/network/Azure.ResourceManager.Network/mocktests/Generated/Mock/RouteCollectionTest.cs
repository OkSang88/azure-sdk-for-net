// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.Network;
using Azure.ResourceManager.Network.Models;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Network.Tests.Mock
{
    /// <summary> Test for Route. </summary>
    public partial class RouteCollectionMockTests : MockTestBase
    {
        public RouteCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync()
        {
            // Example: Create route
            var collection = GetArmClient().GetRouteTable(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Network/routeTables/testrt")).GetRoutes();
            string routeName = "route1";
            Network.RouteData routeParameters = new Network.RouteData()
            {
                AddressPrefix = "10.0.3.0/24",
                NextHopType = new Network.Models.RouteNextHopType("VirtualNetworkGateway"),
            };

            await collection.CreateOrUpdateAsync(routeName, routeParameters);
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get route
            var collection = GetArmClient().GetRouteTable(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Network/routeTables/testrt")).GetRoutes();
            string routeName = "route1";

            await collection.GetAsync(routeName);
        }

        [RecordedTest]
        public void GetAllAsync()
        {
            // Example: List routes
            var collection = GetArmClient().GetRouteTable(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Network/routeTables/testrt")).GetRoutes();

            collection.GetAllAsync();
        }
    }
}

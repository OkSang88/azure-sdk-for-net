// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.Sql;
using Azure.ResourceManager.Sql.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Sql.Tests.Mock
{
    /// <summary> Test for DatabaseBlobAuditingPolicy. </summary>
    public partial class DatabaseBlobAuditingPolicyCollectionMockTests : MockTestBase
    {
        public DatabaseBlobAuditingPolicyCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync()
        {
            // Example: Create or update a database's azure monitor auditing policy with minimal parameters
            var collection = GetArmClient().GetSqlDatabase(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/blobauditingtest-4799/providers/Microsoft.Sql/servers/blobauditingtest-6440/databases/testdb")).GetDatabaseBlobAuditingPolicies();
            Sql.Models.BlobAuditingPolicyName blobAuditingPolicyName = new Sql.Models.BlobAuditingPolicyName("default");
            Sql.DatabaseBlobAuditingPolicyData parameters = new Sql.DatabaseBlobAuditingPolicyData()
            {
                IsAzureMonitorTargetEnabled = true,
                State = Sql.Models.BlobAuditingPolicyState.Enabled,
            };

            await collection.CreateOrUpdateAsync(blobAuditingPolicyName, parameters);
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync2()
        {
            // Example: Create or update a database's blob auditing policy with all parameters
            var collection = GetArmClient().GetSqlDatabase(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/blobauditingtest-4799/providers/Microsoft.Sql/servers/blobauditingtest-6440/databases/testdb")).GetDatabaseBlobAuditingPolicies();
            Sql.Models.BlobAuditingPolicyName blobAuditingPolicyName = new Sql.Models.BlobAuditingPolicyName("default");
            Sql.DatabaseBlobAuditingPolicyData parameters = new Sql.DatabaseBlobAuditingPolicyData()
            {
                RetentionDays = 6,
                IsStorageSecondaryKeyInUse = false,
                IsAzureMonitorTargetEnabled = true,
                QueueDelayMs = 4000,
                State = Sql.Models.BlobAuditingPolicyState.Enabled,
                StorageEndpoint = "https://mystorage.blob.core.windows.net",
                StorageAccountAccessKey = "sdlfkjabc+sdlfkjsdlkfsjdfLDKFTERLKFDFKLjsdfksjdflsdkfD2342309432849328476458/3RSD==",
                StorageAccountSubscriptionId = Guid.Parse("00000000-1234-0000-5678-000000000000"),
            };

            await collection.CreateOrUpdateAsync(blobAuditingPolicyName, parameters);
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync3()
        {
            // Example: Create or update a database's blob auditing policy with minimal parameters
            var collection = GetArmClient().GetSqlDatabase(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/blobauditingtest-4799/providers/Microsoft.Sql/servers/blobauditingtest-6440/databases/testdb")).GetDatabaseBlobAuditingPolicies();
            Sql.Models.BlobAuditingPolicyName blobAuditingPolicyName = new Sql.Models.BlobAuditingPolicyName("default");
            Sql.DatabaseBlobAuditingPolicyData parameters = new Sql.DatabaseBlobAuditingPolicyData()
            {
                State = Sql.Models.BlobAuditingPolicyState.Enabled,
                StorageEndpoint = "https://mystorage.blob.core.windows.net",
                StorageAccountAccessKey = "sdlfkjabc+sdlfkjsdlkfsjdfLDKFTERLKFDFKLjsdfksjdflsdkfD2342309432849328476458/3RSD==",
            };

            await collection.CreateOrUpdateAsync(blobAuditingPolicyName, parameters);
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get a database's blob auditing policy
            var collection = GetArmClient().GetSqlDatabase(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/blobauditingtest-6852/providers/Microsoft.Sql/servers/blobauditingtest-2080/databases/testdb")).GetDatabaseBlobAuditingPolicies();
            Sql.Models.BlobAuditingPolicyName blobAuditingPolicyName = new Sql.Models.BlobAuditingPolicyName("default");

            await collection.GetAsync(blobAuditingPolicyName);
        }

        [RecordedTest]
        public void GetAllAsync()
        {
            // Example: List audit settings of a database
            var collection = GetArmClient().GetSqlDatabase(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/blobauditingtest-6852/providers/Microsoft.Sql/servers/blobauditingtest-2080/databases/testdb")).GetDatabaseBlobAuditingPolicies();

            collection.GetAllAsync();
        }
    }
}

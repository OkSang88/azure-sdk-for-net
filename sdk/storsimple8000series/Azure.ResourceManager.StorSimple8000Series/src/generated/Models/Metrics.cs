// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace StorSimple8000SeriesManagementClient.Models
{
    /// <summary> The monitoring metric. </summary>
    public partial class Metrics
    {
        /// <summary> Initializes a new instance of Metrics. </summary>
        internal Metrics()
        {
            Dimensions = new ChangeTrackingList<MetricDimension>();
            Values = new ChangeTrackingList<MetricData>();
        }

        /// <summary> Initializes a new instance of Metrics. </summary>
        /// <param name="resourceId"> The ID of metric source. </param>
        /// <param name="startTime"> The start time of the metric data. </param>
        /// <param name="endTime"> The end time of the metric data. </param>
        /// <param name="timeGrain"> The time granularity of the metric data. </param>
        /// <param name="primaryAggregation"> The metric aggregation type. </param>
        /// <param name="name"> The name of the metric. </param>
        /// <param name="dimensions"> The metric dimensions. </param>
        /// <param name="unit"> The unit of the metric data. </param>
        /// <param name="type"> The type of the metric data. </param>
        /// <param name="values"> The list of the metric data. </param>
        internal Metrics(string resourceId, DateTimeOffset? startTime, DateTimeOffset? endTime, string timeGrain, MetricAggregationType? primaryAggregation, MetricName name, IReadOnlyList<MetricDimension> dimensions, MetricUnit? unit, string type, IReadOnlyList<MetricData> values)
        {
            ResourceId = resourceId;
            StartTime = startTime;
            EndTime = endTime;
            TimeGrain = timeGrain;
            PrimaryAggregation = primaryAggregation;
            Name = name;
            Dimensions = dimensions;
            Unit = unit;
            Type = type;
            Values = values;
        }

        /// <summary> The ID of metric source. </summary>
        public string ResourceId { get; }
        /// <summary> The start time of the metric data. </summary>
        public DateTimeOffset? StartTime { get; }
        /// <summary> The end time of the metric data. </summary>
        public DateTimeOffset? EndTime { get; }
        /// <summary> The time granularity of the metric data. </summary>
        public string TimeGrain { get; }
        /// <summary> The metric aggregation type. </summary>
        public MetricAggregationType? PrimaryAggregation { get; }
        /// <summary> The name of the metric. </summary>
        public MetricName Name { get; }
        /// <summary> The metric dimensions. </summary>
        public IReadOnlyList<MetricDimension> Dimensions { get; }
        /// <summary> The unit of the metric data. </summary>
        public MetricUnit? Unit { get; }
        /// <summary> The type of the metric data. </summary>
        public string Type { get; }
        /// <summary> The list of the metric data. </summary>
        public IReadOnlyList<MetricData> Values { get; }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager.StorSimple8000Series.Models;

namespace Azure.ResourceManager.StorSimple8000Series
{
    /// <summary> A class representing the ManagerExtendedInfo data model. </summary>
    public partial class ManagerExtendedInfoData : BaseModel
    {
        /// <summary> Initializes a new instance of ManagerExtendedInfoData. </summary>
        public ManagerExtendedInfoData()
        {
        }

        /// <summary> Initializes a new instance of ManagerExtendedInfoData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="type"> The type. </param>
        /// <param name="kind"> The Kind of the object. Currently only Series8000 is supported. </param>
        /// <param name="etag"> The etag of the resource. </param>
        /// <param name="version"> The version of the extended info being persisted. </param>
        /// <param name="integrityKey"> Represents the CIK of the resource. </param>
        /// <param name="encryptionKey"> Represents the CEK of the resource. </param>
        /// <param name="encryptionKeyThumbprint"> Represents the Cert thumbprint that was used to encrypt the CEK. </param>
        /// <param name="portalCertificateThumbprint"> Represents the portal thumbprint which can be used optionally to encrypt the entire data before storing it. </param>
        /// <param name="algorithm"> Represents the encryption algorithm used to encrypt the keys. None - if Key is saved in plain text format. Algorithm name - if key is encrypted. </param>
        internal ManagerExtendedInfoData(ResourceIdentifier id, string name, ResourceType type, string kind, string etag, string version, string integrityKey, string encryptionKey, string encryptionKeyThumbprint, string portalCertificateThumbprint, string algorithm) : base(id, name, type, kind)
        {
            Etag = etag;
            Version = version;
            IntegrityKey = integrityKey;
            EncryptionKey = encryptionKey;
            EncryptionKeyThumbprint = encryptionKeyThumbprint;
            PortalCertificateThumbprint = portalCertificateThumbprint;
            Algorithm = algorithm;
        }

        /// <summary> The etag of the resource. </summary>
        public string Etag { get; set; }
        /// <summary> The version of the extended info being persisted. </summary>
        public string Version { get; set; }
        /// <summary> Represents the CIK of the resource. </summary>
        public string IntegrityKey { get; set; }
        /// <summary> Represents the CEK of the resource. </summary>
        public string EncryptionKey { get; set; }
        /// <summary> Represents the Cert thumbprint that was used to encrypt the CEK. </summary>
        public string EncryptionKeyThumbprint { get; set; }
        /// <summary> Represents the portal thumbprint which can be used optionally to encrypt the entire data before storing it. </summary>
        public string PortalCertificateThumbprint { get; set; }
        /// <summary> Represents the encryption algorithm used to encrypt the keys. None - if Key is saved in plain text format. Algorithm name - if key is encrypted. </summary>
        public string Algorithm { get; set; }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.ResourceManager.ServiceFabricMesh.Models
{
    /// <summary> Describes the http configuration for external connectivity for this network. </summary>
    public partial class HttpConfig
    {
        /// <summary> Initializes a new instance of HttpConfig. </summary>
        /// <param name="name"> http gateway config name. </param>
        /// <param name="port"> Specifies the port at which the service endpoint below needs to be exposed. </param>
        /// <param name="hosts"> description for routing. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> or <paramref name="hosts"/> is null. </exception>
        public HttpConfig(string name, int port, IEnumerable<HttpHostConfig> hosts)
        {
            if (name == null)
            {
                throw new ArgumentNullException(nameof(name));
            }
            if (hosts == null)
            {
                throw new ArgumentNullException(nameof(hosts));
            }

            Name = name;
            Port = port;
            Hosts = hosts.ToList();
        }

        /// <summary> Initializes a new instance of HttpConfig. </summary>
        /// <param name="name"> http gateway config name. </param>
        /// <param name="port"> Specifies the port at which the service endpoint below needs to be exposed. </param>
        /// <param name="hosts"> description for routing. </param>
        internal HttpConfig(string name, int port, IList<HttpHostConfig> hosts)
        {
            Name = name;
            Port = port;
            Hosts = hosts;
        }

        /// <summary> http gateway config name. </summary>
        public string Name { get; set; }
        /// <summary> Specifies the port at which the service endpoint below needs to be exposed. </summary>
        public int Port { get; set; }
        /// <summary> description for routing. </summary>
        public IList<HttpHostConfig> Hosts { get; }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.IotHub.Tests.Mock;
using Azure.ResourceManager.IotHub.Tests.Mock.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.IotHub.Tests.Mock.Tests.Mock
{
    /// <summary> Test for IotHubDescription. </summary>
    public partial class IotHubDescriptionMockTests : MockTestBase
    {
        public IotHubDescriptionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: IotHubResource_Get
            var iotHubDescriptionId = IotHub.Tests.Mock.IotHubDescription.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "testHub");
            var iotHubDescription = GetArmClient().GetIotHubDescription(iotHubDescriptionId);

            await iotHubDescription.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: IotHubResource_Delete
            var iotHubDescriptionId = IotHub.Tests.Mock.IotHubDescription.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "testHub");
            var iotHubDescription = GetArmClient().GetIotHubDescription(iotHubDescriptionId);

            await iotHubDescription.DeleteAsync(true);
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: IotHubResource_Update
            var iotHubDescriptionId = IotHub.Tests.Mock.IotHubDescription.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myHub");
            var iotHubDescription = GetArmClient().GetIotHubDescription(iotHubDescriptionId);
            IotHub.Tests.Mock.Models.TagsResource iotHubTags = new IotHub.Tests.Mock.Models.TagsResource();

            await iotHubDescription.UpdateAsync(true, iotHubTags);
        }

        [RecordedTest]
        public async Task GetStats()
        {
            // Example: IotHubResource_GetStats
            var iotHubDescriptionId = IotHub.Tests.Mock.IotHubDescription.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "testHub");
            var iotHubDescription = GetArmClient().GetIotHubDescription(iotHubDescriptionId);

            await iotHubDescription.GetStatsAsync();
        }

        [RecordedTest]
        public async Task GetValidSkus()
        {
            // Example: IotHubResource_GetValidSkus
            var iotHubDescriptionId = IotHub.Tests.Mock.IotHubDescription.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "testHub");
            var iotHubDescription = GetArmClient().GetIotHubDescription(iotHubDescriptionId);

            await foreach (var _ in iotHubDescription.GetValidSkusAsync())
            {
            }
        }

        [RecordedTest]
        public async Task GetJobs()
        {
            // Example: IotHubResource_ListJobs
            var iotHubDescriptionId = IotHub.Tests.Mock.IotHubDescription.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "testHub");
            var iotHubDescription = GetArmClient().GetIotHubDescription(iotHubDescriptionId);

            await foreach (var _ in iotHubDescription.GetJobsAsync())
            {
            }
        }

        [RecordedTest]
        public async Task GetJob()
        {
            // Example: IotHubResource_GetJob
            var iotHubDescriptionId = IotHub.Tests.Mock.IotHubDescription.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "testHub");
            var iotHubDescription = GetArmClient().GetIotHubDescription(iotHubDescriptionId);
            string jobId = "test";

            await iotHubDescription.GetJobAsync(jobId);
        }

        [RecordedTest]
        public async Task GetQuotaMetrics()
        {
            // Example: IotHubResource_GetQuotaMetrics
            var iotHubDescriptionId = IotHub.Tests.Mock.IotHubDescription.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "testHub");
            var iotHubDescription = GetArmClient().GetIotHubDescription(iotHubDescriptionId);

            await foreach (var _ in iotHubDescription.GetQuotaMetricsAsync())
            {
            }
        }

        [RecordedTest]
        public async Task GetEndpointHealth()
        {
            // Example: IotHubResource_GetEndpointHealth
            var iotHubDescriptionId = IotHub.Tests.Mock.IotHubDescription.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "default");
            var iotHubDescription = GetArmClient().GetIotHubDescription(iotHubDescriptionId);

            await foreach (var _ in iotHubDescription.GetEndpointHealthAsync())
            {
            }
        }

        [RecordedTest]
        public async Task TestAllRoutes()
        {
            // Example: IotHubResource_TestAllRoutes
            var iotHubDescriptionId = IotHub.Tests.Mock.IotHubDescription.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "default");
            var iotHubDescription = GetArmClient().GetIotHubDescription(iotHubDescriptionId);
            IotHub.Tests.Mock.Models.TestAllRoutesInput input = new IotHub.Tests.Mock.Models.TestAllRoutesInput()
            {
                RoutingSource = new IotHub.Tests.Mock.Models.RoutingSource("DeviceMessages"),
                Message = new IotHub.Tests.Mock.Models.RoutingMessage()
                {
                    Body = "Body of message",
                },
            };

            await iotHubDescription.TestAllRoutesAsync(input);
        }

        [RecordedTest]
        public async Task TestRoute()
        {
            // Example: IotHubResource_TestRoute
            var iotHubDescriptionId = IotHub.Tests.Mock.IotHubDescription.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "default");
            var iotHubDescription = GetArmClient().GetIotHubDescription(iotHubDescriptionId);
            IotHub.Tests.Mock.Models.TestRouteInput input = new IotHub.Tests.Mock.Models.TestRouteInput(route: new IotHub.Tests.Mock.Models.RouteProperties(name: "Routeid", source: new IotHub.Tests.Mock.Models.RoutingSource("DeviceMessages"), endpointNames: new List<string>()
{
"id1",}, isEnabled: true))
            {
                Message = new IotHub.Tests.Mock.Models.RoutingMessage()
                {
                    Body = "Body of message",
                },
            };

            await iotHubDescription.TestRouteAsync(input);
        }

        [RecordedTest]
        public async Task GetKeys()
        {
            // Example: IotHubResource_ListKeys
            var iotHubDescriptionId = IotHub.Tests.Mock.IotHubDescription.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "testHub");
            var iotHubDescription = GetArmClient().GetIotHubDescription(iotHubDescriptionId);

            await foreach (var _ in iotHubDescription.GetKeysAsync())
            {
            }
        }

        [RecordedTest]
        public async Task GetKeysForKeyName()
        {
            // Example: IotHubResource_GetKeysForKeyName
            var iotHubDescriptionId = IotHub.Tests.Mock.IotHubDescription.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "testHub");
            var iotHubDescription = GetArmClient().GetIotHubDescription(iotHubDescriptionId);
            string keyName = "iothubowner";

            await iotHubDescription.GetKeysForKeyNameAsync(keyName);
        }

        [RecordedTest]
        public async Task ExportDevices()
        {
            // Example: IotHubResource_ExportDevices
            var iotHubDescriptionId = IotHub.Tests.Mock.IotHubDescription.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "testHub");
            var iotHubDescription = GetArmClient().GetIotHubDescription(iotHubDescriptionId);
            IotHub.Tests.Mock.Models.ExportDevicesRequest exportDevicesParameters = new IotHub.Tests.Mock.Models.ExportDevicesRequest(exportBlobContainerUri: "testBlob", excludeKeys: true)
            {
                AuthenticationType = new IotHub.Tests.Mock.Models.AuthenticationType("identityBased"),
                Identity = new IotHub.Tests.Mock.Models.ManagedIdentity()
                {
                    UserAssignedIdentity = "/subscriptions/91d12660-3dec-467a-be2a-213b5544ddc0/resourceGroups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/id1",
                },
            };

            await iotHubDescription.ExportDevicesAsync(exportDevicesParameters);
        }

        [RecordedTest]
        public async Task ImportDevices()
        {
            // Example: IotHubResource_ImportDevices
            var iotHubDescriptionId = IotHub.Tests.Mock.IotHubDescription.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "testHub");
            var iotHubDescription = GetArmClient().GetIotHubDescription(iotHubDescriptionId);
            IotHub.Tests.Mock.Models.ImportDevicesRequest importDevicesParameters = new IotHub.Tests.Mock.Models.ImportDevicesRequest(inputBlobContainerUri: "testBlob", outputBlobContainerUri: "testBlob");

            await iotHubDescription.ImportDevicesAsync(importDevicesParameters);
        }

        [RecordedTest]
        public async Task ManualFailoverIotHub()
        {
            // Example: IotHub_ManualFailover
            var iotHubDescriptionId = IotHub.Tests.Mock.IotHubDescription.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "default");
            var iotHubDescription = GetArmClient().GetIotHubDescription(iotHubDescriptionId);
            IotHub.Tests.Mock.Models.FailoverInput failoverInput = new IotHub.Tests.Mock.Models.FailoverInput(failoverRegion: "testHub");

            await iotHubDescription.ManualFailoverIotHubAsync(true, failoverInput);
        }
    }
}

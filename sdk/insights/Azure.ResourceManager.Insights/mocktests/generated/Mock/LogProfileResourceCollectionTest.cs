// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;
using Insights;
using Insights.Models;

namespace Insights.Tests.Mock
{
    /// <summary> Test for LogProfileResource. </summary>
    public partial class LogProfileResourceCollectionMockTests : MockTestBase
    {
        public LogProfileResourceCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync()
        {
            // Example: Create or update a log profile
            var collection = GetArmClient().GetSubscription(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000")).GetLogProfileResources();
            string logProfileName = "Rac46PostSwapRG";
            Insights.LogProfileResourceData parameters = new Insights.LogProfileResourceData(location: "", locations: new List<string>()
{
"global",}, categories: new List<string>()
{
"Write","Delete","Action",}, retentionPolicy: new Insights.Models.RetentionPolicy(enabled: true, days: 3))
            {
                StorageAccountId = "/subscriptions/df602c9c-7aa0-407d-a6fb-eb20c8bd1192/resourceGroups/JohnKemTest/providers/Microsoft.Storage/storageAccounts/johnkemtest8162",
                ServiceBusRuleId = "",
            };
            parameters.Tags.ReplaceWith(new Dictionary<string, string>() { });
            await collection.CreateOrUpdateAsync(logProfileName, parameters);
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get log profile
            var collection = GetArmClient().GetSubscription(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000")).GetLogProfileResources();
            string logProfileName = "default";

            await collection.GetAsync(logProfileName);
        }

        [RecordedTest]
        public void GetAllAsync()
        {
            // Example: List log profiles
            var collection = GetArmClient().GetSubscription(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000")).GetLogProfileResources();

            collection.GetAllAsync();
        }
    }
}

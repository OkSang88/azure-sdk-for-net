// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Resources.Models;

namespace StorageCacheManagementClient.Models
{
    /// <summary> Cache identity properties. </summary>
    public partial class CacheIdentity
    {
        /// <summary> Initializes a new instance of CacheIdentity. </summary>
        public CacheIdentity()
        {
            UserAssignedIdentities = new ChangeTrackingDictionary<string, UserAssignedIdentity>();
        }

        /// <summary> Initializes a new instance of CacheIdentity. </summary>
        /// <param name="principalId"> The principal ID for the system-assigned identity of the cache. </param>
        /// <param name="tenantId"> The tenant ID associated with the cache. </param>
        /// <param name="type"> The type of identity used for the cache. </param>
        /// <param name="userAssignedIdentities"> A dictionary where each key is a user assigned identity resource ID, and each key&apos;s value is an empty dictionary. </param>
        internal CacheIdentity(string principalId, string tenantId, CacheIdentityType? type, IDictionary<string, UserAssignedIdentity> userAssignedIdentities)
        {
            PrincipalId = principalId;
            TenantId = tenantId;
            Type = type;
            UserAssignedIdentities = userAssignedIdentities;
        }

        /// <summary> The principal ID for the system-assigned identity of the cache. </summary>
        public string PrincipalId { get; }
        /// <summary> The tenant ID associated with the cache. </summary>
        public string TenantId { get; }
        /// <summary> The type of identity used for the cache. </summary>
        public CacheIdentityType? Type { get; set; }
        /// <summary> A dictionary where each key is a user assigned identity resource ID, and each key&apos;s value is an empty dictionary. </summary>
        public IDictionary<string, UserAssignedIdentity> UserAssignedIdentities { get; }
    }
}

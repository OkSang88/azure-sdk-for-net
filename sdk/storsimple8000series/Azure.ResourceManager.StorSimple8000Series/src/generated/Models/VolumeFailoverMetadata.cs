// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace StorSimple8000SeriesManagementClient.Models
{
    /// <summary> The metadata of a volume that has valid cloud snapshot. </summary>
    public partial class VolumeFailoverMetadata
    {
        /// <summary> Initializes a new instance of VolumeFailoverMetadata. </summary>
        internal VolumeFailoverMetadata()
        {
        }

        /// <summary> Initializes a new instance of VolumeFailoverMetadata. </summary>
        /// <param name="volumeId"> The path ID of the volume. </param>
        /// <param name="volumeType"> The type of the volume. </param>
        /// <param name="sizeInBytes"> The size of the volume in bytes at the time the snapshot was taken. </param>
        /// <param name="backupCreatedDate"> The date at which the snapshot was taken. </param>
        /// <param name="backupElementId"> The path ID of the backup-element for this volume, inside the backup set. </param>
        /// <param name="backupId"> The path ID of the backup set. </param>
        /// <param name="backupPolicyId"> The path ID of the backup policy using which the snapshot was taken. </param>
        internal VolumeFailoverMetadata(string volumeId, VolumeType? volumeType, long? sizeInBytes, DateTimeOffset? backupCreatedDate, string backupElementId, string backupId, string backupPolicyId)
        {
            VolumeId = volumeId;
            VolumeType = volumeType;
            SizeInBytes = sizeInBytes;
            BackupCreatedDate = backupCreatedDate;
            BackupElementId = backupElementId;
            BackupId = backupId;
            BackupPolicyId = backupPolicyId;
        }

        /// <summary> The path ID of the volume. </summary>
        public string VolumeId { get; }
        /// <summary> The type of the volume. </summary>
        public VolumeType? VolumeType { get; }
        /// <summary> The size of the volume in bytes at the time the snapshot was taken. </summary>
        public long? SizeInBytes { get; }
        /// <summary> The date at which the snapshot was taken. </summary>
        public DateTimeOffset? BackupCreatedDate { get; }
        /// <summary> The path ID of the backup-element for this volume, inside the backup set. </summary>
        public string BackupElementId { get; }
        /// <summary> The path ID of the backup set. </summary>
        public string BackupId { get; }
        /// <summary> The path ID of the backup policy using which the snapshot was taken. </summary>
        public string BackupPolicyId { get; }
    }
}

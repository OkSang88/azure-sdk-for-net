// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.Compute;
using Azure.ResourceManager.Compute.Models;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Compute.Tests.Mock
{
    /// <summary> Test for GalleryApplication. </summary>
    public partial class GalleryApplicationCollectionMockTests : MockTestBase
    {
        public GalleryApplicationCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync()
        {
            // Example: Create or update a simple gallery Application.
            var collection = GetArmClient().GetGallery(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Compute/galleries/myGalleryName")).GetGalleryApplications();
            string galleryApplicationName = "myGalleryApplicationName";
            Compute.GalleryApplicationData galleryApplication = new Compute.GalleryApplicationData(location: "West US")
            {
                Description = "This is the gallery application description.",
                Eula = "This is the gallery application EULA.",
                PrivacyStatementUri = "myPrivacyStatementUri}",
                ReleaseNoteUri = "myReleaseNoteUri",
                SupportedOSType = Compute.Models.OperatingSystemTypes.Windows,
            };

            await collection.CreateOrUpdateAsync(galleryApplicationName, galleryApplication);
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get a gallery Application.
            var collection = GetArmClient().GetGallery(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Compute/galleries/myGalleryName")).GetGalleryApplications();
            string galleryApplicationName = "myGalleryApplicationName";

            await collection.GetAsync(galleryApplicationName);
        }

        [RecordedTest]
        public void GetAllAsync()
        {
            // Example: List gallery Applications in a gallery.
            var collection = GetArmClient().GetGallery(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Compute/galleries/myGalleryName")).GetGalleryApplications();

            collection.GetAllAsync();
        }
    }
}

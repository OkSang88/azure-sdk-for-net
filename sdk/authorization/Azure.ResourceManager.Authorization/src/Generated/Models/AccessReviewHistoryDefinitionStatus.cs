// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.Authorization.Models
{
    /// <summary> This read-only field specifies the of the requested review history data. This is either requested, in-progress, done or error. </summary>
    internal readonly partial struct AccessReviewHistoryDefinitionStatus : IEquatable<AccessReviewHistoryDefinitionStatus>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="AccessReviewHistoryDefinitionStatus"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public AccessReviewHistoryDefinitionStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string RequestedValue = "Requested";
        private const string InProgressValue = "InProgress";
        private const string DoneValue = "Done";
        private const string ErrorValue = "Error";

        /// <summary> Requested. </summary>
        public static AccessReviewHistoryDefinitionStatus Requested { get; } = new AccessReviewHistoryDefinitionStatus(RequestedValue);
        /// <summary> InProgress. </summary>
        public static AccessReviewHistoryDefinitionStatus InProgress { get; } = new AccessReviewHistoryDefinitionStatus(InProgressValue);
        /// <summary> Done. </summary>
        public static AccessReviewHistoryDefinitionStatus Done { get; } = new AccessReviewHistoryDefinitionStatus(DoneValue);
        /// <summary> Error. </summary>
        public static AccessReviewHistoryDefinitionStatus Error { get; } = new AccessReviewHistoryDefinitionStatus(ErrorValue);
        /// <summary> Determines if two <see cref="AccessReviewHistoryDefinitionStatus"/> values are the same. </summary>
        public static bool operator ==(AccessReviewHistoryDefinitionStatus left, AccessReviewHistoryDefinitionStatus right) => left.Equals(right);
        /// <summary> Determines if two <see cref="AccessReviewHistoryDefinitionStatus"/> values are not the same. </summary>
        public static bool operator !=(AccessReviewHistoryDefinitionStatus left, AccessReviewHistoryDefinitionStatus right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="AccessReviewHistoryDefinitionStatus"/>. </summary>
        public static implicit operator AccessReviewHistoryDefinitionStatus(string value) => new AccessReviewHistoryDefinitionStatus(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is AccessReviewHistoryDefinitionStatus other && Equals(other);
        /// <inheritdoc />
        public bool Equals(AccessReviewHistoryDefinitionStatus other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}

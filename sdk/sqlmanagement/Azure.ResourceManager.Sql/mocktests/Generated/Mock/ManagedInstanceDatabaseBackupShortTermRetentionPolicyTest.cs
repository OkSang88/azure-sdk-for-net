// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Sql;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Sql.Tests.Mock
{
    /// <summary> Test for ManagedBackupShortTermRetentionPolicy. </summary>
    public partial class ManagedInstanceDatabaseBackupShortTermRetentionPolicyMockTests : MockTestBase
    {
        public ManagedInstanceDatabaseBackupShortTermRetentionPolicyMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get the short term retention policy for the database.
            var managedInstanceDatabaseBackupShortTermRetentionPolicyId = Sql.ManagedInstanceDatabaseBackupShortTermRetentionPolicy.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "Default-SQL-SouthEastAsia", "testsvr", "testdb", "default");
            var managedInstanceDatabaseBackupShortTermRetentionPolicy = GetArmClient().GetManagedInstanceDatabaseBackupShortTermRetentionPolicy(managedInstanceDatabaseBackupShortTermRetentionPolicyId);

            await managedInstanceDatabaseBackupShortTermRetentionPolicy.GetAsync();
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: Update the short term retention policy for the database.
            var managedInstanceDatabaseBackupShortTermRetentionPolicyId = Sql.ManagedInstanceDatabaseBackupShortTermRetentionPolicy.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "resourceGroup", "testsvr", "testdb", "default");
            var managedInstanceDatabaseBackupShortTermRetentionPolicy = GetArmClient().GetManagedInstanceDatabaseBackupShortTermRetentionPolicy(managedInstanceDatabaseBackupShortTermRetentionPolicyId);
            Sql.ManagedBackupShortTermRetentionPolicyData parameters = new Sql.ManagedBackupShortTermRetentionPolicyData()
            {
                RetentionDays = 14,
            };

            await managedInstanceDatabaseBackupShortTermRetentionPolicy.UpdateAsync(true, parameters);
        }
    }
}

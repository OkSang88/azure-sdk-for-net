// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.StorSimple8000Series;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.StorSimple8000Series.Tests.Mock
{
    /// <summary> Test for BackupPolicy. </summary>
    public partial class BackupPolicyMockTests : MockTestBase
    {
        public BackupPolicyMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: BackupPoliciesGet
            var backupPolicyId = StorSimple8000Series.BackupPolicy.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ResourceGroupForSDKTest", "ManagerForSDKTest1", "Device05ForSDKTest", "BkUpPolicy01ForSDKTest");
            var backupPolicy = GetArmClient().GetBackupPolicy(backupPolicyId);

            await backupPolicy.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: BackupPoliciesDelete
            var backupPolicyId = StorSimple8000Series.BackupPolicy.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ResourceGroupForSDKTest", "ManagerForSDKTest1", "Device05ForSDKTest", "BkUpPolicy01ForSDKTest");
            var backupPolicy = GetArmClient().GetBackupPolicy(backupPolicyId);

            await backupPolicy.DeleteAsync(true);
        }

        [RecordedTest]
        public async Task BackupNow()
        {
            // Example: BackupPoliciesBackupNow
            var backupPolicyId = StorSimple8000Series.BackupPolicy.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ResourceGroupForSDKTest", "ManagerForSDKTest1", "Device05ForSDKTest", "BkUpPolicy01ForSDKTest");
            var backupPolicy = GetArmClient().GetBackupPolicy(backupPolicyId);
            string backupType = "CloudSnapshot";

            await backupPolicy.BackupNowAsync(true, backupType);
        }
    }
}

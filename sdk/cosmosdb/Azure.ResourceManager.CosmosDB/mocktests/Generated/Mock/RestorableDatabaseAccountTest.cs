// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.CosmosDB.Models;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.CosmosDB.Tests.Mock
{
    /// <summary> Test for RestorableDatabaseAccount. </summary>
    public partial class RestorableDatabaseAccountMockTests : MockTestBase
    {
        public RestorableDatabaseAccountMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: CosmosDBRestorableDatabaseAccountGet
            var restorableDatabaseAccount = GetArmClient().GetRestorableDatabaseAccount(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.DocumentDB/locations/West US/restorableDatabaseAccounts/d9b26648-2f53-4541-b3d8-3044f4f9810d"));

            await restorableDatabaseAccount.GetAsync();
        }

        [RecordedTest]
        public void GetRestorableSqlDatabasesAsync()
        {
            // Example: CosmosDBRestorableSqlDatabaseList
            var restorableDatabaseAccount = GetArmClient().GetRestorableDatabaseAccount(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.DocumentDB/locations/WestUS/restorableDatabaseAccounts/d9b26648-2f53-4541-b3d8-3044f4f9810d"));

            restorableDatabaseAccount.GetRestorableSqlDatabasesAsync();
        }

        [RecordedTest]
        public void GetRestorableSqlContainersAsync()
        {
            // Example: CosmosDBRestorableSqlContainerList
            var restorableDatabaseAccount = GetArmClient().GetRestorableDatabaseAccount(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.DocumentDB/locations/WestUS/restorableDatabaseAccounts/98a570f2-63db-4117-91f0-366327b7b353"));
            string restorableSqlDatabaseRid = "3fu-hg==";
            string startTime = null;
            string endTime = null;

            restorableDatabaseAccount.GetRestorableSqlContainersAsync(restorableSqlDatabaseRid, startTime, endTime);
        }

        [RecordedTest]
        public void GetRestorableSqlResourcesAsync()
        {
            // Example: CosmosDBRestorableSqlResourceList
            var restorableDatabaseAccount = GetArmClient().GetRestorableDatabaseAccount(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.DocumentDB/locations/WestUS/restorableDatabaseAccounts/d9b26648-2f53-4541-b3d8-3044f4f9810d"));
            string restoreLocation = "WestUS";
            string restoreTimestampInUtc = "10/13/2020 4:56";

            restorableDatabaseAccount.GetRestorableSqlResourcesAsync(restoreLocation, restoreTimestampInUtc);
        }

        [RecordedTest]
        public void GetRestorableMongodbDatabasesAsync()
        {
            // Example: CosmosDBRestorableMongodbDatabaseList
            var restorableDatabaseAccount = GetArmClient().GetRestorableDatabaseAccount(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.DocumentDB/locations/WestUS/restorableDatabaseAccounts/d9b26648-2f53-4541-b3d8-3044f4f9810d"));

            restorableDatabaseAccount.GetRestorableMongodbDatabasesAsync();
        }

        [RecordedTest]
        public void GetRestorableMongodbCollectionsAsync()
        {
            // Example: CosmosDBRestorableMongodbCollectionList
            var restorableDatabaseAccount = GetArmClient().GetRestorableDatabaseAccount(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.DocumentDB/locations/WestUS/restorableDatabaseAccounts/98a570f2-63db-4117-91f0-366327b7b353"));
            string restorableMongodbDatabaseRid = "PD5DALigDgw=";

            restorableDatabaseAccount.GetRestorableMongodbCollectionsAsync(restorableMongodbDatabaseRid);
        }

        [RecordedTest]
        public void GetRestorableMongodbResourcesAsync()
        {
            // Example: CosmosDBRestorableMongodbResourceList
            var restorableDatabaseAccount = GetArmClient().GetRestorableDatabaseAccount(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.DocumentDB/locations/WestUS/restorableDatabaseAccounts/d9b26648-2f53-4541-b3d8-3044f4f9810d"));
            string restoreLocation = "WestUS";
            string restoreTimestampInUtc = "10/13/2020 4:56";

            restorableDatabaseAccount.GetRestorableMongodbResourcesAsync(restoreLocation, restoreTimestampInUtc);
        }
    }
}

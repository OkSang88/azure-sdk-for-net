// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.StorSimple8000Series.Models
{
    /// <summary> Represents the network adapter on device. </summary>
    public partial class NetworkAdapters
    {
        /// <summary> Initializes a new instance of NetworkAdapters. </summary>
        /// <param name="interfaceId"> The ID of the network adapter. </param>
        /// <param name="netInterfaceStatus"> Value indicating status of network adapter. </param>
        /// <param name="iscsiAndCloudStatus"> Value indicating cloud and ISCSI status of network adapter. </param>
        /// <param name="mode"> The mode of network adapter, either IPv4, IPv6 or both. </param>
        public NetworkAdapters(NetInterfaceId interfaceId, NetInterfaceStatus netInterfaceStatus, IscsiAndCloudStatus iscsiAndCloudStatus, NetworkMode mode)
        {
            InterfaceId = interfaceId;
            NetInterfaceStatus = netInterfaceStatus;
            IscsiAndCloudStatus = iscsiAndCloudStatus;
            Mode = mode;
        }

        /// <summary> Initializes a new instance of NetworkAdapters. </summary>
        /// <param name="interfaceId"> The ID of the network adapter. </param>
        /// <param name="netInterfaceStatus"> Value indicating status of network adapter. </param>
        /// <param name="isDefault"> Value indicating whether this instance is default. </param>
        /// <param name="iscsiAndCloudStatus"> Value indicating cloud and ISCSI status of network adapter. </param>
        /// <param name="speed"> The speed of the network adapter. </param>
        /// <param name="mode"> The mode of network adapter, either IPv4, IPv6 or both. </param>
        /// <param name="nicIpv4Settings"> The IPv4 configuration of the network adapter. </param>
        /// <param name="nicIpv6Settings"> The IPv6 configuration of the network adapter. </param>
        internal NetworkAdapters(NetInterfaceId interfaceId, NetInterfaceStatus netInterfaceStatus, bool? isDefault, IscsiAndCloudStatus iscsiAndCloudStatus, long? speed, NetworkMode mode, NicIPv4 nicIpv4Settings, NicIPv6 nicIpv6Settings)
        {
            InterfaceId = interfaceId;
            NetInterfaceStatus = netInterfaceStatus;
            IsDefault = isDefault;
            IscsiAndCloudStatus = iscsiAndCloudStatus;
            Speed = speed;
            Mode = mode;
            NicIpv4Settings = nicIpv4Settings;
            NicIpv6Settings = nicIpv6Settings;
        }

        /// <summary> The ID of the network adapter. </summary>
        public NetInterfaceId InterfaceId { get; set; }
        /// <summary> Value indicating status of network adapter. </summary>
        public NetInterfaceStatus NetInterfaceStatus { get; set; }
        /// <summary> Value indicating whether this instance is default. </summary>
        public bool? IsDefault { get; set; }
        /// <summary> Value indicating cloud and ISCSI status of network adapter. </summary>
        public IscsiAndCloudStatus IscsiAndCloudStatus { get; set; }
        /// <summary> The speed of the network adapter. </summary>
        public long? Speed { get; set; }
        /// <summary> The mode of network adapter, either IPv4, IPv6 or both. </summary>
        public NetworkMode Mode { get; set; }
        /// <summary> The IPv4 configuration of the network adapter. </summary>
        public NicIPv4 NicIpv4Settings { get; set; }
        /// <summary> The IPv6 configuration of the network adapter. </summary>
        public NicIPv6 NicIpv6Settings { get; set; }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager;

namespace StorSimple8000SeriesManagementClient
{
    /// <summary> A class to add extension methods to ArmClient. </summary>
    public static partial class ArmClientExtensions
    {
        #region Manager
        /// <summary> Gets an object representing a Manager along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="Manager" /> object. </returns>
        public static Manager GetManager(this ArmClient armClient, ResourceIdentifier id)
        {
            Manager.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new Manager(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region EncryptionSettings
        /// <summary> Gets an object representing a EncryptionSettings along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="EncryptionSettings" /> object. </returns>
        public static EncryptionSettings GetEncryptionSettings(this ArmClient armClient, ResourceIdentifier id)
        {
            EncryptionSettings.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new EncryptionSettings(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ManagerExtendedInfo
        /// <summary> Gets an object representing a ManagerExtendedInfo along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ManagerExtendedInfo" /> object. </returns>
        public static ManagerExtendedInfo GetManagerExtendedInfo(this ArmClient armClient, ResourceIdentifier id)
        {
            ManagerExtendedInfo.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ManagerExtendedInfo(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region AccessControlRecord
        /// <summary> Gets an object representing a AccessControlRecord along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="AccessControlRecord" /> object. </returns>
        public static AccessControlRecord GetAccessControlRecord(this ArmClient armClient, ResourceIdentifier id)
        {
            AccessControlRecord.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new AccessControlRecord(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region BandwidthSetting
        /// <summary> Gets an object representing a BandwidthSetting along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="BandwidthSetting" /> object. </returns>
        public static BandwidthSetting GetBandwidthSetting(this ArmClient armClient, ResourceIdentifier id)
        {
            BandwidthSetting.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new BandwidthSetting(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region Device
        /// <summary> Gets an object representing a Device along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="Device" /> object. </returns>
        public static Device GetDevice(this ArmClient armClient, ResourceIdentifier id)
        {
            Device.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new Device(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region Updates
        /// <summary> Gets an object representing a Updates along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="Updates" /> object. </returns>
        public static Updates GetUpdates(this ArmClient armClient, ResourceIdentifier id)
        {
            Updates.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new Updates(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region AlertSettings
        /// <summary> Gets an object representing a AlertSettings along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="AlertSettings" /> object. </returns>
        public static AlertSettings GetAlertSettings(this ArmClient armClient, ResourceIdentifier id)
        {
            AlertSettings.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new AlertSettings(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region NetworkSettings
        /// <summary> Gets an object representing a NetworkSettings along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="NetworkSettings" /> object. </returns>
        public static NetworkSettings GetNetworkSettings(this ArmClient armClient, ResourceIdentifier id)
        {
            NetworkSettings.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new NetworkSettings(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region SecuritySettings
        /// <summary> Gets an object representing a SecuritySettings along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SecuritySettings" /> object. </returns>
        public static SecuritySettings GetSecuritySettings(this ArmClient armClient, ResourceIdentifier id)
        {
            SecuritySettings.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new SecuritySettings(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region TimeSettings
        /// <summary> Gets an object representing a TimeSettings along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="TimeSettings" /> object. </returns>
        public static TimeSettings GetTimeSettings(this ArmClient armClient, ResourceIdentifier id)
        {
            TimeSettings.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new TimeSettings(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region BackupPolicy
        /// <summary> Gets an object representing a BackupPolicy along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="BackupPolicy" /> object. </returns>
        public static BackupPolicy GetBackupPolicy(this ArmClient armClient, ResourceIdentifier id)
        {
            BackupPolicy.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new BackupPolicy(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region BackupSchedule
        /// <summary> Gets an object representing a BackupSchedule along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="BackupSchedule" /> object. </returns>
        public static BackupSchedule GetBackupSchedule(this ArmClient armClient, ResourceIdentifier id)
        {
            BackupSchedule.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new BackupSchedule(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region Job
        /// <summary> Gets an object representing a Job along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="Job" /> object. </returns>
        public static Job GetJob(this ArmClient armClient, ResourceIdentifier id)
        {
            Job.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new Job(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region VolumeContainer
        /// <summary> Gets an object representing a VolumeContainer along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="VolumeContainer" /> object. </returns>
        public static VolumeContainer GetVolumeContainer(this ArmClient armClient, ResourceIdentifier id)
        {
            VolumeContainer.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new VolumeContainer(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region Volume
        /// <summary> Gets an object representing a Volume along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="Volume" /> object. </returns>
        public static Volume GetVolume(this ArmClient armClient, ResourceIdentifier id)
        {
            Volume.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new Volume(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region StorageAccountCredential
        /// <summary> Gets an object representing a StorageAccountCredential along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="StorageAccountCredential" /> object. </returns>
        public static StorageAccountCredential GetStorageAccountCredential(this ArmClient armClient, ResourceIdentifier id)
        {
            StorageAccountCredential.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new StorageAccountCredential(clientOptions, credential, uri, pipeline, id));
        }
        #endregion
    }
}

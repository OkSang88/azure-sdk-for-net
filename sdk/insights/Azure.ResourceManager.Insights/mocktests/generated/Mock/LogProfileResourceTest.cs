// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;
using Insights;
using Insights.Models;

namespace Insights.Tests.Mock
{
    /// <summary> Test for LogProfileResource. </summary>
    public partial class LogProfileResourceMockTests : MockTestBase
    {
        public LogProfileResourceMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get log profile
            var logProfileResourceId = Insights.LogProfileResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "default");
            var logProfileResource = GetArmClient().GetLogProfileResource(logProfileResourceId);

            await logProfileResource.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: Delete log profile
            var logProfileResourceId = Insights.LogProfileResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "Rac46PostSwapRG");
            var logProfileResource = GetArmClient().GetLogProfileResource(logProfileResourceId);

            await logProfileResource.DeleteAsync();
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: Patch a log profile
            var logProfileResourceId = Insights.LogProfileResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "Rac46PostSwapRG");
            var logProfileResource = GetArmClient().GetLogProfileResource(logProfileResourceId);
            Insights.Models.LogProfileResourcePatch logProfilesResource = new Insights.Models.LogProfileResourcePatch()
            {
                StorageAccountId = "/subscriptions/df602c9c-7aa0-407d-a6fb-eb20c8bd1192/resourceGroups/JohnKemTest/providers/Microsoft.Storage/storageAccounts/johnkemtest8162",
                ServiceBusRuleId = "",
                RetentionPolicy = new Insights.Models.RetentionPolicy(enabled: true, days: 3),
            };

            await logProfileResource.UpdateAsync(logProfilesResource);
        }
    }
}

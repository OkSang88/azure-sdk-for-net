// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.Sql.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Sql.Tests.Mock
{
    /// <summary> Test for ReplicationLink. </summary>
    public partial class ReplicationLinkMockTests : MockTestBase
    {
        public ReplicationLinkMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Gets the replication link.
            var replicationLink = GetArmClient().GetReplicationLink(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/Default/providers/Microsoft.Sql/servers/sourcesvr/databases/gamma-db/replicationLinks/4891ca10-ebd0-47d7-9182-c722651780fb"));

            await replicationLink.GetAsync();
        }

        [RecordedTest]
        public async Task DeleteAsync()
        {
            // Example: Delete a replication link
            var replicationLink = GetArmClient().GetReplicationLink(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/sqlcrudtest-4799/providers/Microsoft.Sql/servers/sqlcrudtest-6440/databases/testdb/replicationLinks/5b301b68-03f6-4b26-b0f4-73ebb8634238"));

            await replicationLink.DeleteAsync();
        }

        [RecordedTest]
        public async Task FailoverAsync()
        {
            // Example: Failover a replication link
            var replicationLink = GetArmClient().GetReplicationLink(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/sqlcrudtest-8931/providers/Microsoft.Sql/servers/sqlcrudtest-2137/databases/testdb/replicationLinks/f0550bf5-07ce-4270-8e4b-71737975973a"));

            await replicationLink.FailoverAsync();
        }

        [RecordedTest]
        public async Task FailoverAllowDataLossAsync()
        {
            // Example: Failover a replication link
            var replicationLink = GetArmClient().GetReplicationLink(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/sqlcrudtest-8931/providers/Microsoft.Sql/servers/sqlcrudtest-2137/databases/testdb/replicationLinks/f0550bf5-07ce-4270-8e4b-71737975973a"));

            await replicationLink.FailoverAllowDataLossAsync();
        }

        [RecordedTest]
        public async Task UnlinkAsync()
        {
            // Example: Delete replication link
            var replicationLink = GetArmClient().GetReplicationLink(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/sqlcrudtest-8931/providers/Microsoft.Sql/servers/sqlcrudtest-2137/databases/testdb/replicationLinks/f0550bf5-07ce-4270-8e4b-71737975973a"));
            Sql.Models.UnlinkOptions parameters = new Sql.Models.UnlinkOptions()
            {
                ForcedTermination = true,
            };

            await replicationLink.UnlinkAsync(parameters);
        }
    }
}

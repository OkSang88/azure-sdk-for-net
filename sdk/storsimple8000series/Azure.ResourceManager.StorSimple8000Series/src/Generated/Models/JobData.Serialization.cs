// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;
using Azure.ResourceManager.StorSimple8000Series.Models;

namespace Azure.ResourceManager.StorSimple8000Series
{
    public partial class JobData : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("status");
            writer.WriteStringValue(Status.ToSerialString());
            if (Optional.IsDefined(StartTime))
            {
                writer.WritePropertyName("startTime");
                writer.WriteStringValue(StartTime.Value, "O");
            }
            if (Optional.IsDefined(EndTime))
            {
                writer.WritePropertyName("endTime");
                writer.WriteStringValue(EndTime.Value, "O");
            }
            writer.WritePropertyName("percentComplete");
            writer.WriteNumberValue(PercentComplete);
            if (Optional.IsDefined(Error))
            {
                writer.WritePropertyName("error");
                writer.WriteObjectValue(Error);
            }
            if (Optional.IsDefined(Kind))
            {
                writer.WritePropertyName("kind");
                writer.WriteStringValue(Kind);
            }
            writer.WritePropertyName("properties");
            writer.WriteStartObject();
            if (Optional.IsDefined(JobType))
            {
                writer.WritePropertyName("jobType");
                writer.WriteStringValue(JobType.Value.ToSerialString());
            }
            if (Optional.IsDefined(DataStats))
            {
                writer.WritePropertyName("dataStats");
                writer.WriteObjectValue(DataStats);
            }
            if (Optional.IsDefined(EntityLabel))
            {
                writer.WritePropertyName("entityLabel");
                writer.WriteStringValue(EntityLabel);
            }
            if (Optional.IsDefined(EntityType))
            {
                writer.WritePropertyName("entityType");
                writer.WriteStringValue(EntityType);
            }
            if (Optional.IsCollectionDefined(JobStages))
            {
                writer.WritePropertyName("jobStages");
                writer.WriteStartArray();
                foreach (var item in JobStages)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(DeviceId))
            {
                writer.WritePropertyName("deviceId");
                writer.WriteStringValue(DeviceId);
            }
            if (Optional.IsDefined(IsCancellable))
            {
                writer.WritePropertyName("isCancellable");
                writer.WriteBooleanValue(IsCancellable.Value);
            }
            if (Optional.IsDefined(BackupType))
            {
                writer.WritePropertyName("backupType");
                writer.WriteStringValue(BackupType.Value.ToSerialString());
            }
            if (Optional.IsDefined(SourceDeviceId))
            {
                writer.WritePropertyName("sourceDeviceId");
                writer.WriteStringValue(SourceDeviceId);
            }
            if (Optional.IsDefined(BackupPointInTime))
            {
                writer.WritePropertyName("backupPointInTime");
                writer.WriteStringValue(BackupPointInTime.Value, "O");
            }
            writer.WriteEndObject();
            writer.WriteEndObject();
        }

        internal static JobData DeserializeJobData(JsonElement element)
        {
            JobStatus status = default;
            Optional<DateTimeOffset> startTime = default;
            Optional<DateTimeOffset> endTime = default;
            int percentComplete = default;
            Optional<JobErrorDetails> error = default;
            Optional<string> kind = default;
            ResourceIdentifier id = default;
            string name = default;
            ResourceType type = default;
            Optional<JobType> jobType = default;
            Optional<DataStatistics> dataStats = default;
            Optional<string> entityLabel = default;
            Optional<string> entityType = default;
            Optional<IList<JobStage>> jobStages = default;
            Optional<string> deviceId = default;
            Optional<bool> isCancellable = default;
            Optional<BackupType> backupType = default;
            Optional<string> sourceDeviceId = default;
            Optional<DateTimeOffset> backupPointInTime = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("status"))
                {
                    status = property.Value.GetString().ToJobStatus();
                    continue;
                }
                if (property.NameEquals("startTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    startTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("endTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    endTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("percentComplete"))
                {
                    percentComplete = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("error"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    error = JobErrorDetails.DeserializeJobErrorDetails(property.Value);
                    continue;
                }
                if (property.NameEquals("kind"))
                {
                    kind = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("id"))
                {
                    id = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("properties"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("jobType"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            jobType = property0.Value.GetString().ToJobType();
                            continue;
                        }
                        if (property0.NameEquals("dataStats"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            dataStats = DataStatistics.DeserializeDataStatistics(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("entityLabel"))
                        {
                            entityLabel = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("entityType"))
                        {
                            entityType = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("jobStages"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            List<JobStage> array = new List<JobStage>();
                            foreach (var item in property0.Value.EnumerateArray())
                            {
                                array.Add(JobStage.DeserializeJobStage(item));
                            }
                            jobStages = array;
                            continue;
                        }
                        if (property0.NameEquals("deviceId"))
                        {
                            deviceId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("isCancellable"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            isCancellable = property0.Value.GetBoolean();
                            continue;
                        }
                        if (property0.NameEquals("backupType"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            backupType = property0.Value.GetString().ToBackupType();
                            continue;
                        }
                        if (property0.NameEquals("sourceDeviceId"))
                        {
                            sourceDeviceId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("backupPointInTime"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            backupPointInTime = property0.Value.GetDateTimeOffset("O");
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new JobData(id, name, type, kind.Value, status, Optional.ToNullable(startTime), Optional.ToNullable(endTime), percentComplete, error.Value, Optional.ToNullable(jobType), dataStats.Value, entityLabel.Value, entityType.Value, Optional.ToList(jobStages), deviceId.Value, Optional.ToNullable(isCancellable), Optional.ToNullable(backupType), sourceDeviceId.Value, Optional.ToNullable(backupPointInTime));
        }
    }
}

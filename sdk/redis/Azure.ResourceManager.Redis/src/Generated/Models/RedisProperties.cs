// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Redis;
using Azure.ResourceManager.Resources.Models;

namespace Azure.ResourceManager.Redis.Models
{
    /// <summary> Properties of the redis cache. </summary>
    internal partial class RedisProperties : RedisCreateProperties
    {
        /// <summary> Initializes a new instance of RedisProperties. </summary>
        /// <param name="sku"> The SKU of the Redis cache to deploy. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="sku"/> is null. </exception>
        internal RedisProperties(Sku sku) : base(sku)
        {
            if (sku == null)
            {
                throw new ArgumentNullException(nameof(sku));
            }

            LinkedServers = new ChangeTrackingList<SubResource>();
            Instances = new ChangeTrackingList<RedisInstanceDetails>();
            PrivateEndpointConnections = new ChangeTrackingList<PrivateEndpointConnectionData>();
        }

        /// <summary> Redis instance provisioning status. </summary>
        public ProvisioningState? ProvisioningState { get; }
        /// <summary> Redis host name. </summary>
        public string HostName { get; }
        /// <summary> Redis non-SSL port. </summary>
        public int? Port { get; }
        /// <summary> Redis SSL port. </summary>
        public int? SslPort { get; }
        /// <summary> The keys of the Redis cache - not set if this object is not the response to Create or Update redis cache. </summary>
        public RedisAccessKeys AccessKeys { get; }
        /// <summary> List of the linked servers associated with the cache. </summary>
        public IReadOnlyList<SubResource> LinkedServers { get; }
        /// <summary> List of the Redis instances associated with the cache. </summary>
        public IReadOnlyList<RedisInstanceDetails> Instances { get; }
        /// <summary> List of private endpoint connection associated with the specified redis cache. </summary>
        public IReadOnlyList<PrivateEndpointConnectionData> PrivateEndpointConnections { get; }
    }
}

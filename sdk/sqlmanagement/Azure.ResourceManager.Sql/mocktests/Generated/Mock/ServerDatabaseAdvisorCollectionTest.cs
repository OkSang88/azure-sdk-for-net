// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Sql;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Sql.Tests.Mock
{
    /// <summary> Test for Advisor. </summary>
    public partial class ServerDatabaseAdvisorCollectionMockTests : MockTestBase
    {
        public ServerDatabaseAdvisorCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get database advisor
            string advisorName = "CreateIndex";

            var sqlDatabaseId = Sql.SqlDatabase.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "workloadinsight-demos", "misosisvr", "IndexAdvisor_test_3");
            var collection = GetArmClient().GetSqlDatabase(sqlDatabaseId).GetServerDatabaseAdvisors();
            await collection.GetAsync(advisorName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: List of database advisors
            string expand = null;

            var sqlDatabaseId = Sql.SqlDatabase.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "workloadinsight-demos", "misosisvr", "IndexAdvisor_test_3");
            var collection = GetArmClient().GetSqlDatabase(sqlDatabaseId).GetServerDatabaseAdvisors();
            await foreach (var _ in collection.GetAllAsync(expand))
            {
            }
        }

        [RecordedTest]
        public async Task GetAll2()
        {
            // Example: List of database recommended actions for all advisors
            string expand = "recommendedActions";

            var sqlDatabaseId = Sql.SqlDatabase.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "workloadinsight-demos", "misosisvr", "IndexAdvisor_test_3");
            var collection = GetArmClient().GetSqlDatabase(sqlDatabaseId).GetServerDatabaseAdvisors();
            await foreach (var _ in collection.GetAllAsync(expand))
            {
            }
        }
    }
}

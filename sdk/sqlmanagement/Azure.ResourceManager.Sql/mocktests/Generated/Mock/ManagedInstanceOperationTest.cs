// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Sql;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Sql.Tests.Mock
{
    /// <summary> Test for ManagedInstanceOperation. </summary>
    public partial class ManagedInstanceOperationMockTests : MockTestBase
    {
        public ManagedInstanceOperationMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Gets the managed instance management operation
            var managedInstanceOperationId = Sql.ManagedInstanceOperation.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "sqlcrudtest-7398", "sqlcrudtest-4645", "00000000-1111-2222-3333-444444444444");
            var managedInstanceOperation = GetArmClient().GetManagedInstanceOperation(managedInstanceOperationId);

            await managedInstanceOperation.GetAsync();
        }

        [RecordedTest]
        public async Task Cancel()
        {
            // Example: Cancel the managed instance management operation
            var managedInstanceOperationId = Sql.ManagedInstanceOperation.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "sqlcrudtest-7398", "sqlcrudtest-4645", "11111111-1111-1111-1111-111111111111");
            var managedInstanceOperation = GetArmClient().GetManagedInstanceOperation(managedInstanceOperationId);

            await managedInstanceOperation.CancelAsync();
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Compute;
using Azure.ResourceManager.Compute.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Compute.Tests.Mock
{
    /// <summary> Test for VirtualMachineRunCommand. </summary>
    public partial class VirtualMachineRunCommandCollectionMockTests : MockTestBase
    {
        public VirtualMachineRunCommandCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: Create or update a run command.
            string runCommandName = "myRunCommand";
            Compute.VirtualMachineRunCommandData runCommand = new Compute.VirtualMachineRunCommandData(location: "West US")
            {
                Source = new Compute.Models.VirtualMachineRunCommandScriptSource()
                {
                    Script = "Write-Host Hello World!",
                },
                AsyncExecution = false,
                RunAsUser = "user1",
                RunAsPassword = "<runAsPassword>",
                TimeoutInSeconds = 3600,
            };

            var virtualMachineId = Compute.VirtualMachine.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myVM");
            var collection = GetArmClient().GetVirtualMachine(virtualMachineId).GetVirtualMachineRunCommands();
            await collection.CreateOrUpdateAsync(true, runCommandName, runCommand);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get a run command.
            string runCommandName = "myRunCommand";
            string expand = null;

            var virtualMachineId = Compute.VirtualMachine.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myVM");
            var collection = GetArmClient().GetVirtualMachine(virtualMachineId).GetVirtualMachineRunCommands();
            await collection.GetAsync(runCommandName, expand);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: List run commands in a Virtual Machine.
            string expand = null;

            var virtualMachineId = Compute.VirtualMachine.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myVM");
            var collection = GetArmClient().GetVirtualMachine(virtualMachineId).GetVirtualMachineRunCommands();
            await foreach (var _ in collection.GetAllAsync(expand))
            {
            }
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Attestation;
using Azure.ResourceManager.Attestation.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Attestation.Tests.Mock
{
    /// <summary> Test for AttestationProvider. </summary>
    public partial class AttestationProviderMockTests : MockTestBase
    {
        public AttestationProviderMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: AttestationProviders_Get
            var attestationProviderId = Attestation.AttestationProvider.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "MyResourceGroup", "myattestationprovider");
            var attestationProvider = GetArmClient().GetAttestationProvider(attestationProviderId);

            await attestationProvider.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: AttestationProviders_Delete
            var attestationProviderId = Attestation.AttestationProvider.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "sample-resource-group", "myattestationprovider");
            var attestationProvider = GetArmClient().GetAttestationProvider(attestationProviderId);

            await attestationProvider.DeleteAsync(true);
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: AttestationProviders_Update
            var attestationProviderId = Attestation.AttestationProvider.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "MyResourceGroup", "myattestationprovider");
            var attestationProvider = GetArmClient().GetAttestationProvider(attestationProviderId);
            Attestation.Models.AttestationServicePatchParams updateParams = new Attestation.Models.AttestationServicePatchParams();

            await attestationProvider.UpdateAsync(updateParams);
        }
    }
}

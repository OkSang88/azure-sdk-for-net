// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;
using Customproviders;

namespace Customproviders.Tests.Mock
{
    /// <summary> Test for CustomRPManifest. </summary>
    public partial class CustomRPManifestCollectionMockTests : MockTestBase
    {
        public CustomRPManifestCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: Create or update the custom resource provider
            string resourceProviderName = "newrp";
            Customproviders.CustomRPManifestData resourceProvider = new Customproviders.CustomRPManifestData(location: "eastus");

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testRG")).GetCustomRPManifests();
            await collection.CreateOrUpdateAsync(true, resourceProviderName, resourceProvider);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get a custom resource provider
            string resourceProviderName = "newrp";

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testRG")).GetCustomRPManifests();
            await collection.GetAsync(resourceProviderName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: List all custom resource providers on the resourceGroup

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testRG")).GetCustomRPManifests();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

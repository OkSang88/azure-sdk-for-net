// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.ServiceFabricManagedClusters.Tests.Mock;
using Azure.ResourceManager.ServiceFabricManagedClusters.Tests.Mock.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.ServiceFabricManagedClusters.Tests.Mock.Tests.Mock
{
    /// <summary> Test for ApplicationTypeVersionResource. </summary>
    public partial class ApplicationTypeVersionResourceMockTests : MockTestBase
    {
        public ApplicationTypeVersionResourceMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get an application type version
            var applicationTypeVersionResourceId = ServiceFabricManagedClusters.Tests.Mock.ApplicationTypeVersionResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "resRg", "myCluster", "myAppType", "1.0");
            var applicationTypeVersionResource = GetArmClient().GetApplicationTypeVersionResource(applicationTypeVersionResourceId);

            await applicationTypeVersionResource.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: Delete an application type version
            var applicationTypeVersionResourceId = ServiceFabricManagedClusters.Tests.Mock.ApplicationTypeVersionResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "resRg", "myCluster", "myAppType", "1.0");
            var applicationTypeVersionResource = GetArmClient().GetApplicationTypeVersionResource(applicationTypeVersionResourceId);

            await applicationTypeVersionResource.DeleteAsync(true);
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: Patch an application type version
            var applicationTypeVersionResourceId = ServiceFabricManagedClusters.Tests.Mock.ApplicationTypeVersionResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "resRg", "myCluster", "myAppType", "1.0");
            var applicationTypeVersionResource = GetArmClient().GetApplicationTypeVersionResource(applicationTypeVersionResourceId);
            ServiceFabricManagedClusters.Tests.Mock.Models.ApplicationTypeVersionUpdateParameters parameters = new ServiceFabricManagedClusters.Tests.Mock.Models.ApplicationTypeVersionUpdateParameters();

            await applicationTypeVersionResource.UpdateAsync(parameters);
        }
    }
}

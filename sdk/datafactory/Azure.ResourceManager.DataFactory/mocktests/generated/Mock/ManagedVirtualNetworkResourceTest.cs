// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;
using DataFactoryManagementClient;

namespace DataFactoryManagementClient.Tests.Mock
{
    /// <summary> Test for ManagedVirtualNetworkResource. </summary>
    public partial class ManagedVirtualNetworkResourceMockTests : MockTestBase
    {
        public ManagedVirtualNetworkResourceMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: ManagedVirtualNetworks_Get
            var managedVirtualNetworkResourceId = DataFactoryManagementClient.ManagedVirtualNetworkResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "exampleResourceGroup", "exampleFactoryName", "exampleManagedVirtualNetworkName");
            var managedVirtualNetworkResource = GetArmClient().GetManagedVirtualNetworkResource(managedVirtualNetworkResourceId);
            string ifNoneMatch = null;

            await managedVirtualNetworkResource.GetAsync(ifNoneMatch);
        }
    }
}

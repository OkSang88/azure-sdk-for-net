// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.ServiceBus.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.ServiceBus.Tests.Mock
{
    /// <summary> Test for ServiceBusSubscription. </summary>
    public partial class ServiceBusSubscriptionMockTests : MockTestBase
    {
        public ServiceBusSubscriptionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: SubscriptionGet
            var serviceBusSubscription = GetArmClient().GetServiceBusSubscription(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/ResourceGroup/providers/Microsoft.ServiceBus/namespaces/sdk-Namespace-1349/topics/sdk-Topics-8740/subscriptions/00000000-0000-0000-0000-000000000000"));

            await serviceBusSubscription.GetAsync();
        }

        [RecordedTest]
        public async Task DeleteAsync()
        {
            // Example: SubscriptionDelete
            var serviceBusSubscription = GetArmClient().GetServiceBusSubscription(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/ResourceGroup/providers/Microsoft.ServiceBus/namespaces/sdk-Namespace-5882/topics/sdk-Topics-1804/subscriptions/00000000-0000-0000-0000-000000000000"));

            await serviceBusSubscription.DeleteAsync();
        }
    }
}

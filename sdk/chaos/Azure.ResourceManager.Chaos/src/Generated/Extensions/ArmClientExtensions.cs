// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager;

namespace Azure.ResourceManager.Chaos
{
    /// <summary> A class to add extension methods to ArmClient. </summary>
    public static partial class ArmClientExtensions
    {
        #region Capability
        /// <summary> Gets an object representing a Capability along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="Capability" /> object. </returns>
        public static Capability GetCapability(this ArmClient armClient, ResourceIdentifier id)
        {
            Capability.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new Capability(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region Experiment
        /// <summary> Gets an object representing a Experiment along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="Experiment" /> object. </returns>
        public static Experiment GetExperiment(this ArmClient armClient, ResourceIdentifier id)
        {
            Experiment.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new Experiment(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ExperimentStatus
        /// <summary> Gets an object representing a ExperimentStatus along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ExperimentStatus" /> object. </returns>
        public static ExperimentStatus GetExperimentStatus(this ArmClient armClient, ResourceIdentifier id)
        {
            ExperimentStatus.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ExperimentStatus(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ExperimentExecutionDetails
        /// <summary> Gets an object representing a ExperimentExecutionDetails along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ExperimentExecutionDetails" /> object. </returns>
        public static ExperimentExecutionDetails GetExperimentExecutionDetails(this ArmClient armClient, ResourceIdentifier id)
        {
            ExperimentExecutionDetails.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ExperimentExecutionDetails(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region Target
        /// <summary> Gets an object representing a Target along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="Target" /> object. </returns>
        public static Target GetTarget(this ArmClient armClient, ResourceIdentifier id)
        {
            Target.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new Target(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region TargetType
        /// <summary> Gets an object representing a TargetType along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="TargetType" /> object. </returns>
        public static TargetType GetTargetType(this ArmClient armClient, ResourceIdentifier id)
        {
            TargetType.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new TargetType(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region CapabilityType
        /// <summary> Gets an object representing a CapabilityType along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="CapabilityType" /> object. </returns>
        public static CapabilityType GetCapabilityType(this ArmClient armClient, ResourceIdentifier id)
        {
            CapabilityType.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new CapabilityType(clientOptions, credential, uri, pipeline, id));
        }
        #endregion
    }
}

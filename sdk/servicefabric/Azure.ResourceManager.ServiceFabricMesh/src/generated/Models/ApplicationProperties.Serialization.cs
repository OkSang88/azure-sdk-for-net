// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;
using ServiceFabricMeshManagementClient;

namespace ServiceFabricMeshManagementClient.Models
{
    public partial class ApplicationProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Description))
            {
                writer.WritePropertyName("description");
                writer.WriteStringValue(Description);
            }
            if (Optional.IsCollectionDefined(Services))
            {
                writer.WritePropertyName("services");
                writer.WriteStartArray();
                foreach (var item in Services)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(Diagnostics))
            {
                writer.WritePropertyName("diagnostics");
                writer.WriteObjectValue(Diagnostics);
            }
            if (Optional.IsDefined(DebugParams))
            {
                writer.WritePropertyName("debugParams");
                writer.WriteStringValue(DebugParams);
            }
            writer.WriteEndObject();
        }

        internal static ApplicationProperties DeserializeApplicationProperties(JsonElement element)
        {
            Optional<string> description = default;
            Optional<IList<ServiceResourceDescriptionData>> services = default;
            Optional<DiagnosticsDescription> diagnostics = default;
            Optional<string> debugParams = default;
            Optional<IReadOnlyList<string>> serviceNames = default;
            Optional<ResourceStatus> status = default;
            Optional<string> statusDetails = default;
            Optional<HealthState> healthState = default;
            Optional<string> unhealthyEvaluation = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("description"))
                {
                    description = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("services"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<ServiceResourceDescriptionData> array = new List<ServiceResourceDescriptionData>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ServiceResourceDescriptionData.DeserializeServiceResourceDescriptionData(item));
                    }
                    services = array;
                    continue;
                }
                if (property.NameEquals("diagnostics"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    diagnostics = DiagnosticsDescription.DeserializeDiagnosticsDescription(property.Value);
                    continue;
                }
                if (property.NameEquals("debugParams"))
                {
                    debugParams = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("serviceNames"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    serviceNames = array;
                    continue;
                }
                if (property.NameEquals("status"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    status = new ResourceStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("statusDetails"))
                {
                    statusDetails = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("healthState"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    healthState = new HealthState(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("unhealthyEvaluation"))
                {
                    unhealthyEvaluation = property.Value.GetString();
                    continue;
                }
            }
            return new ApplicationProperties(description.Value, Optional.ToList(services), diagnostics.Value, debugParams.Value, Optional.ToList(serviceNames), Optional.ToNullable(status), statusDetails.Value, Optional.ToNullable(healthState), unhealthyEvaluation.Value);
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;
using Azure.ResourceManager.StorSimple8000Series.Models;

namespace Azure.ResourceManager.StorSimple8000Series
{
    /// <summary> A class representing the BandwidthSetting data model. </summary>
    public partial class BandwidthSettingData : BaseModel
    {
        /// <summary> Initializes a new instance of BandwidthSettingData. </summary>
        /// <param name="schedules"> The schedules. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="schedules"/> is null. </exception>
        public BandwidthSettingData(IEnumerable<BandwidthSchedule> schedules)
        {
            if (schedules == null)
            {
                throw new ArgumentNullException(nameof(schedules));
            }

            Schedules = schedules.ToList();
        }

        /// <summary> Initializes a new instance of BandwidthSettingData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="type"> The type. </param>
        /// <param name="kind"> The Kind of the object. Currently only Series8000 is supported. </param>
        /// <param name="schedules"> The schedules. </param>
        /// <param name="volumeCount"> The number of volumes that uses the bandwidth setting. </param>
        internal BandwidthSettingData(ResourceIdentifier id, string name, ResourceType type, string kind, IList<BandwidthSchedule> schedules, int? volumeCount) : base(id, name, type, kind)
        {
            Schedules = schedules;
            VolumeCount = volumeCount;
        }

        /// <summary> The schedules. </summary>
        public IList<BandwidthSchedule> Schedules { get; }
        /// <summary> The number of volumes that uses the bandwidth setting. </summary>
        public int? VolumeCount { get; }
    }
}

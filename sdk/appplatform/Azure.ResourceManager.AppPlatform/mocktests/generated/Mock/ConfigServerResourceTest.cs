// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.AppPlatform.Tests.Mock;
using Azure.ResourceManager.AppPlatform.Tests.Mock.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.AppPlatform.Tests.Mock.Tests.Mock
{
    /// <summary> Test for ConfigServerResource. </summary>
    public partial class ConfigServerResourceMockTests : MockTestBase
    {
        public ConfigServerResourceMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: ConfigServers_Get
            var configServerResourceId = AppPlatform.Tests.Mock.ConfigServerResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myservice");
            var configServerResource = GetArmClient().GetConfigServerResource(configServerResourceId);

            await configServerResource.GetAsync();
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: ConfigServers_UpdatePatch
            var configServerResourceId = AppPlatform.Tests.Mock.ConfigServerResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myservice");
            var configServerResource = GetArmClient().GetConfigServerResource(configServerResourceId);
            AppPlatform.Tests.Mock.ConfigServerResourceData configServerResource2 = new AppPlatform.Tests.Mock.ConfigServerResourceData()
            {
                Properties = new AppPlatform.Tests.Mock.Models.ConfigServerProperties()
                {
                    ConfigServer = new AppPlatform.Tests.Mock.Models.ConfigServerSettings()
                    {
                        GitProperty = new AppPlatform.Tests.Mock.Models.ConfigServerGitProperty(uri: "https://github.com/fake-user/fake-repository.git")
                        {
                            Label = "master",
                        },
                    },
                },
            };

            await configServerResource.UpdateAsync(true, configServerResource2);
        }
    }
}

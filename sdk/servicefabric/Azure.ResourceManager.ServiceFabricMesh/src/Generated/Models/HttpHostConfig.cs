// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.ResourceManager.ServiceFabricMesh.Models
{
    /// <summary> Describes the hostname properties for http routing. </summary>
    public partial class HttpHostConfig
    {
        /// <summary> Initializes a new instance of HttpHostConfig. </summary>
        /// <param name="name"> http hostname config name. </param>
        /// <param name="routes"> Route information to use for routing. Routes are processed in the order they are specified. Specify routes that are more specific before routes that can handle general cases. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> or <paramref name="routes"/> is null. </exception>
        public HttpHostConfig(string name, IEnumerable<HttpRouteConfig> routes)
        {
            if (name == null)
            {
                throw new ArgumentNullException(nameof(name));
            }
            if (routes == null)
            {
                throw new ArgumentNullException(nameof(routes));
            }

            Name = name;
            Routes = routes.ToList();
        }

        /// <summary> Initializes a new instance of HttpHostConfig. </summary>
        /// <param name="name"> http hostname config name. </param>
        /// <param name="routes"> Route information to use for routing. Routes are processed in the order they are specified. Specify routes that are more specific before routes that can handle general cases. </param>
        internal HttpHostConfig(string name, IList<HttpRouteConfig> routes)
        {
            Name = name;
            Routes = routes;
        }

        /// <summary> http hostname config name. </summary>
        public string Name { get; set; }
        /// <summary> Route information to use for routing. Routes are processed in the order they are specified. Specify routes that are more specific before routes that can handle general cases. </summary>
        public IList<HttpRouteConfig> Routes { get; }
    }
}

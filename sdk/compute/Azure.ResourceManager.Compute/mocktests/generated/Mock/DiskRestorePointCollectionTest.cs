// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Compute;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Compute.Tests.Mock
{
    /// <summary> Test for DiskRestorePoint. </summary>
    public partial class DiskRestorePointCollectionMockTests : MockTestBase
    {
        public DiskRestorePointCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get an incremental disk restorePoint resource.
            string diskRestorePointName = "TestDisk45ceb03433006d1baee0_b70cd924-3362-4a80-93c2-9415eaa12745";

            var restorePointId = Compute.RestorePoint.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "rpc", "default");
            var collection = GetArmClient().GetRestorePoint(restorePointId).GetDiskRestorePoints();
            await collection.GetAsync(diskRestorePointName);
        }

        [RecordedTest]
        public async Task Get2()
        {
            // Example: Get an incremental disk restorePoint when source resource is from a different region
            string diskRestorePointName = "TestDisk45ceb03433006d1baee0_b70cd924-3362-4a80-93c2-9415eaa12745";

            var restorePointId = Compute.RestorePoint.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "rpc", "default");
            var collection = GetArmClient().GetRestorePoint(restorePointId).GetDiskRestorePoints();
            await collection.GetAsync(diskRestorePointName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: Get an incremental disk restorePoint resource.

            var restorePointId = Compute.RestorePoint.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "rpc", "default");
            var collection = GetArmClient().GetRestorePoint(restorePointId).GetDiskRestorePoints();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

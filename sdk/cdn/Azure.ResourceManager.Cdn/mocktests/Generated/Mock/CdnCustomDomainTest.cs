// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Cdn;
using Azure.ResourceManager.Cdn.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Cdn.Tests.Mock
{
    /// <summary> Test for CdnCustomDomain. </summary>
    public partial class CdnCustomDomainMockTests : MockTestBase
    {
        public CdnCustomDomainMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: CustomDomains_Get
            var cdnCustomDomainId = Cdn.CdnCustomDomain.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "RG", "profile1", "endpoint1", "www-someDomain-net");
            var cdnCustomDomain = GetArmClient().GetCdnCustomDomain(cdnCustomDomainId);

            await cdnCustomDomain.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: CustomDomains_Delete
            var cdnCustomDomainId = Cdn.CdnCustomDomain.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "RG", "profile1", "endpoint1", "www-someDomain-net");
            var cdnCustomDomain = GetArmClient().GetCdnCustomDomain(cdnCustomDomainId);

            await cdnCustomDomain.DeleteAsync();
        }

        [RecordedTest]
        public async Task DisableCustomHttps()
        {
            // Example: CustomDomains_DisableCustomHttps
            var cdnCustomDomainId = Cdn.CdnCustomDomain.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "RG", "profile1", "endpoint1", "www-someDomain-net");
            var cdnCustomDomain = GetArmClient().GetCdnCustomDomain(cdnCustomDomainId);

            await cdnCustomDomain.DisableCustomHttpsAsync();
        }

        [RecordedTest]
        public async Task EnableCustomHttps()
        {
            // Example: CustomDomains_EnableCustomHttpsUsingCDNManagedCertificate
            var cdnCustomDomainId = Cdn.CdnCustomDomain.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "RG", "profile1", "endpoint1", "www-someDomain-net");
            var cdnCustomDomain = GetArmClient().GetCdnCustomDomain(cdnCustomDomainId);
            Cdn.Models.CustomDomainHttpsOptions customDomainHttpsParameters = null;

            await cdnCustomDomain.EnableCustomHttpsAsync(customDomainHttpsParameters);
        }

        [RecordedTest]
        public async Task EnableCustomHttps2()
        {
            // Example: CustomDomains_EnableCustomHttpsUsingYourOwnCertificate
            var cdnCustomDomainId = Cdn.CdnCustomDomain.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "RG", "profile1", "endpoint1", "www-someDomain-net");
            var cdnCustomDomain = GetArmClient().GetCdnCustomDomain(cdnCustomDomainId);
            Cdn.Models.CustomDomainHttpsOptions customDomainHttpsParameters = null;

            await cdnCustomDomain.EnableCustomHttpsAsync(customDomainHttpsParameters);
        }
    }
}

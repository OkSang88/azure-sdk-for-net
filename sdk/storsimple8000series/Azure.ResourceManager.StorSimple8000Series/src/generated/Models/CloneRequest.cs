// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace StorSimple8000SeriesManagementClient.Models
{
    /// <summary> The clone job request. </summary>
    public partial class CloneRequest
    {
        /// <summary> Initializes a new instance of CloneRequest. </summary>
        /// <param name="targetDeviceId"> The path ID of the device which will act as the clone target. </param>
        /// <param name="targetVolumeName"> The name of the new volume which will be created and the backup will be cloned into. </param>
        /// <param name="targetAccessControlRecordIds"> The list of path IDs of the access control records to be associated to the new cloned volume. </param>
        /// <param name="backupElement"> The backup element that is cloned. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="targetDeviceId"/>, <paramref name="targetVolumeName"/>, <paramref name="targetAccessControlRecordIds"/>, or <paramref name="backupElement"/> is null. </exception>
        public CloneRequest(string targetDeviceId, string targetVolumeName, IEnumerable<string> targetAccessControlRecordIds, BackupElement backupElement)
        {
            if (targetDeviceId == null)
            {
                throw new ArgumentNullException(nameof(targetDeviceId));
            }
            if (targetVolumeName == null)
            {
                throw new ArgumentNullException(nameof(targetVolumeName));
            }
            if (targetAccessControlRecordIds == null)
            {
                throw new ArgumentNullException(nameof(targetAccessControlRecordIds));
            }
            if (backupElement == null)
            {
                throw new ArgumentNullException(nameof(backupElement));
            }

            TargetDeviceId = targetDeviceId;
            TargetVolumeName = targetVolumeName;
            TargetAccessControlRecordIds = targetAccessControlRecordIds.ToList();
            BackupElement = backupElement;
        }

        /// <summary> The path ID of the device which will act as the clone target. </summary>
        public string TargetDeviceId { get; }
        /// <summary> The name of the new volume which will be created and the backup will be cloned into. </summary>
        public string TargetVolumeName { get; }
        /// <summary> The list of path IDs of the access control records to be associated to the new cloned volume. </summary>
        public IList<string> TargetAccessControlRecordIds { get; }
        /// <summary> The backup element that is cloned. </summary>
        public BackupElement BackupElement { get; }
    }
}

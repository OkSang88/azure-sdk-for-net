// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Sql;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Sql.Tests.Mock
{
    /// <summary> Test for ReplicationLink. </summary>
    public partial class ReplicationLinkCollectionMockTests : MockTestBase
    {
        public ReplicationLinkCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Gets the replication link.
            string linkId = "4891ca10-ebd0-47d7-9182-c722651780fb";

            var sqlDatabaseId = Sql.SqlDatabase.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "Default", "sourcesvr", "gamma-db");
            var collection = GetArmClient().GetSqlDatabase(sqlDatabaseId).GetReplicationLinks();
            await collection.GetAsync(linkId);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: List replication links on server on database.

            var sqlDatabaseId = Sql.SqlDatabase.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "Default", "sourcesvr", "tetha-db");
            var collection = GetArmClient().GetSqlDatabase(sqlDatabaseId).GetReplicationLinks();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

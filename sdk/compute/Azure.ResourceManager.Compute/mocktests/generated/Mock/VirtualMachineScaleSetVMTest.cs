// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Compute;
using Azure.ResourceManager.Compute.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Compute.Tests.Mock
{
    /// <summary> Test for VirtualMachineScaleSetVM. </summary>
    public partial class VirtualMachineScaleSetVMMockTests : MockTestBase
    {
        public VirtualMachineScaleSetVMMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get VM scale set VM with UserData
            var virtualMachineScaleSetVMId = Compute.VirtualMachineScaleSetVM.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "{vmss-name}", "0");
            var virtualMachineScaleSetVM = GetArmClient().GetVirtualMachineScaleSetVM(virtualMachineScaleSetVMId);
            Compute.Models.InstanceViewTypes? expand = null;

            await virtualMachineScaleSetVM.GetAsync(expand);
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: Force Delete a virtual machine from a VM scale set.
            var virtualMachineScaleSetVMId = Compute.VirtualMachineScaleSetVM.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myvmScaleSet", "0");
            var virtualMachineScaleSetVM = GetArmClient().GetVirtualMachineScaleSetVM(virtualMachineScaleSetVMId);
            bool? forceDeletion = true;

            await virtualMachineScaleSetVM.DeleteAsync(forceDeletion);
        }

        [RecordedTest]
        public async Task GetInstanceView()
        {
            // Example: Get instance view of a virtual machine from a VM scale set placed on a dedicated host group through automatic placement.
            var virtualMachineScaleSetVMId = Compute.VirtualMachineScaleSetVM.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myVirtualMachineScaleSet", "0");
            var virtualMachineScaleSetVM = GetArmClient().GetVirtualMachineScaleSetVM(virtualMachineScaleSetVMId);

            await virtualMachineScaleSetVM.GetInstanceViewAsync();
        }

        [RecordedTest]
        public async Task RetrieveBootDiagnosticsData()
        {
            // Example: RetrieveBootDiagnosticsData of a virtual machine.
            var virtualMachineScaleSetVMId = Compute.VirtualMachineScaleSetVM.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ResourceGroup", "myvmScaleSet", "0");
            var virtualMachineScaleSetVM = GetArmClient().GetVirtualMachineScaleSetVM(virtualMachineScaleSetVMId);
            int? sasUriExpirationTimeInMinutes = 60;

            await virtualMachineScaleSetVM.RetrieveBootDiagnosticsDataAsync(sasUriExpirationTimeInMinutes);
        }

        [RecordedTest]
        public async Task SimulateEviction()
        {
            // Example: Simulate Eviction a virtual machine.
            var virtualMachineScaleSetVMId = Compute.VirtualMachineScaleSetVM.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ResourceGroup", "VmScaleSetName", "InstanceId");
            var virtualMachineScaleSetVM = GetArmClient().GetVirtualMachineScaleSetVM(virtualMachineScaleSetVMId);

            await virtualMachineScaleSetVM.SimulateEvictionAsync();
        }

        [RecordedTest]
        public async Task RunCommand()
        {
            // Example: VirtualMachineScaleSetVMs_RunCommand
            var virtualMachineScaleSetVMId = Compute.VirtualMachineScaleSetVM.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myVirtualMachineScaleSet", "0");
            var virtualMachineScaleSetVM = GetArmClient().GetVirtualMachineScaleSetVM(virtualMachineScaleSetVMId);
            Compute.Models.RunCommandInput parameters = new Compute.Models.RunCommandInput(commandId: "RunPowerShellScript");

            await virtualMachineScaleSetVM.RunCommandAsync(parameters);
        }
    }
}

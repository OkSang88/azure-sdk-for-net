// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Sql;
using Azure.ResourceManager.Sql.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Sql.Tests.Mock
{
    /// <summary> Test for ServerDnsAlias. </summary>
    public partial class ServerDnsAliasMockTests : MockTestBase
    {
        public ServerDnsAliasMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get server DNS alias
            var serverDnsAliasId = Sql.ServerDnsAlias.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "Default", "dns-alias-server", "dns-alias-name-1");
            var serverDnsAlias = GetArmClient().GetServerDnsAlias(serverDnsAliasId);

            await serverDnsAlias.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: Delete server DNS alias
            var serverDnsAliasId = Sql.ServerDnsAlias.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "Default", "dns-alias-server", "dns-alias-name-1");
            var serverDnsAlias = GetArmClient().GetServerDnsAlias(serverDnsAliasId);

            await serverDnsAlias.DeleteAsync(true);
        }

        [RecordedTest]
        public async Task Acquire()
        {
            // Example: Acquire server DNS alias
            var serverDnsAliasId = Sql.ServerDnsAlias.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "Default", "dns-alias-new-server", "dns-alias-name-1");
            var serverDnsAlias = GetArmClient().GetServerDnsAlias(serverDnsAliasId);
            Sql.Models.ServerDnsAliasAcquisition parameters = new Sql.Models.ServerDnsAliasAcquisition(oldServerDnsAliasId: "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default/providers/Microsoft.Sql/servers/dns-alias-old-server/dnsAliases/dns-alias-name-1");

            await serverDnsAlias.AcquireAsync(true, parameters);
        }
    }
}

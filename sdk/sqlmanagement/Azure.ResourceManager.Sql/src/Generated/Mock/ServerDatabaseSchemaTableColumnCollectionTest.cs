// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Sql;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Sql.Tests.Mock
{
    /// <summary> Test for DatabaseColumn. </summary>
    public partial class ServerDatabaseSchemaTableColumnCollectionMockTests : MockTestBase
    {
        public ServerDatabaseSchemaTableColumnCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get database column
            string columnName = "column1";

            var serverDatabaseSchemaTableId = Sql.ServerDatabaseSchemaTable.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myRG", "serverName", "myDatabase", "dbo", "table1");
            var collection = GetArmClient().GetServerDatabaseSchemaTable(serverDatabaseSchemaTableId).GetServerDatabaseSchemaTableColumns();
            await collection.GetAsync(columnName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: List database columns
            string filter = null;

            var serverDatabaseSchemaTableId = Sql.ServerDatabaseSchemaTable.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myRG", "serverName", "myDatabase", "dbo", "table1");
            var collection = GetArmClient().GetServerDatabaseSchemaTable(serverDatabaseSchemaTableId).GetServerDatabaseSchemaTableColumns();
            await foreach (var _ in collection.GetAllAsync(filter))
            {
            }
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.Compute.Models;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Compute.Tests.Mock
{
    /// <summary> Test for VirtualMachineScaleSetVM. </summary>
    public partial class VirtualMachineScaleSetVMMockTests : MockTestBase
    {
        public VirtualMachineScaleSetVMMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get VM scale set VM with UserData
            var virtualMachineScaleSetVM = GetArmClient().GetVirtualMachineScaleSetVM(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachineScaleSets/{{vmss-name}}/virtualmachines/0"));
            Compute.Models.InstanceViewTypes? expand = null;

            await virtualMachineScaleSetVM.GetAsync(expand);
        }

        [RecordedTest]
        public async Task DeleteAsync()
        {
            // Example: Force Delete a virtual machine from a VM scale set.
            var virtualMachineScaleSetVM = GetArmClient().GetVirtualMachineScaleSetVM(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachineScaleSets/myvmScaleSet/virtualmachines/0"));
            bool? forceDeletion = true;

            await virtualMachineScaleSetVM.DeleteAsync(forceDeletion);
        }

        [RecordedTest]
        public async Task GetInstanceViewAsync()
        {
            // Example: Get instance view of a virtual machine from a VM scale set placed on a dedicated host group through automatic placement.
            var virtualMachineScaleSetVM = GetArmClient().GetVirtualMachineScaleSetVM(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachineScaleSets/myVirtualMachineScaleSet/virtualmachines/0"));

            await virtualMachineScaleSetVM.GetInstanceViewAsync();
        }

        [RecordedTest]
        public async Task RetrieveBootDiagnosticsDataAsync()
        {
            // Example: RetrieveBootDiagnosticsData of a virtual machine.
            var virtualMachineScaleSetVM = GetArmClient().GetVirtualMachineScaleSetVM(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/ResourceGroup/providers/Microsoft.Compute/virtualMachineScaleSets/myvmScaleSet/virtualmachines/0"));
            int? sasUriExpirationTimeInMinutes = 60;

            await virtualMachineScaleSetVM.RetrieveBootDiagnosticsDataAsync(sasUriExpirationTimeInMinutes);
        }

        [RecordedTest]
        public async Task SimulateEvictionAsync()
        {
            // Example: Simulate Eviction a virtual machine.
            var virtualMachineScaleSetVM = GetArmClient().GetVirtualMachineScaleSetVM(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/ResourceGroup/providers/Microsoft.Compute/virtualMachineScaleSets/VmScaleSetName/virtualMachines/InstanceId"));

            await virtualMachineScaleSetVM.SimulateEvictionAsync();
        }

        [RecordedTest]
        public async Task RunCommandAsync()
        {
            // Example: VirtualMachineScaleSetVMs_RunCommand
            var virtualMachineScaleSetVM = GetArmClient().GetVirtualMachineScaleSetVM(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachineScaleSets/myVirtualMachineScaleSet/virtualmachines/0"));
            Compute.Models.RunCommandInput parameters = new Compute.Models.RunCommandInput(commandId: "RunPowerShellScript");

            await virtualMachineScaleSetVM.RunCommandAsync(parameters);
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.ConnectedVMwarevSphere;
using Azure.ResourceManager.ConnectedVMwarevSphere.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.ConnectedVMwarevSphere.Tests.Mock
{
    /// <summary> Test for VMwareDatastore. </summary>
    public partial class VMwareDatastoreMockTests : MockTestBase
    {
        public VMwareDatastoreMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: GetDatastore
            var vMwareDatastoreId = ConnectedVMwarevSphere.VMwareDatastore.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg", "HRDatastore");
            var vMwareDatastore = GetArmClient().GetVMwareDatastore(vMwareDatastoreId);

            await vMwareDatastore.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: DeleteDatastore
            var vMwareDatastoreId = ConnectedVMwarevSphere.VMwareDatastore.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg", "HRDatastore");
            var vMwareDatastore = GetArmClient().GetVMwareDatastore(vMwareDatastoreId);
            bool? force = null;

            await vMwareDatastore.DeleteAsync(true, force);
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: UpdateDatastore
            var vMwareDatastoreId = ConnectedVMwarevSphere.VMwareDatastore.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg", "HRDatastore");
            var vMwareDatastore = GetArmClient().GetVMwareDatastore(vMwareDatastoreId);
            ConnectedVMwarevSphere.Models.ResourcePatch body = new ConnectedVMwarevSphere.Models.ResourcePatch();

            await vMwareDatastore.UpdateAsync(body);
        }
    }
}

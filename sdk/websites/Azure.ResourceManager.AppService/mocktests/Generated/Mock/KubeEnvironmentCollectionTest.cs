// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Core.TestFramework;
using Azure.ResourceManager.AppService;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.AppService.Tests.Mock
{
    /// <summary> Test for KubeEnvironment. </summary>
    public partial class KubeEnvironmentCollectionMockTests : MockTestBase
    {
        public KubeEnvironmentCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: Create kube environments
            string name = "testkubeenv";
            AppService.KubeEnvironmentData kubeEnvironmentEnvelope = new AppService.KubeEnvironmentData(location: "East US")
            {
                StaticIp = "1.2.3.4",
            };

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/examplerg")).GetKubeEnvironments();
            await collection.CreateOrUpdateAsync(name, kubeEnvironmentEnvelope);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get kube environments by name
            string name = "jlaw-demo1";

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/examplerg")).GetKubeEnvironments();
            await collection.GetAsync(name);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: List kube environments by resource group

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/examplerg")).GetKubeEnvironments();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

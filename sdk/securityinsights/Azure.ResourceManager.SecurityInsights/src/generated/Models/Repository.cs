// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace SecurityInsights.Models
{
    /// <summary> metadata of a repository. </summary>
    public partial class Repository
    {
        /// <summary> Initializes a new instance of Repository. </summary>
        public Repository()
        {
            PathMapping = new ChangeTrackingList<ContentPathMap>();
        }

        /// <summary> Initializes a new instance of Repository. </summary>
        /// <param name="url"> Url of repository. </param>
        /// <param name="branch"> Branch name of repository. </param>
        /// <param name="displayUrl"> Display url of repository. </param>
        /// <param name="deploymentLogsUrl"> Url to access repository action logs. </param>
        /// <param name="pathMapping"> Dictionary of source control content type and path mapping. </param>
        internal Repository(string url, string branch, string displayUrl, string deploymentLogsUrl, IList<ContentPathMap> pathMapping)
        {
            Url = url;
            Branch = branch;
            DisplayUrl = displayUrl;
            DeploymentLogsUrl = deploymentLogsUrl;
            PathMapping = pathMapping;
        }

        /// <summary> Url of repository. </summary>
        public string Url { get; set; }
        /// <summary> Branch name of repository. </summary>
        public string Branch { get; set; }
        /// <summary> Display url of repository. </summary>
        public string DisplayUrl { get; set; }
        /// <summary> Url to access repository action logs. </summary>
        public string DeploymentLogsUrl { get; set; }
        /// <summary> Dictionary of source control content type and path mapping. </summary>
        public IList<ContentPathMap> PathMapping { get; }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Network;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Network.Tests.Mock
{
    /// <summary> Test for PrivateDnsZoneGroup. </summary>
    public partial class PrivateDnsZoneGroupCollectionMockTests : MockTestBase
    {
        public PrivateDnsZoneGroupCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: Create private dns zone group
            string privateDnsZoneGroupName = "testPdnsgroup";
            Network.PrivateDnsZoneGroupData parameters = new Network.PrivateDnsZoneGroupData();

            var privateEndpointId = Network.PrivateEndpoint.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "testPe");
            var collection = GetArmClient().GetPrivateEndpoint(privateEndpointId).GetPrivateDnsZoneGroups();
            await collection.CreateOrUpdateAsync(privateDnsZoneGroupName, parameters);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get private dns zone group
            string privateDnsZoneGroupName = "testPdnsgroup";

            var privateEndpointId = Network.PrivateEndpoint.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "testPe");
            var collection = GetArmClient().GetPrivateEndpoint(privateEndpointId).GetPrivateDnsZoneGroups();
            await collection.GetAsync(privateDnsZoneGroupName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: List private endpoints in resource group

            var privateEndpointId = Network.PrivateEndpoint.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "testPe");
            var collection = GetArmClient().GetPrivateEndpoint(privateEndpointId).GetPrivateDnsZoneGroups();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

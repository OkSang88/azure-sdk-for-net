// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Core.TestFramework;
using Azure.ResourceManager.KeyVault;
using Azure.ResourceManager.KeyVault.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.KeyVault.Tests.Mock
{
    /// <summary> Test for MhsmPrivateEndpointConnection. </summary>
    public partial class MhsmPrivateEndpointConnectionCollectionMockTests : MockTestBase
    {
        public MhsmPrivateEndpointConnectionCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: ManagedHsmPutPrivateEndpointConnection
            string privateEndpointConnectionName = "sample-pec";
            KeyVault.MhsmPrivateEndpointConnectionData properties = new KeyVault.MhsmPrivateEndpointConnectionData(location: AzureLocation.WestUS)
            {
                PrivateLinkServiceConnectionState = new KeyVault.Models.MhsmPrivateLinkServiceConnectionState()
                {
                    Status = new KeyVault.Models.PrivateEndpointServiceConnectionStatus("Approved"),
                    Description = "My name is Joe and I'm approving this.",
                },
            };

            var managedHsmId = KeyVault.ManagedHsm.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "sample-group", "sample-mhsm");
            var collection = GetArmClient().GetManagedHsm(managedHsmId).GetMhsmPrivateEndpointConnections();
            await collection.CreateOrUpdateAsync(privateEndpointConnectionName, properties);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: ManagedHsmGetPrivateEndpointConnection
            string privateEndpointConnectionName = "sample-pec";

            var managedHsmId = KeyVault.ManagedHsm.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "sample-group", "sample-mhsm");
            var collection = GetArmClient().GetManagedHsm(managedHsmId).GetMhsmPrivateEndpointConnections();
            await collection.GetAsync(privateEndpointConnectionName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: List managed HSM Pools in a subscription

            var managedHsmId = KeyVault.ManagedHsm.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "sample-group", "sample-mhsm");
            var collection = GetArmClient().GetManagedHsm(managedHsmId).GetMhsmPrivateEndpointConnections();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;
using BatchManagementClient;

namespace BatchManagementClient.Tests.Mock
{
    /// <summary> Test for Application. </summary>
    public partial class ApplicationMockTests : MockTestBase
    {
        public ApplicationMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: ApplicationGet
            var applicationId = BatchManagementClient.Application.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "default-azurebatch-japaneast", "sampleacct", "app1");
            var application = GetArmClient().GetApplication(applicationId);

            await application.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: ApplicationDelete
            var applicationId = BatchManagementClient.Application.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "default-azurebatch-japaneast", "sampleacct", "app1");
            var application = GetArmClient().GetApplication(applicationId);

            await application.DeleteAsync(true);
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: ApplicationUpdate
            var applicationId = BatchManagementClient.Application.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "default-azurebatch-japaneast", "sampleacct", "app1");
            var application = GetArmClient().GetApplication(applicationId);
            BatchManagementClient.ApplicationData parameters = new BatchManagementClient.ApplicationData()
            {
                DisplayName = "myAppName",
                AllowUpdates = true,
                DefaultVersion = "2",
            };

            await application.UpdateAsync(parameters);
        }
    }
}

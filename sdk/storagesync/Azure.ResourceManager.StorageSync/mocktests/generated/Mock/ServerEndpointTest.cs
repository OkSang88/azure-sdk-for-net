// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.StorageSync;
using Azure.ResourceManager.StorageSync.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.StorageSync.Tests.Mock
{
    /// <summary> Test for ServerEndpoint. </summary>
    public partial class ServerEndpointMockTests : MockTestBase
    {
        public ServerEndpointMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: ServerEndpoints_Get
            var serverEndpointId = StorageSync.ServerEndpoint.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "SampleResourceGroup_1", "SampleStorageSyncService_1", "SampleSyncGroup_1", "SampleServerEndpoint_1");
            var serverEndpoint = GetArmClient().GetServerEndpoint(serverEndpointId);

            await serverEndpoint.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: ServerEndpoints_Delete
            var serverEndpointId = StorageSync.ServerEndpoint.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "SampleResourceGroup_1", "SampleStorageSyncService_1", "SampleSyncGroup_1", "SampleServerEndpoint_1");
            var serverEndpoint = GetArmClient().GetServerEndpoint(serverEndpointId);

            await serverEndpoint.DeleteAsync(true);
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: ServerEndpoints_Update
            var serverEndpointId = StorageSync.ServerEndpoint.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "SampleResourceGroup_1", "SampleStorageSyncService_1", "SampleSyncGroup_1", "SampleServerEndpoint_1");
            var serverEndpoint = GetArmClient().GetServerEndpoint(serverEndpointId);
            StorageSync.Models.ServerEndpointUpdateParameters parameters = new StorageSync.Models.ServerEndpointUpdateParameters()
            {
                CloudTiering = new StorageSync.Models.FeatureStatus("off"),
                VolumeFreeSpacePercent = 100,
                TierFilesOlderThanDays = 0,
                OfflineDataTransfer = new StorageSync.Models.FeatureStatus("off"),
                LocalCacheMode = new StorageSync.Models.LocalCacheMode("UpdateLocallyCachedFiles"),
            };

            await serverEndpoint.UpdateAsync(true, parameters);
        }

        [RecordedTest]
        public async Task RecallAction()
        {
            // Example: ServerEndpoints_recallAction
            var serverEndpointId = StorageSync.ServerEndpoint.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "SampleResourceGroup_1", "SampleStorageSyncService_1", "SampleSyncGroup_1", "SampleServerEndpoint_1");
            var serverEndpoint = GetArmClient().GetServerEndpoint(serverEndpointId);
            StorageSync.Models.RecallActionParameters parameters = new StorageSync.Models.RecallActionParameters()
            {
                Pattern = "",
                RecallPath = "",
            };

            await serverEndpoint.RecallActionAsync(true, parameters);
        }
    }
}

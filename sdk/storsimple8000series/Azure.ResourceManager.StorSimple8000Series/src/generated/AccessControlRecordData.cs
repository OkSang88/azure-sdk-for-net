// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using StorSimple8000SeriesManagementClient.Models;

namespace StorSimple8000SeriesManagementClient
{
    /// <summary> A class representing the AccessControlRecord data model. </summary>
    public partial class AccessControlRecordData : BaseModel
    {
        /// <summary> Initializes a new instance of AccessControlRecordData. </summary>
        /// <param name="initiatorName"> The iSCSI initiator name (IQN). </param>
        /// <exception cref="ArgumentNullException"> <paramref name="initiatorName"/> is null. </exception>
        public AccessControlRecordData(string initiatorName)
        {
            if (initiatorName == null)
            {
                throw new ArgumentNullException(nameof(initiatorName));
            }

            InitiatorName = initiatorName;
        }

        /// <summary> Initializes a new instance of AccessControlRecordData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="type"> The type. </param>
        /// <param name="kind"> The Kind of the object. Currently only Series8000 is supported. </param>
        /// <param name="initiatorName"> The iSCSI initiator name (IQN). </param>
        /// <param name="volumeCount"> The number of volumes using the access control record. </param>
        internal AccessControlRecordData(ResourceIdentifier id, string name, ResourceType type, string kind, string initiatorName, int? volumeCount) : base(id, name, type, kind)
        {
            InitiatorName = initiatorName;
            VolumeCount = volumeCount;
        }

        /// <summary> The iSCSI initiator name (IQN). </summary>
        public string InitiatorName { get; set; }
        /// <summary> The number of volumes using the access control record. </summary>
        public int? VolumeCount { get; }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager;

namespace MicrosoftLogz
{
    /// <summary> A class to add extension methods to ArmClient. </summary>
    public static partial class ArmClientExtensions
    {
        #region Monitor
        /// <summary> Gets an object representing a Monitor along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="Monitor" /> object. </returns>
        public static Monitor GetMonitor(this ArmClient armClient, ResourceIdentifier id)
        {
            Monitor.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new Monitor(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region MonitorAccount
        /// <summary> Gets an object representing a MonitorAccount along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="MonitorAccount" /> object. </returns>
        public static MonitorAccount GetMonitorAccount(this ArmClient armClient, ResourceIdentifier id)
        {
            MonitorAccount.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new MonitorAccount(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region MonitorTagRule
        /// <summary> Gets an object representing a MonitorTagRule along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="MonitorTagRule" /> object. </returns>
        public static MonitorTagRule GetMonitorTagRule(this ArmClient armClient, ResourceIdentifier id)
        {
            MonitorTagRule.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new MonitorTagRule(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region MonitorAccountTagRule
        /// <summary> Gets an object representing a MonitorAccountTagRule along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="MonitorAccountTagRule" /> object. </returns>
        public static MonitorAccountTagRule GetMonitorAccountTagRule(this ArmClient armClient, ResourceIdentifier id)
        {
            MonitorAccountTagRule.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new MonitorAccountTagRule(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region LogzSingleSignOnResource
        /// <summary> Gets an object representing a LogzSingleSignOnResource along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="LogzSingleSignOnResource" /> object. </returns>
        public static LogzSingleSignOnResource GetLogzSingleSignOnResource(this ArmClient armClient, ResourceIdentifier id)
        {
            LogzSingleSignOnResource.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new LogzSingleSignOnResource(clientOptions, credential, uri, pipeline, id));
        }
        #endregion
    }
}

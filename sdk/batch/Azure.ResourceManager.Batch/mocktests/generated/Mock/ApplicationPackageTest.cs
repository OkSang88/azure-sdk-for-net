// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;
using BatchManagementClient;
using BatchManagementClient.Models;

namespace BatchManagementClient.Tests.Mock
{
    /// <summary> Test for ApplicationPackage. </summary>
    public partial class ApplicationPackageMockTests : MockTestBase
    {
        public ApplicationPackageMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: ApplicationPackageGet
            var applicationPackageId = BatchManagementClient.ApplicationPackage.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "default-azurebatch-japaneast", "sampleacct", "app1", "1");
            var applicationPackage = GetArmClient().GetApplicationPackage(applicationPackageId);

            await applicationPackage.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: ApplicationPackageDelete
            var applicationPackageId = BatchManagementClient.ApplicationPackage.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "default-azurebatch-japaneast", "sampleacct", "app1", "1");
            var applicationPackage = GetArmClient().GetApplicationPackage(applicationPackageId);

            await applicationPackage.DeleteAsync(true);
        }

        [RecordedTest]
        public async Task Activate()
        {
            // Example: ApplicationPackageActivate
            var applicationPackageId = BatchManagementClient.ApplicationPackage.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "default-azurebatch-japaneast", "sampleacct", "app1", "1");
            var applicationPackage = GetArmClient().GetApplicationPackage(applicationPackageId);
            BatchManagementClient.Models.ActivateApplicationPackageParameters parameters = new BatchManagementClient.Models.ActivateApplicationPackageParameters(format: "zip");

            await applicationPackage.ActivateAsync(parameters);
        }
    }
}

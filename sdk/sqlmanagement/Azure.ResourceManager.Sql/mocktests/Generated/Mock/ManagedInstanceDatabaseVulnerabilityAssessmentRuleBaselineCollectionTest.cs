// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Sql;
using Azure.ResourceManager.Sql.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Sql.Tests.Mock
{
    /// <summary> Test for DatabaseVulnerabilityAssessmentRuleBaseline. </summary>
    public partial class ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaselineCollectionMockTests : MockTestBase
    {
        public ManagedInstanceDatabaseVulnerabilityAssessmentRuleBaselineCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: Creates or updates a database's vulnerability assessment rule baseline.
            string ruleId = "VA1001";
            Sql.Models.VulnerabilityAssessmentPolicyBaselineName baselineName = Sql.Models.VulnerabilityAssessmentPolicyBaselineName.Default;
            Sql.DatabaseVulnerabilityAssessmentRuleBaselineData parameters = new Sql.DatabaseVulnerabilityAssessmentRuleBaselineData();

            var managedInstanceDatabaseVulnerabilityAssessmentId = Sql.ManagedInstanceDatabaseVulnerabilityAssessment.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "vulnerabilityaseessmenttest-4799", "vulnerabilityaseessmenttest-6440", "testdb", "default");
            var collection = GetArmClient().GetManagedInstanceDatabaseVulnerabilityAssessment(managedInstanceDatabaseVulnerabilityAssessmentId).GetManagedInstanceDatabaseVulnerabilityAssessmentRuleBaselines();
            await collection.CreateOrUpdateAsync(true, ruleId, baselineName, parameters);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Gets a database's vulnerability assessment rule baseline.
            string ruleId = "VA1001";
            Sql.Models.VulnerabilityAssessmentPolicyBaselineName baselineName = Sql.Models.VulnerabilityAssessmentPolicyBaselineName.Master;

            var managedInstanceDatabaseVulnerabilityAssessmentId = Sql.ManagedInstanceDatabaseVulnerabilityAssessment.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "vulnerabilityaseessmenttest-4711", "vulnerabilityaseessmenttest-6411", "testdb", "default");
            var collection = GetArmClient().GetManagedInstanceDatabaseVulnerabilityAssessment(managedInstanceDatabaseVulnerabilityAssessmentId).GetManagedInstanceDatabaseVulnerabilityAssessmentRuleBaselines();
            await collection.GetAsync(ruleId, baselineName);
        }
    }
}

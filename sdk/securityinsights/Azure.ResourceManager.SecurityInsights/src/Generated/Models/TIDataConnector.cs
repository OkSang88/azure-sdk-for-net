// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.SecurityInsights;

namespace Azure.ResourceManager.SecurityInsights.Models
{
    /// <summary> Represents threat intelligence data connector. </summary>
    public partial class TIDataConnector : DataConnectorData
    {
        /// <summary> Initializes a new instance of TIDataConnector. </summary>
        public TIDataConnector()
        {
            Kind = DataConnectorKind.ThreatIntelligence;
        }

        /// <summary> Initializes a new instance of TIDataConnector. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="type"> The type. </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="etag"> Etag of the azure resource. </param>
        /// <param name="kind"> The data connector kind. </param>
        /// <param name="tenantId"> The tenant id to connect to, and get the data from. </param>
        /// <param name="tipLookbackPeriod"> The lookback period for the feed to be imported. </param>
        /// <param name="dataTypes"> The available data types for the connector. </param>
        internal TIDataConnector(ResourceIdentifier id, string name, ResourceType type, SystemData systemData, string etag, DataConnectorKind kind, string tenantId, DateTimeOffset? tipLookbackPeriod, TIDataConnectorDataTypes dataTypes) : base(id, name, type, systemData, etag, kind)
        {
            TenantId = tenantId;
            TipLookbackPeriod = tipLookbackPeriod;
            DataTypes = dataTypes;
            Kind = kind;
        }

        /// <summary> The tenant id to connect to, and get the data from. </summary>
        public string TenantId { get; set; }
        /// <summary> The lookback period for the feed to be imported. </summary>
        public DateTimeOffset? TipLookbackPeriod { get; set; }
        /// <summary> The available data types for the connector. </summary>
        public TIDataConnectorDataTypes DataTypes { get; set; }
    }
}

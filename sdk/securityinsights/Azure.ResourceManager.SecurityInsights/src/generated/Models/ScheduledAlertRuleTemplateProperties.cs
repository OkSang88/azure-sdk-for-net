// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace SecurityInsights.Models
{
    /// <summary> Scheduled alert rule template properties. </summary>
    internal partial class ScheduledAlertRuleTemplateProperties : AlertRuleTemplatePropertiesBase
    {
        /// <summary> Initializes a new instance of ScheduledAlertRuleTemplateProperties. </summary>
        internal ScheduledAlertRuleTemplateProperties()
        {
            Tactics = new ChangeTrackingList<AttackTactic>();
            CustomDetails = new ChangeTrackingDictionary<string, string>();
            EntityMappings = new ChangeTrackingList<EntityMapping>();
        }

        /// <summary> The query that creates alerts for this rule. </summary>
        public string Query { get; }
        /// <summary> The severity for alerts created by this alert rule. </summary>
        public AlertSeverity? Severity { get; }
        /// <summary> The tactics of the alert rule. </summary>
        public IReadOnlyList<AttackTactic> Tactics { get; }
        /// <summary> The version of this template - in format &lt;a.b.c&gt;, where all are numbers. For example &lt;1.0.2&gt;. </summary>
        public string Version { get; }
        /// <summary> Dictionary of string key-value pairs of columns to be attached to the alert. </summary>
        public IReadOnlyDictionary<string, string> CustomDetails { get; }
        /// <summary> Array of the entity mappings of the alert rule. </summary>
        public IReadOnlyList<EntityMapping> EntityMappings { get; }
        /// <summary> The alert details override settings. </summary>
        public AlertDetailsOverride AlertDetailsOverride { get; }
        /// <summary> The frequency (in ISO 8601 duration format) for this alert rule to run. </summary>
        public TimeSpan? QueryFrequency { get; }
        /// <summary> The period (in ISO 8601 duration format) that this alert rule looks at. </summary>
        public TimeSpan? QueryPeriod { get; }
        /// <summary> The operation against the threshold that triggers alert rule. </summary>
        public TriggerOperator? TriggerOperator { get; }
        /// <summary> The threshold triggers this alert rule. </summary>
        public int? TriggerThreshold { get; }
        /// <summary> The event grouping settings. </summary>
        public EventGroupingSettings EventGroupingSettings { get; }
    }
}

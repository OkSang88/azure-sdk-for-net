// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;
using AzureMapsManagementClient;
using AzureMapsManagementClient.Models;

namespace AzureMapsManagementClient.Tests.Mock
{
    /// <summary> Test for Creator. </summary>
    public partial class CreatorCollectionMockTests : MockTestBase
    {
        public CreatorCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: Create Creator Resource
            string creatorName = "myCreator";
            AzureMapsManagementClient.CreatorData creatorResource = new AzureMapsManagementClient.CreatorData(location: "eastus2", properties: new AzureMapsManagementClient.Models.CreatorProperties(storageUnits: 5))
            {
            };
            creatorResource.Tags.ReplaceWith(new System.Collections.Generic.Dictionary<string, string>() { ["test"] = "true", });
            var mapsAccountId = AzureMapsManagementClient.MapsAccount.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myMapsAccount");
            var collection = GetArmClient().GetMapsAccount(mapsAccountId).GetCreators();
            await collection.CreateOrUpdateAsync(true, creatorName, creatorResource);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get Creator Resource
            string creatorName = "myCreator";

            var mapsAccountId = AzureMapsManagementClient.MapsAccount.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myMapsAccount");
            var collection = GetArmClient().GetMapsAccount(mapsAccountId).GetCreators();
            await collection.GetAsync(creatorName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: List Creator Resources By Account

            var mapsAccountId = AzureMapsManagementClient.MapsAccount.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myMapsAccount");
            var collection = GetArmClient().GetMapsAccount(mapsAccountId).GetCreators();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

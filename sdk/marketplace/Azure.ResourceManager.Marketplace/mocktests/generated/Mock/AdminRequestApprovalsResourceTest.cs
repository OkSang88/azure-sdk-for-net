// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Marketplace;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Marketplace.Tests.Mock
{
    /// <summary> Test for AdminRequestApprovalsResource. </summary>
    public partial class AdminRequestApprovalsResourceMockTests : MockTestBase
    {
        public AdminRequestApprovalsResourceMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: GetAdminRequestApproval
            var adminRequestApprovalsResourceId = Marketplace.AdminRequestApprovalsResource.CreateResourceIdentifier("a0e28e55-90c4-41d8-8e34-bb7ef7775406", "marketplacetestthirdparty.md-test-third-party-2");
            var adminRequestApprovalsResource = GetArmClient().GetAdminRequestApprovalsResource(adminRequestApprovalsResourceId);
            string publisherId = "marketplacetestthirdparty";

            await adminRequestApprovalsResource.GetAsync(publisherId);
        }
    }
}

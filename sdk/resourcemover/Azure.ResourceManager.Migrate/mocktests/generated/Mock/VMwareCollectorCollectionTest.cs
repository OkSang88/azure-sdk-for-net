// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Migrate.Tests.Mock;
using Azure.ResourceManager.Migrate.Tests.Mock.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Migrate.Tests.Mock.Tests.Mock
{
    /// <summary> Test for VMwareCollector. </summary>
    public partial class VMwareCollectorCollectionMockTests : MockTestBase
    {
        public VMwareCollectorCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: VMwareCollectors_Create
            string vmWareCollectorName = "PortalvCenterbc2fcollector";
            Migrate.Tests.Mock.VMwareCollectorData collectorBody = new Migrate.Tests.Mock.VMwareCollectorData()
            {
                ETag = "\"01003d32-0000-0d00-0000-5d74d2e50000\"",
                Properties = new Migrate.Tests.Mock.Models.CollectorProperties()
                {
                    DiscoverySiteId = "/subscriptions/6393a73f-8d55-47ef-b6dd-179b3e0c7910/resourceGroups/abgoyal-westEurope/providers/Microsoft.OffAzure/VMwareSites/PortalvCenterbc2fsite",
                    AgentProperties = new Migrate.Tests.Mock.Models.CollectorAgentProperties()
                    {
                        SpnDetails = new Migrate.Tests.Mock.Models.CollectorBodyAgentSpnProperties()
                        {
                            Authority = "https://login.windows.net/72f988bf-86f1-41af-91ab-2d7cd011db47",
                            ApplicationId = "fc717575-8173-4b21-92a5-658b655e613e",
                            Audience = "https://72f988bf-86f1-41af-91ab-2d7cd011db47/PortalvCenterbc2fagentauthaadapp",
                            ObjectId = "29d94f38-db94-4980-aec0-0cfd55ab1cd0",
                            TenantId = "72f988bf-86f1-41af-91ab-2d7cd011db47",
                        },
                    },
                },
            };

            var projectId = Migrate.Tests.Mock.Project.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "abgoyal-westEurope", "abgoyalWEselfhostb72bproject");
            var collection = GetArmClient().GetProject(projectId).GetVMwareCollectors();
            await collection.CreateOrUpdateAsync(true, vmWareCollectorName, collectorBody);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: VMwareCollectors_Get
            string vmWareCollectorName = "PortalvCenterbc2fcollector";

            var projectId = Migrate.Tests.Mock.Project.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "abgoyal-westEurope", "abgoyalWEselfhostb72bproject");
            var collection = GetArmClient().GetProject(projectId).GetVMwareCollectors();
            await collection.GetAsync(vmWareCollectorName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: VMwareCollectors_ListByProject

            var projectId = Migrate.Tests.Mock.Project.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "abgoyal-westEurope", "abgoyalWEselfhostb72bproject");
            var collection = GetArmClient().GetProject(projectId).GetVMwareCollectors();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using StorSimple8000SeriesManagementClient.Models;

namespace StorSimple8000SeriesManagementClient
{
    /// <summary> A class representing the Updates data model. </summary>
    public partial class UpdatesData : BaseModel
    {
        /// <summary> Initializes a new instance of UpdatesData. </summary>
        public UpdatesData()
        {
        }

        /// <summary> Initializes a new instance of UpdatesData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="type"> The type. </param>
        /// <param name="kind"> The Kind of the object. Currently only Series8000 is supported. </param>
        /// <param name="regularUpdatesAvailable"> Set to &apos;true&apos; if regular updates are available for the device. </param>
        /// <param name="maintenanceModeUpdatesAvailable"> Set to &apos;true&apos; if maintenance mode update available. </param>
        /// <param name="isUpdateInProgress"> Indicates whether an update is in progress or not. </param>
        /// <param name="lastUpdatedTime"> The time when the last update was completed. </param>
        internal UpdatesData(ResourceIdentifier id, string name, ResourceType type, string kind, bool? regularUpdatesAvailable, bool? maintenanceModeUpdatesAvailable, bool? isUpdateInProgress, DateTimeOffset? lastUpdatedTime) : base(id, name, type, kind)
        {
            RegularUpdatesAvailable = regularUpdatesAvailable;
            MaintenanceModeUpdatesAvailable = maintenanceModeUpdatesAvailable;
            IsUpdateInProgress = isUpdateInProgress;
            LastUpdatedTime = lastUpdatedTime;
        }

        /// <summary> Set to &apos;true&apos; if regular updates are available for the device. </summary>
        public bool? RegularUpdatesAvailable { get; set; }
        /// <summary> Set to &apos;true&apos; if maintenance mode update available. </summary>
        public bool? MaintenanceModeUpdatesAvailable { get; set; }
        /// <summary> Indicates whether an update is in progress or not. </summary>
        public bool? IsUpdateInProgress { get; set; }
        /// <summary> The time when the last update was completed. </summary>
        public DateTimeOffset? LastUpdatedTime { get; set; }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;
using AzureAgriFoodRPService.Models;

namespace AzureAgriFoodRPService
{
    /// <summary> A class representing the FarmBeats data model. </summary>
    public partial class FarmBeatsData : TrackedResource
    {
        /// <summary> Initializes a new instance of FarmBeatsData. </summary>
        /// <param name="location"> The location. </param>
        public FarmBeatsData(AzureLocation location) : base(location)
        {
        }

        /// <summary> Initializes a new instance of FarmBeatsData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="type"> The type. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="systemData"> Metadata pertaining to creation and last modification of the resource. </param>
        /// <param name="instanceUri"> Uri of the FarmBeats instance. </param>
        /// <param name="provisioningState"> FarmBeats instance provisioning state. </param>
        internal FarmBeatsData(ResourceIdentifier id, string name, ResourceType type, IDictionary<string, string> tags, AzureLocation location, SystemData systemData, string instanceUri, ProvisioningState? provisioningState) : base(id, name, type, tags, location)
        {
            SystemData = systemData;
            InstanceUri = instanceUri;
            ProvisioningState = provisioningState;
        }

        /// <summary> Metadata pertaining to creation and last modification of the resource. </summary>
        public SystemData SystemData { get; }
        /// <summary> Uri of the FarmBeats instance. </summary>
        public string InstanceUri { get; }
        /// <summary> FarmBeats instance provisioning state. </summary>
        public ProvisioningState? ProvisioningState { get; }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Core.TestFramework;
using Azure.ResourceManager.StoragePool.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.StoragePool.Tests.Mock
{
    /// <summary> Test for DiskPool. </summary>
    public partial class DiskPoolCollectionMockTests : MockTestBase
    {
        public DiskPoolCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: Create or Update Disk pool
            string diskPoolName = "myDiskPool";
            StoragePool.Models.DiskPoolCreate diskPoolCreatePayload = new StoragePool.Models.DiskPoolCreate(sku: new StoragePool.Models.Sku(name: "Basic_V1")
            {
                Tier = "Basic",
            }, location: "westus", subnetId: "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myvnet/subnets/mysubnet");

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup")).GetDiskPools();
            await collection.CreateOrUpdateAsync(diskPoolName, diskPoolCreatePayload);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get Disk pool
            string diskPoolName = "myDiskPool";

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup")).GetDiskPools();
            await collection.GetAsync(diskPoolName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: List Disk Pools

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup")).GetDiskPools();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

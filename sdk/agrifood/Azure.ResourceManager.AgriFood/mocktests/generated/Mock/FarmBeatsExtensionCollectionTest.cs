// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.AgriFood.Tests.Mock
{
    /// <summary> Test for FarmBeatsExtension. </summary>
    public partial class FarmBeatsExtensionCollectionMockTests : MockTestBase
    {
        public FarmBeatsExtensionCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: FarmBeatsExtensions_Get
            string farmBeatsExtensionId = "DTN.ContentServices";

            var collection = GetArmClient().GetTenants().GetAll().GetEnumerator().Current.GetFarmBeatsExtensions();
            await collection.GetAsync(farmBeatsExtensionId);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: FarmBeatsExtensions_List
            IEnumerable<string> farmBeatsExtensionIds = null;
            IEnumerable<string> farmBeatsExtensionNames = null;
            IEnumerable<string> extensionCategories = null;
            IEnumerable<string> publisherIds = null;
            int? maxPageSize = null;

            var collection = GetArmClient().GetTenants().GetAll().GetEnumerator().Current.GetFarmBeatsExtensions();
            await foreach (var _ in collection.GetAllAsync(farmBeatsExtensionIds, farmBeatsExtensionNames, extensionCategories, publisherIds, maxPageSize))
            {
            }
        }
    }
}

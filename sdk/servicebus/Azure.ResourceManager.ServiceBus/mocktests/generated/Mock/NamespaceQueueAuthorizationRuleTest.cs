// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.ServiceBus;
using Azure.ResourceManager.ServiceBus.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.ServiceBus.Tests.Mock
{
    /// <summary> Test for ServiceBusAuthorizationRule. </summary>
    public partial class NamespaceQueueAuthorizationRuleMockTests : MockTestBase
    {
        public NamespaceQueueAuthorizationRuleMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: QueueAuthorizationRuleGet
            var namespaceQueueAuthorizationRuleId = ServiceBus.NamespaceQueueAuthorizationRule.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ArunMonocle", "sdk-Namespace-7982", "sdk-Queues-2317", "sdk-AuthRules-5800");
            var namespaceQueueAuthorizationRule = GetArmClient().GetNamespaceQueueAuthorizationRule(namespaceQueueAuthorizationRuleId);

            await namespaceQueueAuthorizationRule.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: QueueAuthorizationRuleDelete
            var namespaceQueueAuthorizationRuleId = ServiceBus.NamespaceQueueAuthorizationRule.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ArunMonocle", "sdk-namespace-7982", "sdk-Queues-2317", "sdk-AuthRules-5800");
            var namespaceQueueAuthorizationRule = GetArmClient().GetNamespaceQueueAuthorizationRule(namespaceQueueAuthorizationRuleId);

            await namespaceQueueAuthorizationRule.DeleteAsync();
        }

        [RecordedTest]
        public async Task GetKeys()
        {
            // Example: QueueAuthorizationRuleListKey
            var namespaceQueueAuthorizationRuleId = ServiceBus.NamespaceQueueAuthorizationRule.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ArunMonocle", "sdk-namespace-7982", "sdk-Queues-2317", "sdk-AuthRules-5800");
            var namespaceQueueAuthorizationRule = GetArmClient().GetNamespaceQueueAuthorizationRule(namespaceQueueAuthorizationRuleId);

            await namespaceQueueAuthorizationRule.GetKeysAsync();
        }

        [RecordedTest]
        public async Task RegenerateKeys()
        {
            // Example: QueueAuthorizationRuleRegenerateKey
            var namespaceQueueAuthorizationRuleId = ServiceBus.NamespaceQueueAuthorizationRule.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ArunMonocle", "sdk-namespace-7982", "sdk-Queues-2317", "sdk-AuthRules-5800");
            var namespaceQueueAuthorizationRule = GetArmClient().GetNamespaceQueueAuthorizationRule(namespaceQueueAuthorizationRuleId);
            ServiceBus.Models.RegenerateAccessKeyOptions parameters = new ServiceBus.Models.RegenerateAccessKeyOptions(keyType: ServiceBus.Models.KeyType.PrimaryKey);

            await namespaceQueueAuthorizationRule.RegenerateKeysAsync(parameters);
        }
    }
}

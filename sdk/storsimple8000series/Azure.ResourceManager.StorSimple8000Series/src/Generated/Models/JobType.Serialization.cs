// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.StorSimple8000Series.Models
{
    internal static partial class JobTypeExtensions
    {
        public static string ToSerialString(this JobType value) => value switch
        {
            JobType.ScheduledBackup => "ScheduledBackup",
            JobType.ManualBackup => "ManualBackup",
            JobType.RestoreBackup => "RestoreBackup",
            JobType.CloneVolume => "CloneVolume",
            JobType.FailoverVolumeContainers => "FailoverVolumeContainers",
            JobType.CreateLocallyPinnedVolume => "CreateLocallyPinnedVolume",
            JobType.ModifyVolume => "ModifyVolume",
            JobType.InstallUpdates => "InstallUpdates",
            JobType.SupportPackageLogs => "SupportPackageLogs",
            JobType.CreateCloudAppliance => "CreateCloudAppliance",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown JobType value.")
        };

        public static JobType ToJobType(this string value)
        {
            if (string.Equals(value, "ScheduledBackup", StringComparison.InvariantCultureIgnoreCase)) return JobType.ScheduledBackup;
            if (string.Equals(value, "ManualBackup", StringComparison.InvariantCultureIgnoreCase)) return JobType.ManualBackup;
            if (string.Equals(value, "RestoreBackup", StringComparison.InvariantCultureIgnoreCase)) return JobType.RestoreBackup;
            if (string.Equals(value, "CloneVolume", StringComparison.InvariantCultureIgnoreCase)) return JobType.CloneVolume;
            if (string.Equals(value, "FailoverVolumeContainers", StringComparison.InvariantCultureIgnoreCase)) return JobType.FailoverVolumeContainers;
            if (string.Equals(value, "CreateLocallyPinnedVolume", StringComparison.InvariantCultureIgnoreCase)) return JobType.CreateLocallyPinnedVolume;
            if (string.Equals(value, "ModifyVolume", StringComparison.InvariantCultureIgnoreCase)) return JobType.ModifyVolume;
            if (string.Equals(value, "InstallUpdates", StringComparison.InvariantCultureIgnoreCase)) return JobType.InstallUpdates;
            if (string.Equals(value, "SupportPackageLogs", StringComparison.InvariantCultureIgnoreCase)) return JobType.SupportPackageLogs;
            if (string.Equals(value, "CreateCloudAppliance", StringComparison.InvariantCultureIgnoreCase)) return JobType.CreateCloudAppliance;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown JobType value.");
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Marketplace;
using Azure.ResourceManager.Marketplace.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Marketplace.Tests.Mock
{
    /// <summary> Test for Collection. </summary>
    public partial class CollectionMockTests : MockTestBase
    {
        public CollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: GetPrivateStoreCollection
            var collectionId = Marketplace.Collection.CreateResourceIdentifier("a0e28e55-90c4-41d8-8e34-bb7ef7775406", "56a1a02d-8cf8-45df-bf37-d5f7120fcb3d");
            var collection = GetArmClient().GetCollection(collectionId);

            await collection.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: DeletePrivateStoreCollection
            var collectionId = Marketplace.Collection.CreateResourceIdentifier("a0e28e55-90c4-41d8-8e34-bb7ef7775406", "d0f5aa2c-ecc3-4d87-906a-f8c486dcc4f1");
            var collection = GetArmClient().GetCollection(collectionId);

            await collection.DeleteAsync(true);
        }

        [RecordedTest]
        public async Task TransferOffers()
        {
            // Example: TransferOffers
            var collectionId = Marketplace.Collection.CreateResourceIdentifier("a0e28e55-90c4-41d8-8e34-bb7ef7775406", "56a1a02d-8cf8-45df-bf37-d5f7120fcb3d");
            var collection = GetArmClient().GetCollection(collectionId);
            Marketplace.Models.TransferOffersProperties payload = new Marketplace.Models.TransferOffersProperties()
            {
                Operation = "copy",
            };

            await collection.TransferOffersAsync(payload);
        }

        [RecordedTest]
        public async Task Post()
        {
            // Example: PostPrivateStoreCollection
            var collectionId = Marketplace.Collection.CreateResourceIdentifier("a0e28e55-90c4-41d8-8e34-bb7ef7775406", "56a1a02d-8cf8-45df-bf37-d5f7120fcb3d");
            var collection = GetArmClient().GetCollection(collectionId);
            Marketplace.Models.Operation? payload = null;

            await collection.PostAsync(payload);
        }
    }
}

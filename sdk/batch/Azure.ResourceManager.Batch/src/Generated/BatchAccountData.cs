// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Batch.Models;
using Azure.ResourceManager.Resources.Models;

namespace Azure.ResourceManager.Batch
{
    /// <summary> A class representing the BatchAccount data model. </summary>
    public partial class BatchAccountData : Resource
    {
        /// <summary> Initializes a new instance of BatchAccountData. </summary>
        internal BatchAccountData()
        {
            PrivateEndpointConnections = new ChangeTrackingList<PrivateEndpointConnectionData>();
            DedicatedCoreQuotaPerVMFamily = new ChangeTrackingList<VirtualMachineFamilyCoreQuota>();
            AllowedAuthenticationModes = new ChangeTrackingList<AuthenticationMode>();
        }

        /// <summary> Initializes a new instance of BatchAccountData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="type"> The type. </param>
        /// <param name="location"> The location of the resource. </param>
        /// <param name="tags"> The tags of the resource. </param>
        /// <param name="identity"> The identity of the Batch account. </param>
        /// <param name="accountEndpoint"> The account endpoint used to interact with the Batch service. </param>
        /// <param name="provisioningState"> The provisioned state of the resource. </param>
        /// <param name="poolAllocationMode"> The allocation mode for creating pools in the Batch account. </param>
        /// <param name="keyVaultReference"> Identifies the Azure key vault associated with a Batch account. </param>
        /// <param name="publicNetworkAccess"> If not specified, the default value is &apos;enabled&apos;. </param>
        /// <param name="privateEndpointConnections"> List of private endpoint connections associated with the Batch account. </param>
        /// <param name="autoStorage"> Contains information about the auto-storage account associated with a Batch account. </param>
        /// <param name="encryption"> Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft managed key. For additional control, a customer-managed key can be used instead. </param>
        /// <param name="dedicatedCoreQuota"> For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription so this value is not returned. </param>
        /// <param name="lowPriorityCoreQuota"> For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription so this value is not returned. </param>
        /// <param name="dedicatedCoreQuotaPerVMFamily"> A list of the dedicated core quota per Virtual Machine family for the Batch account. For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription so this value is not returned. </param>
        /// <param name="dedicatedCoreQuotaPerVMFamilyEnforced"> Batch is transitioning its core quota system for dedicated cores to be enforced per Virtual Machine family. During this transitional phase, the dedicated core quota per Virtual Machine family may not yet be enforced. If this flag is false, dedicated core quota is enforced via the old dedicatedCoreQuota property on the account and does not consider Virtual Machine family. If this flag is true, dedicated core quota is enforced via the dedicatedCoreQuotaPerVMFamily property on the account, and the old dedicatedCoreQuota does not apply. </param>
        /// <param name="poolQuota"> The pool quota for the Batch account. </param>
        /// <param name="activeJobAndJobScheduleQuota"> The active job and job schedule quota for the Batch account. </param>
        /// <param name="allowedAuthenticationModes"> List of allowed authentication modes for the Batch account that can be used to authenticate with the data plane. This does not affect authentication with the control plane. </param>
        internal BatchAccountData(ResourceIdentifier id, string name, ResourceType type, string location, IReadOnlyDictionary<string, string> tags, ResourceIdentity identity, string accountEndpoint, ProvisioningState? provisioningState, PoolAllocationMode? poolAllocationMode, KeyVaultReference keyVaultReference, PublicNetworkAccessType? publicNetworkAccess, IReadOnlyList<PrivateEndpointConnectionData> privateEndpointConnections, AutoStorageProperties autoStorage, EncryptionProperties encryption, int? dedicatedCoreQuota, int? lowPriorityCoreQuota, IReadOnlyList<VirtualMachineFamilyCoreQuota> dedicatedCoreQuotaPerVMFamily, bool? dedicatedCoreQuotaPerVMFamilyEnforced, int? poolQuota, int? activeJobAndJobScheduleQuota, IReadOnlyList<AuthenticationMode> allowedAuthenticationModes) : base(id, name, type, location, tags)
        {
            Identity = identity;
            AccountEndpoint = accountEndpoint;
            ProvisioningState = provisioningState;
            PoolAllocationMode = poolAllocationMode;
            KeyVaultReference = keyVaultReference;
            PublicNetworkAccess = publicNetworkAccess;
            PrivateEndpointConnections = privateEndpointConnections;
            AutoStorage = autoStorage;
            Encryption = encryption;
            DedicatedCoreQuota = dedicatedCoreQuota;
            LowPriorityCoreQuota = lowPriorityCoreQuota;
            DedicatedCoreQuotaPerVMFamily = dedicatedCoreQuotaPerVMFamily;
            DedicatedCoreQuotaPerVMFamilyEnforced = dedicatedCoreQuotaPerVMFamilyEnforced;
            PoolQuota = poolQuota;
            ActiveJobAndJobScheduleQuota = activeJobAndJobScheduleQuota;
            AllowedAuthenticationModes = allowedAuthenticationModes;
        }

        /// <summary> The identity of the Batch account. </summary>
        public ResourceIdentity Identity { get; }
        /// <summary> The account endpoint used to interact with the Batch service. </summary>
        public string AccountEndpoint { get; }
        /// <summary> The provisioned state of the resource. </summary>
        public ProvisioningState? ProvisioningState { get; }
        /// <summary> The allocation mode for creating pools in the Batch account. </summary>
        public PoolAllocationMode? PoolAllocationMode { get; }
        /// <summary> Identifies the Azure key vault associated with a Batch account. </summary>
        public KeyVaultReference KeyVaultReference { get; }
        /// <summary> If not specified, the default value is &apos;enabled&apos;. </summary>
        public PublicNetworkAccessType? PublicNetworkAccess { get; }
        /// <summary> List of private endpoint connections associated with the Batch account. </summary>
        public IReadOnlyList<PrivateEndpointConnectionData> PrivateEndpointConnections { get; }
        /// <summary> Contains information about the auto-storage account associated with a Batch account. </summary>
        public AutoStorageProperties AutoStorage { get; }
        /// <summary> Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft managed key. For additional control, a customer-managed key can be used instead. </summary>
        public EncryptionProperties Encryption { get; }
        /// <summary> For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription so this value is not returned. </summary>
        public int? DedicatedCoreQuota { get; }
        /// <summary> For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription so this value is not returned. </summary>
        public int? LowPriorityCoreQuota { get; }
        /// <summary> A list of the dedicated core quota per Virtual Machine family for the Batch account. For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription so this value is not returned. </summary>
        public IReadOnlyList<VirtualMachineFamilyCoreQuota> DedicatedCoreQuotaPerVMFamily { get; }
        /// <summary> Batch is transitioning its core quota system for dedicated cores to be enforced per Virtual Machine family. During this transitional phase, the dedicated core quota per Virtual Machine family may not yet be enforced. If this flag is false, dedicated core quota is enforced via the old dedicatedCoreQuota property on the account and does not consider Virtual Machine family. If this flag is true, dedicated core quota is enforced via the dedicatedCoreQuotaPerVMFamily property on the account, and the old dedicatedCoreQuota does not apply. </summary>
        public bool? DedicatedCoreQuotaPerVMFamilyEnforced { get; }
        /// <summary> The pool quota for the Batch account. </summary>
        public int? PoolQuota { get; }
        /// <summary> The active job and job schedule quota for the Batch account. </summary>
        public int? ActiveJobAndJobScheduleQuota { get; }
        /// <summary> List of allowed authentication modes for the Batch account that can be used to authenticate with the data plane. This does not affect authentication with the control plane. </summary>
        public IReadOnlyList<AuthenticationMode> AllowedAuthenticationModes { get; }
    }
}

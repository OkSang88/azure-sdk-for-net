// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Core.TestFramework;
using Azure.ResourceManager.AppService;
using Azure.ResourceManager.AppService.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.AppService.Tests.Mock
{
    /// <summary> Test for StaticSiteARMResource. </summary>
    public partial class StaticSiteARMResourceCollectionMockTests : MockTestBase
    {
        public StaticSiteARMResourceCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: Create or update a static site
            string name = "testStaticSite0";
            AppService.StaticSiteARMResourceData staticSiteEnvelope = new AppService.StaticSiteARMResourceData(location: "West US 2")
            {
                Sku = new AppService.Models.SkuDescription()
                {
                    Name = "Basic",
                    Tier = "Basic",
                },
                RepositoryUrl = "https://github.com/username/RepoName",
                Branch = "master",
                RepositoryToken = "repoToken123",
                BuildProperties = new AppService.Models.StaticSiteBuildProperties()
                {
                    AppLocation = "app",
                    ApiLocation = "api",
                    AppArtifactLocation = "build",
                },
            };

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg")).GetStaticSiteARMResources();
            await collection.CreateOrUpdateAsync(name, staticSiteEnvelope);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get details for a static site
            string name = "testStaticSite0";

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg")).GetStaticSiteARMResources();
            await collection.GetAsync(name);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: Get static sites for a resource group

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg")).GetStaticSiteARMResources();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

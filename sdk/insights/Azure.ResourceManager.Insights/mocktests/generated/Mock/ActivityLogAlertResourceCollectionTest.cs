// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Insights;
using Azure.ResourceManager.Insights.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Insights.Tests.Mock
{
    /// <summary> Test for ActivityLogAlertResource. </summary>
    public partial class ActivityLogAlertResourceCollectionMockTests : MockTestBase
    {
        public ActivityLogAlertResourceCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: Create or update an activity log alert
            string activityLogAlertName = "SampleActivityLogAlert";
            Insights.ActivityLogAlertResourceData activityLogAlert = new Insights.ActivityLogAlertResourceData(location: "Global")
            {
                Enabled = true,
                Condition = new Insights.Models.ActivityLogAlertAllOfCondition(allOf: new List<Insights.Models.ActivityLogAlertLeafCondition>()
{
new Insights.Models.ActivityLogAlertLeafCondition(field: "Category",equalsValue: "Administrative"),new Insights.Models.ActivityLogAlertLeafCondition(field: "Level",equalsValue: "Error"),}),
                Actions = new Insights.Models.ActivityLogAlertActionList(),
                Description = "Sample activity log alert description",
            };
            activityLogAlert.Tags.ReplaceWith(new Dictionary<string, string>()
            {
            });

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/Default-ActivityLogAlerts")).GetActivityLogAlertResources();
            await collection.CreateOrUpdateAsync(true, activityLogAlertName, activityLogAlert);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get an activity log alert
            string activityLogAlertName = "SampleActivityLogAlert";

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/Default-ActivityLogAlerts")).GetActivityLogAlertResources();
            await collection.GetAsync(activityLogAlertName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: List activity log alerts

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/Default-ActivityLogAlerts")).GetActivityLogAlertResources();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

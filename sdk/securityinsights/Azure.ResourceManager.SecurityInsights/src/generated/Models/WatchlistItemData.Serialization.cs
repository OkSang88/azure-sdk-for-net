// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;
using Azure.ResourceManager.Models;
using SecurityInsights.Models;

namespace SecurityInsights
{
    public partial class WatchlistItemData : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Etag))
            {
                writer.WritePropertyName("etag");
                writer.WriteStringValue(Etag);
            }
            writer.WritePropertyName("properties");
            writer.WriteStartObject();
            if (Optional.IsDefined(WatchlistItemType))
            {
                writer.WritePropertyName("watchlistItemType");
                writer.WriteStringValue(WatchlistItemType);
            }
            if (Optional.IsDefined(WatchlistItemId))
            {
                writer.WritePropertyName("watchlistItemId");
                writer.WriteStringValue(WatchlistItemId);
            }
            if (Optional.IsDefined(TenantId))
            {
                writer.WritePropertyName("tenantId");
                writer.WriteStringValue(TenantId);
            }
            if (Optional.IsDefined(IsDeleted))
            {
                writer.WritePropertyName("isDeleted");
                writer.WriteBooleanValue(IsDeleted.Value);
            }
            if (Optional.IsDefined(Created))
            {
                writer.WritePropertyName("created");
                writer.WriteStringValue(Created.Value, "O");
            }
            if (Optional.IsDefined(Updated))
            {
                writer.WritePropertyName("updated");
                writer.WriteStringValue(Updated.Value, "O");
            }
            if (Optional.IsDefined(CreatedBy))
            {
                writer.WritePropertyName("createdBy");
                writer.WriteObjectValue(CreatedBy);
            }
            if (Optional.IsDefined(UpdatedBy))
            {
                writer.WritePropertyName("updatedBy");
                writer.WriteObjectValue(UpdatedBy);
            }
            if (Optional.IsDefined(ItemsKeyValue))
            {
                writer.WritePropertyName("itemsKeyValue");
                writer.WriteObjectValue(ItemsKeyValue);
            }
            if (Optional.IsDefined(EntityMapping))
            {
                writer.WritePropertyName("entityMapping");
                writer.WriteObjectValue(EntityMapping);
            }
            writer.WriteEndObject();
            writer.WriteEndObject();
        }

        internal static WatchlistItemData DeserializeWatchlistItemData(JsonElement element)
        {
            Optional<string> etag = default;
            Optional<SystemData> systemData = default;
            ResourceIdentifier id = default;
            string name = default;
            ResourceType type = default;
            Optional<string> watchlistItemType = default;
            Optional<string> watchlistItemId = default;
            Optional<string> tenantId = default;
            Optional<bool> isDeleted = default;
            Optional<DateTimeOffset> created = default;
            Optional<DateTimeOffset> updated = default;
            Optional<UserInfo> createdBy = default;
            Optional<UserInfo> updatedBy = default;
            Optional<object> itemsKeyValue = default;
            Optional<object> entityMapping = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("etag"))
                {
                    etag = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("systemData"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    systemData = JsonSerializer.Deserialize<SystemData>(property.Value.ToString());
                    continue;
                }
                if (property.NameEquals("id"))
                {
                    id = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("properties"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("watchlistItemType"))
                        {
                            watchlistItemType = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("watchlistItemId"))
                        {
                            watchlistItemId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("tenantId"))
                        {
                            tenantId = property0.Value.GetString();
                            continue;
                        }
                        if (property0.NameEquals("isDeleted"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            isDeleted = property0.Value.GetBoolean();
                            continue;
                        }
                        if (property0.NameEquals("created"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            created = property0.Value.GetDateTimeOffset("O");
                            continue;
                        }
                        if (property0.NameEquals("updated"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            updated = property0.Value.GetDateTimeOffset("O");
                            continue;
                        }
                        if (property0.NameEquals("createdBy"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            createdBy = UserInfo.DeserializeUserInfo(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("updatedBy"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            updatedBy = UserInfo.DeserializeUserInfo(property0.Value);
                            continue;
                        }
                        if (property0.NameEquals("itemsKeyValue"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            itemsKeyValue = property0.Value.GetObject();
                            continue;
                        }
                        if (property0.NameEquals("entityMapping"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            entityMapping = property0.Value.GetObject();
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new WatchlistItemData(id, name, type, systemData, etag.Value, watchlistItemType.Value, watchlistItemId.Value, tenantId.Value, Optional.ToNullable(isDeleted), Optional.ToNullable(created), Optional.ToNullable(updated), createdBy.Value, updatedBy.Value, itemsKeyValue.Value, entityMapping.Value);
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.ResourceManager.Authorization.Models
{
    /// <summary> Settings of an Access Review. </summary>
    public partial class AccessReviewDefaultSettingsCreateOrUpdateContent
    {
        /// <summary> Initializes a new instance of AccessReviewDefaultSettingsCreateOrUpdateContent. </summary>
        public AccessReviewDefaultSettingsCreateOrUpdateContent()
        {
        }

        /// <summary> Flag to indicate whether sending mails to reviewers and the review creator is enabled. </summary>
        public bool? MailNotificationsEnabled { get; set; }
        /// <summary> Flag to indicate whether sending reminder emails to reviewers are enabled. </summary>
        public bool? ReminderNotificationsEnabled { get; set; }
        /// <summary> Flag to indicate whether reviewers are required to provide a justification when reviewing access. </summary>
        public bool? DefaultDecisionEnabled { get; set; }
        /// <summary> Flag to indicate whether the reviewer is required to pass justification when recording a decision. </summary>
        public bool? JustificationRequiredOnApproval { get; set; }
        /// <summary> This specifies the behavior for the autoReview feature when an access review completes. </summary>
        public DefaultDecisionType? DefaultDecision { get; set; }
        /// <summary> Flag to indicate whether auto-apply capability, to automatically change the target object access resource, is enabled. If not enabled, a user must, after the review completes, apply the access review. </summary>
        public bool? AutoApplyDecisionsEnabled { get; set; }
        /// <summary> Flag to indicate whether showing recommendations to reviewers is enabled. </summary>
        public bool? RecommendationsEnabled { get; set; }
        /// <summary> Recommendations for access reviews are calculated by looking back at 30 days of data(w.r.t the start date of the review) by default. However, in some scenarios, customers want to change how far back to look at and want to configure 60 days, 90 days, etc. instead. This setting allows customers to configure this duration. The value should be in ISO  8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations).This code can be used to convert TimeSpan to a valid interval string: XmlConvert.ToString(new TimeSpan(hours, minutes, seconds)). </summary>
        public TimeSpan? RecommendationLookBackDuration { get; set; }
        /// <summary> The duration in days for an instance. </summary>
        public int? InstanceDurationInDays { get; set; }
        /// <summary> The recurrence range type. The possible values are: endDate, noEnd, numbered. </summary>
        public AccessReviewRecurrenceRangeType? TypeRecurrenceRangeType { get; set; }
        /// <summary> The number of times to repeat the access review. Required and must be positive if type is numbered. </summary>
        public int? NumberOfOccurrences { get; set; }
        /// <summary> The DateTime when the review is scheduled to be start. This could be a date in the future. Required on create. </summary>
        public DateTimeOffset? StartOn { get; set; }
        /// <summary> The DateTime when the review is scheduled to end. Required if type is endDate. </summary>
        public DateTimeOffset? EndOn { get; set; }
        /// <summary> The recurrence type : weekly, monthly, etc. </summary>
        public AccessReviewRecurrencePatternType? TypeRecurrencePatternType { get; set; }
        /// <summary> The interval for recurrence. For a quarterly review, the interval is 3 for type : absoluteMonthly. </summary>
        public int? Interval { get; set; }
    }
}

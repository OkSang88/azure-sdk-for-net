// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.StorSimple8000Series.Models
{
    public partial class AlertSource : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Name))
            {
                writer.WritePropertyName("name");
                writer.WriteStringValue(Name);
            }
            if (Optional.IsDefined(TimeZone))
            {
                writer.WritePropertyName("timeZone");
                writer.WriteStringValue(TimeZone);
            }
            if (Optional.IsDefined(AlertSourceType))
            {
                writer.WritePropertyName("alertSourceType");
                writer.WriteStringValue(AlertSourceType.Value.ToSerialString());
            }
            writer.WriteEndObject();
        }

        internal static AlertSource DeserializeAlertSource(JsonElement element)
        {
            Optional<string> name = default;
            Optional<string> timeZone = default;
            Optional<AlertSourceType> alertSourceType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("timeZone"))
                {
                    timeZone = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("alertSourceType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    alertSourceType = property.Value.GetString().ToAlertSourceType();
                    continue;
                }
            }
            return new AlertSource(name.Value, timeZone.Value, Optional.ToNullable(alertSourceType));
        }
    }
}

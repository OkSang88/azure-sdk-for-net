// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.Network;
using Azure.ResourceManager.Network.Models;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Network.Tests.Mock
{
    /// <summary> Test for WebApplicationFirewallPolicy. </summary>
    public partial class WebApplicationFirewallPolicyCollectionMockTests : MockTestBase
    {
        public WebApplicationFirewallPolicyCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync()
        {
            // Example: Creates or updates a WAF policy within a resource group
            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1")).GetWebApplicationFirewallPolicies();
            string policyName = "Policy1";
            Network.WebApplicationFirewallPolicyData parameters = new Network.WebApplicationFirewallPolicyData()
            {
                ManagedRules = new Network.Models.ManagedRulesDefinition(managedRuleSets: new List<Network.Models.ManagedRuleSet>()
{
new Network.Models.ManagedRuleSet(ruleSetType: "OWASP",ruleSetVersion: "3.2"),}),
                Location = "WestUs",
            };

            await collection.CreateOrUpdateAsync(policyName, parameters);
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Gets a WAF policy within a resource group
            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1")).GetWebApplicationFirewallPolicies();
            string policyName = "Policy1";

            await collection.GetAsync(policyName);
        }

        [RecordedTest]
        public void GetAllAsync()
        {
            // Example: Lists all WAF policies in a resource group
            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1")).GetWebApplicationFirewallPolicies();

            collection.GetAllAsync();
        }
    }
}

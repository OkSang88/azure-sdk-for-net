// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;
using Azure.ResourceManager.StorSimple8000Series.Models;

namespace Azure.ResourceManager.StorSimple8000Series
{
    /// <summary> A class representing the VolumeContainer data model. </summary>
    public partial class VolumeContainerData : BaseModel
    {
        /// <summary> Initializes a new instance of VolumeContainerData. </summary>
        /// <param name="storageAccountCredentialId"> The path ID of storage account associated with the volume container. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="storageAccountCredentialId"/> is null. </exception>
        public VolumeContainerData(string storageAccountCredentialId)
        {
            if (storageAccountCredentialId == null)
            {
                throw new ArgumentNullException(nameof(storageAccountCredentialId));
            }

            StorageAccountCredentialId = storageAccountCredentialId;
        }

        /// <summary> Initializes a new instance of VolumeContainerData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="type"> The type. </param>
        /// <param name="kind"> The Kind of the object. Currently only Series8000 is supported. </param>
        /// <param name="encryptionKey"> The key used to encrypt data in the volume container. It is required when property &apos;EncryptionStatus&apos; is &quot;Enabled&quot;. </param>
        /// <param name="encryptionStatus"> The flag to denote whether encryption is enabled or not. </param>
        /// <param name="volumeCount"> The number of volumes in the volume Container. </param>
        /// <param name="storageAccountCredentialId"> The path ID of storage account associated with the volume container. </param>
        /// <param name="ownerShipStatus"> The owner ship status of the volume container. Only when the status is &quot;NotOwned&quot;, the delete operation on the volume container is permitted. </param>
        /// <param name="bandWidthRateInMbps"> The bandwidth-rate set on the volume container. </param>
        /// <param name="bandwidthSettingId"> The ID of the bandwidth setting associated with the volume container. </param>
        /// <param name="totalCloudStorageUsageInBytes"> The total cloud storage for the volume container. </param>
        internal VolumeContainerData(ResourceIdentifier id, string name, ResourceType type, string kind, AsymmetricEncryptedSecret encryptionKey, EncryptionStatus? encryptionStatus, int? volumeCount, string storageAccountCredentialId, OwnerShipStatus? ownerShipStatus, int? bandWidthRateInMbps, string bandwidthSettingId, long? totalCloudStorageUsageInBytes) : base(id, name, type, kind)
        {
            EncryptionKey = encryptionKey;
            EncryptionStatus = encryptionStatus;
            VolumeCount = volumeCount;
            StorageAccountCredentialId = storageAccountCredentialId;
            OwnerShipStatus = ownerShipStatus;
            BandWidthRateInMbps = bandWidthRateInMbps;
            BandwidthSettingId = bandwidthSettingId;
            TotalCloudStorageUsageInBytes = totalCloudStorageUsageInBytes;
        }

        /// <summary> The key used to encrypt data in the volume container. It is required when property &apos;EncryptionStatus&apos; is &quot;Enabled&quot;. </summary>
        public AsymmetricEncryptedSecret EncryptionKey { get; set; }
        /// <summary> The flag to denote whether encryption is enabled or not. </summary>
        public EncryptionStatus? EncryptionStatus { get; }
        /// <summary> The number of volumes in the volume Container. </summary>
        public int? VolumeCount { get; }
        /// <summary> The path ID of storage account associated with the volume container. </summary>
        public string StorageAccountCredentialId { get; set; }
        /// <summary> The owner ship status of the volume container. Only when the status is &quot;NotOwned&quot;, the delete operation on the volume container is permitted. </summary>
        public OwnerShipStatus? OwnerShipStatus { get; }
        /// <summary> The bandwidth-rate set on the volume container. </summary>
        public int? BandWidthRateInMbps { get; set; }
        /// <summary> The ID of the bandwidth setting associated with the volume container. </summary>
        public string BandwidthSettingId { get; set; }
        /// <summary> The total cloud storage for the volume container. </summary>
        public long? TotalCloudStorageUsageInBytes { get; }
    }
}

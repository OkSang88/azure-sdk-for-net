// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Compute;
using Azure.ResourceManager.Compute.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Compute.Tests.Mock
{
    /// <summary> Test for RoleInstance. </summary>
    public partial class RoleInstanceMockTests : MockTestBase
    {
        public RoleInstanceMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get Cloud Service Role Instance
            var roleInstanceId = Compute.RoleInstance.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ConstosoRG", "{cs-name}", "{roleInstance-name}");
            var roleInstance = GetArmClient().GetRoleInstance(roleInstanceId);
            Compute.Models.InstanceViewTypes? expand = null;

            await roleInstance.GetAsync(expand);
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: Delete Cloud Service Role Instance
            var roleInstanceId = Compute.RoleInstance.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ConstosoRG", "{cs-name}", "{roleInstance-name}");
            var roleInstance = GetArmClient().GetRoleInstance(roleInstanceId);

            await roleInstance.DeleteAsync(true);
        }

        [RecordedTest]
        public async Task GetInstanceView()
        {
            // Example: Get Instance View of Cloud Service Role Instance
            var roleInstanceId = Compute.RoleInstance.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ConstosoRG", "{cs-name}", "{roleInstance-name}");
            var roleInstance = GetArmClient().GetRoleInstance(roleInstanceId);

            await roleInstance.GetInstanceViewAsync();
        }

        [RecordedTest]
        public async Task Restart()
        {
            // Example: Restart Cloud Service Role Instance
            var roleInstanceId = Compute.RoleInstance.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ConstosoRG", "{cs-name}", "{roleInstance-name}");
            var roleInstance = GetArmClient().GetRoleInstance(roleInstanceId);

            await roleInstance.RestartAsync(true);
        }

        [RecordedTest]
        public async Task Reimage()
        {
            // Example: Reimage Cloud Service Role Instance
            var roleInstanceId = Compute.RoleInstance.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ConstosoRG", "{cs-name}", "{roleInstance-name}");
            var roleInstance = GetArmClient().GetRoleInstance(roleInstanceId);

            await roleInstance.ReimageAsync(true);
        }

        [RecordedTest]
        public async Task Rebuild()
        {
            // Example: Rebuild Cloud Service Role Instance
            var roleInstanceId = Compute.RoleInstance.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ConstosoRG", "{cs-name}", "{roleInstance-name}");
            var roleInstance = GetArmClient().GetRoleInstance(roleInstanceId);

            await roleInstance.RebuildAsync(true);
        }
    }
}

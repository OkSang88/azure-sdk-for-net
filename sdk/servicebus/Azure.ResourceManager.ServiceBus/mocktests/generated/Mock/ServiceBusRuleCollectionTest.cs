// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.ServiceBus;
using Azure.ResourceManager.ServiceBus.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.ServiceBus.Tests.Mock
{
    /// <summary> Test for ServiceBusRule. </summary>
    public partial class ServiceBusRuleCollectionMockTests : MockTestBase
    {
        public ServiceBusRuleCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: RulesCreateCorrelationFilter
            string ruleName = "sdk-Rules-6571";
            ServiceBus.ServiceBusRuleData parameters = new ServiceBus.ServiceBusRuleData()
            {
                FilterType = ServiceBus.Models.FilterType.CorrelationFilter,
                CorrelationFilter = new ServiceBus.Models.CorrelationFilter(),
            };

            var serviceBusSubscriptionId = ServiceBus.ServiceBusSubscription.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "resourceGroupName", "sdk-Namespace-1319", "sdk-Topics-2081", "sdk-Subscriptions-8691");
            var collection = GetArmClient().GetServiceBusSubscription(serviceBusSubscriptionId).GetServiceBusRules();
            await collection.CreateOrUpdateAsync(true, ruleName, parameters);
        }

        [RecordedTest]
        public async Task CreateOrUpdate2()
        {
            // Example: RulesCreateOrUpdate
            string ruleName = "sdk-Rules-6571";
            ServiceBus.ServiceBusRuleData parameters = new ServiceBus.ServiceBusRuleData();

            var serviceBusSubscriptionId = ServiceBus.ServiceBusSubscription.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "resourceGroupName", "sdk-Namespace-1319", "sdk-Topics-2081", "sdk-Subscriptions-8691");
            var collection = GetArmClient().GetServiceBusSubscription(serviceBusSubscriptionId).GetServiceBusRules();
            await collection.CreateOrUpdateAsync(true, ruleName, parameters);
        }

        [RecordedTest]
        public async Task CreateOrUpdate3()
        {
            // Example: RulesCreateSqlFilter
            string ruleName = "sdk-Rules-6571";
            ServiceBus.ServiceBusRuleData parameters = new ServiceBus.ServiceBusRuleData()
            {
                FilterType = ServiceBus.Models.FilterType.SqlFilter,
                SqlFilter = new ServiceBus.Models.SqlFilter()
                {
                    SqlExpression = "myproperty=test",
                },
            };

            var serviceBusSubscriptionId = ServiceBus.ServiceBusSubscription.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "resourceGroupName", "sdk-Namespace-1319", "sdk-Topics-2081", "sdk-Subscriptions-8691");
            var collection = GetArmClient().GetServiceBusSubscription(serviceBusSubscriptionId).GetServiceBusRules();
            await collection.CreateOrUpdateAsync(true, ruleName, parameters);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: RulesGet
            string ruleName = "sdk-Rules-6571";

            var serviceBusSubscriptionId = ServiceBus.ServiceBusSubscription.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ArunMonocle", "sdk-Namespace-1319", "sdk-Topics-2081", "sdk-Subscriptions-8691");
            var collection = GetArmClient().GetServiceBusSubscription(serviceBusSubscriptionId).GetServiceBusRules();
            await collection.GetAsync(ruleName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: RulesListBySubscriptions
            int? skip = null;
            int? top = null;

            var serviceBusSubscriptionId = ServiceBus.ServiceBusSubscription.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ArunMonocle", "sdk-Namespace-1319", "sdk-Topics-2081", "sdk-Subscriptions-8691");
            var collection = GetArmClient().GetServiceBusSubscription(serviceBusSubscriptionId).GetServiceBusRules();
            await foreach (var _ in collection.GetAllAsync(skip, top))
            {
            }
        }
    }
}

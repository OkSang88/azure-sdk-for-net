// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Sql;
using Azure.ResourceManager.Sql.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Sql.Tests.Mock
{
    /// <summary> Test for JobAgent. </summary>
    public partial class JobAgentMockTests : MockTestBase
    {
        public JobAgentMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get a job agent
            var jobAgentId = Sql.JobAgent.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "group1", "server1", "agent1");
            var jobAgent = GetArmClient().GetJobAgent(jobAgentId);

            await jobAgent.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: Delete a job agent
            var jobAgentId = Sql.JobAgent.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "group1", "server1", "agent1");
            var jobAgent = GetArmClient().GetJobAgent(jobAgentId);

            await jobAgent.DeleteAsync(true);
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: Update a job agent's tags.
            var jobAgentId = Sql.JobAgent.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "group1", "server1", "agent1");
            var jobAgent = GetArmClient().GetJobAgent(jobAgentId);
            Sql.Models.JobAgentUpdate parameters = new Sql.Models.JobAgentUpdate();

            await jobAgent.UpdateAsync(true, parameters);
        }

        [RecordedTest]
        public async Task GetJobExecutionsByAgent()
        {
            // Example: List all job executions in a job agent with filtering.
            var jobAgentId = Sql.JobAgent.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "group1", "server1", "agent1");
            var jobAgent = GetArmClient().GetJobAgent(jobAgentId);
            DateTimeOffset? createTimeMin = DateTimeOffset.Parse("2017-03-21T19:00:00Z");
            DateTimeOffset? createTimeMax = DateTimeOffset.Parse("2017-03-21T19:05:00Z");
            DateTimeOffset? endTimeMin = DateTimeOffset.Parse("2017-03-21T19:20:00Z");
            DateTimeOffset? endTimeMax = DateTimeOffset.Parse("2017-03-21T19:25:00Z");
            bool? isActive = false;
            int? skip = null;
            int? top = null;

            await foreach (var _ in jobAgent.GetJobExecutionsByAgentAsync(createTimeMin, createTimeMax, endTimeMin, endTimeMax, isActive, skip, top))
            {
            }
        }

        [RecordedTest]
        public async Task GetJobExecutionsByAgent2()
        {
            // Example: List all job executions in a job agent.
            var jobAgentId = Sql.JobAgent.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "group1", "server1", "agent1");
            var jobAgent = GetArmClient().GetJobAgent(jobAgentId);
            DateTimeOffset? createTimeMin = null;
            DateTimeOffset? createTimeMax = null;
            DateTimeOffset? endTimeMin = null;
            DateTimeOffset? endTimeMax = null;
            bool? isActive = null;
            int? skip = null;
            int? top = null;

            await foreach (var _ in jobAgent.GetJobExecutionsByAgentAsync(createTimeMin, createTimeMax, endTimeMin, endTimeMax, isActive, skip, top))
            {
            }
        }
    }
}

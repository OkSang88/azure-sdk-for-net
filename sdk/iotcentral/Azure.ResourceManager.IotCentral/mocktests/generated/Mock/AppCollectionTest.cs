// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;
using IotCentralClient;
using IotCentralClient.Models;

namespace IotCentralClient.Tests.Mock
{
    /// <summary> Test for App. </summary>
    public partial class AppCollectionMockTests : MockTestBase
    {
        public AppCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: Apps_CreateOrUpdate
            string resourceName = "myIoTCentralApp";
            IotCentralClient.AppData app = new IotCentralClient.AppData(location: "westus", sku: new IotCentralClient.Models.AppSkuInfo(name: new IotCentralClient.Models.AppSku("ST2")))
            {
                Identity = new IotCentralClient.Models.SystemAssignedServiceIdentity(type: new IotCentralClient.Models.SystemAssignedServiceIdentityType("SystemAssigned")),
                DisplayName = "My IoT Central App",
                Subdomain = "my-iot-central-app",
                Template = "iotc-pnp-preview@1.0.0",
            };

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg")).GetApps();
            await collection.CreateOrUpdateAsync(true, resourceName, app);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Apps_Get
            string resourceName = "myIoTCentralApp";

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg")).GetApps();
            await collection.GetAsync(resourceName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: Apps_ListByResourceGroup

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg")).GetApps();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

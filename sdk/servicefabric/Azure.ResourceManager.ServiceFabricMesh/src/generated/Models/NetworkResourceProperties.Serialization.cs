// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace ServiceFabricMeshManagementClient.Models
{
    public partial class NetworkResourceProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Description))
            {
                writer.WritePropertyName("description");
                writer.WriteStringValue(Description);
            }
            writer.WritePropertyName("kind");
            writer.WriteStringValue(Kind.ToString());
            writer.WriteEndObject();
        }

        internal static NetworkResourceProperties DeserializeNetworkResourceProperties(JsonElement element)
        {
            if (element.TryGetProperty("kind", out JsonElement discriminator))
            {
                switch (discriminator.GetString())
                {
                    case "Local": return LocalNetworkResourceProperties.DeserializeLocalNetworkResourceProperties(element);
                }
            }
            Optional<string> description = default;
            Optional<ResourceStatus> status = default;
            Optional<string> statusDetails = default;
            NetworkKind kind = default;
            Optional<string> provisioningState = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("description"))
                {
                    description = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("status"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    status = new ResourceStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("statusDetails"))
                {
                    statusDetails = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("kind"))
                {
                    kind = new NetworkKind(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("provisioningState"))
                {
                    provisioningState = property.Value.GetString();
                    continue;
                }
            }
            return new NetworkResourceProperties(provisioningState.Value, kind, description.Value, Optional.ToNullable(status), statusDetails.Value);
        }
    }
}

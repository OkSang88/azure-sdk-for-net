// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.Redis.Models;

namespace Azure.ResourceManager.Redis
{
    /// <summary> A class representing the RedisPatchSchedule data model. </summary>
    public partial class RedisPatchScheduleData : Resource
    {
        /// <summary> Initializes a new instance of RedisPatchScheduleData. </summary>
        /// <param name="scheduleEntries"> List of patch schedules for a Redis cache. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="scheduleEntries"/> is null. </exception>
        public RedisPatchScheduleData(IEnumerable<ScheduleEntry> scheduleEntries)
        {
            if (scheduleEntries == null)
            {
                throw new ArgumentNullException(nameof(scheduleEntries));
            }

            ScheduleEntries = scheduleEntries.ToList();
        }

        /// <summary> Initializes a new instance of RedisPatchScheduleData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="type"> The type. </param>
        /// <param name="scheduleEntries"> List of patch schedules for a Redis cache. </param>
        internal RedisPatchScheduleData(ResourceIdentifier id, string name, ResourceType type, IList<ScheduleEntry> scheduleEntries) : base(id, name, type)
        {
            ScheduleEntries = scheduleEntries;
        }

        /// <summary> List of patch schedules for a Redis cache. </summary>
        public IList<ScheduleEntry> ScheduleEntries { get; }
    }
}

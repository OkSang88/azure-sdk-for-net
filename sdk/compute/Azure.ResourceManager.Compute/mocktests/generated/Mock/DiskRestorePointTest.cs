// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.Compute.Models;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Compute.Tests.Mock
{
    /// <summary> Test for DiskRestorePoint. </summary>
    public partial class DiskRestorePointMockTests : MockTestBase
    {
        public DiskRestorePointMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get an incremental disk restorePoint resource.
            var diskRestorePoint = GetArmClient().GetDiskRestorePoint(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Compute/restorePointCollections/rpc/restorePoints/vmrp/diskRestorePoints/TestDisk45ceb03433006d1baee0_b70cd924-3362-4a80-93c2-9415eaa12745"));

            await diskRestorePoint.GetAsync();
        }

        [RecordedTest]
        public async Task GrantAccessAsync()
        {
            // Example: Grants access to a diskRestorePoint.
            var diskRestorePoint = GetArmClient().GetDiskRestorePoint(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Compute/restorePointCollections/rpc/restorePoints/vmrp/diskRestorePoints/TestDisk45ceb03433006d1baee0_b70cd924-3362-4a80-93c2-9415eaa12745"));
            Compute.Models.GrantAccessData grantAccessData = new Compute.Models.GrantAccessData(access: new Compute.Models.AccessLevel("Read"), durationInSeconds: 300);

            await diskRestorePoint.GrantAccessAsync(grantAccessData);
        }

        [RecordedTest]
        public async Task RevokeAccessAsync()
        {
            // Example: Revokes access to a diskRestorePoint.
            var diskRestorePoint = GetArmClient().GetDiskRestorePoint(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Compute/restorePointCollections/rpc/restorePoints/vmrp/diskRestorePoints/TestDisk45ceb03433006d1baee0_b70cd924-3362-4a80-93c2-9415eaa12745"));

            await diskRestorePoint.RevokeAccessAsync();
        }
    }
}

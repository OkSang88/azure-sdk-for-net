// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.Storage;
using Azure.ResourceManager.Storage.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Storage.Tests.Mock
{
    /// <summary> Test for ObjectReplicationPolicy. </summary>
    public partial class ObjectReplicationPolicyCollectionMockTests : MockTestBase
    {
        public ObjectReplicationPolicyCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync()
        {
            // Example: StorageAccountCreateObjectReplicationPolicyOnDestination
            var collection = GetArmClient().GetStorageAccount(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/res7687/providers/Microsoft.Storage/storageAccounts/dst112")).GetObjectReplicationPolicies();
            string objectReplicationPolicyId = "default";
            Storage.ObjectReplicationPolicyData properties = new Storage.ObjectReplicationPolicyData()
            {
                SourceAccount = "src1122",
                DestinationAccount = "dst112",
            };

            await collection.CreateOrUpdateAsync(objectReplicationPolicyId, properties);
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync2()
        {
            // Example: StorageAccountCreateObjectReplicationPolicyOnSource
            var collection = GetArmClient().GetStorageAccount(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/res7687/providers/Microsoft.Storage/storageAccounts/src1122")).GetObjectReplicationPolicies();
            string objectReplicationPolicyId = "2a20bb73-5717-4635-985a-5d4cf777438f";
            Storage.ObjectReplicationPolicyData properties = new Storage.ObjectReplicationPolicyData()
            {
                SourceAccount = "src1122",
                DestinationAccount = "dst112",
            };

            await collection.CreateOrUpdateAsync(objectReplicationPolicyId, properties);
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync3()
        {
            // Example: StorageAccountUpdateObjectReplicationPolicyOnDestination
            var collection = GetArmClient().GetStorageAccount(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/res7687/providers/Microsoft.Storage/storageAccounts/dst112")).GetObjectReplicationPolicies();
            string objectReplicationPolicyId = "2a20bb73-5717-4635-985a-5d4cf777438f";
            Storage.ObjectReplicationPolicyData properties = new Storage.ObjectReplicationPolicyData()
            {
                SourceAccount = "src1122",
                DestinationAccount = "dst112",
            };

            await collection.CreateOrUpdateAsync(objectReplicationPolicyId, properties);
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync4()
        {
            // Example: StorageAccountUpdateObjectReplicationPolicyOnSource
            var collection = GetArmClient().GetStorageAccount(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/res7687/providers/Microsoft.Storage/storageAccounts/src1122")).GetObjectReplicationPolicies();
            string objectReplicationPolicyId = "2a20bb73-5717-4635-985a-5d4cf777438f";
            Storage.ObjectReplicationPolicyData properties = new Storage.ObjectReplicationPolicyData()
            {
                SourceAccount = "src1122",
                DestinationAccount = "dst112",
            };

            await collection.CreateOrUpdateAsync(objectReplicationPolicyId, properties);
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: StorageAccountGetObjectReplicationPolicies
            var collection = GetArmClient().GetStorageAccount(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/res6977/providers/Microsoft.Storage/storageAccounts/sto2527")).GetObjectReplicationPolicies();
            string objectReplicationPolicyId = "{objectReplicationPolicy-Id}";

            await collection.GetAsync(objectReplicationPolicyId);
        }

        [RecordedTest]
        public void GetAllAsync()
        {
            // Example: StorageAccountListObjectReplicationPolicies
            var collection = GetArmClient().GetStorageAccount(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/res6977/providers/Microsoft.Storage/storageAccounts/sto2527")).GetObjectReplicationPolicies();

            collection.GetAllAsync();
        }
    }
}

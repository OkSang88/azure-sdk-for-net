// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Sql;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Sql.Tests.Mock
{
    /// <summary> Test for ServiceObjective. </summary>
    public partial class ServiceObjectiveMockTests : MockTestBase
    {
        public ServiceObjectiveMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get a service objective
            var serviceObjectiveId = Sql.ServiceObjective.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "group1", "sqlcrudtest", "29dd7459-4a7c-4e56-be22-f0adda49440d");
            var serviceObjective = GetArmClient().GetServiceObjective(serviceObjectiveId);

            await serviceObjective.GetAsync();
        }
    }
}

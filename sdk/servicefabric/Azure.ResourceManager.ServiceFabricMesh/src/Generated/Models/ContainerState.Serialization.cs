// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.ServiceFabricMesh.Models
{
    public partial class ContainerState
    {
        internal static ContainerState DeserializeContainerState(JsonElement element)
        {
            Optional<string> state = default;
            Optional<DateTimeOffset> startTime = default;
            Optional<string> exitCode = default;
            Optional<DateTimeOffset> finishTime = default;
            Optional<string> detailStatus = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("state"))
                {
                    state = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("startTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    startTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("exitCode"))
                {
                    exitCode = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("finishTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    finishTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("detailStatus"))
                {
                    detailStatus = property.Value.GetString();
                    continue;
                }
            }
            return new ContainerState(state.Value, Optional.ToNullable(startTime), exitCode.Value, Optional.ToNullable(finishTime), detailStatus.Value);
        }
    }
}

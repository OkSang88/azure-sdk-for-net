// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;
using OperationalInsightsManagementClient.Models;

namespace OperationalInsightsManagementClient
{
    /// <summary> A class representing the DataSource data model. </summary>
    public partial class DataSourceData : Resource
    {
        /// <summary> Initializes a new instance of DataSourceData. </summary>
        /// <param name="properties"> The data source properties in raw json format, each kind of data source have it&apos;s own schema. </param>
        /// <param name="kind"> The kind of the DataSource. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="properties"/> is null. </exception>
        public DataSourceData(object properties, DataSourceKind kind)
        {
            if (properties == null)
            {
                throw new ArgumentNullException(nameof(properties));
            }

            Properties = properties;
            Kind = kind;
            Tags = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of DataSourceData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="type"> The type. </param>
        /// <param name="properties"> The data source properties in raw json format, each kind of data source have it&apos;s own schema. </param>
        /// <param name="etag"> The ETag of the data source. </param>
        /// <param name="kind"> The kind of the DataSource. </param>
        /// <param name="tags"> Resource tags. </param>
        internal DataSourceData(ResourceIdentifier id, string name, ResourceType type, object properties, string etag, DataSourceKind kind, IDictionary<string, string> tags) : base(id, name, type)
        {
            Properties = properties;
            Etag = etag;
            Kind = kind;
            Tags = tags;
        }

        /// <summary> The data source properties in raw json format, each kind of data source have it&apos;s own schema. </summary>
        public object Properties { get; set; }
        /// <summary> The ETag of the data source. </summary>
        public string Etag { get; set; }
        /// <summary> The kind of the DataSource. </summary>
        public DataSourceKind Kind { get; set; }
        /// <summary> Resource tags. </summary>
        public IDictionary<string, string> Tags { get; }
    }
}

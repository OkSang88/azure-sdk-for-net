// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;
using ServiceFabricManagedClustersManagementClient;

namespace ServiceFabricManagedClustersManagementClient.Tests.Mock
{
    /// <summary> Test for ApplicationTypeResource. </summary>
    public partial class ApplicationTypeResourceCollectionMockTests : MockTestBase
    {
        public ApplicationTypeResourceCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: Put an application type
            string applicationTypeName = "myAppType";
            ServiceFabricManagedClustersManagementClient.ApplicationTypeResourceData parameters = new ServiceFabricManagedClustersManagementClient.ApplicationTypeResourceData(location: "eastus");

            var managedClusterId = ServiceFabricManagedClustersManagementClient.ManagedCluster.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "resRg", "myCluster");
            var collection = GetArmClient().GetManagedCluster(managedClusterId).GetApplicationTypeResources();
            await collection.CreateOrUpdateAsync(true, applicationTypeName, parameters);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get an application type
            string applicationTypeName = "myAppType";

            var managedClusterId = ServiceFabricManagedClustersManagementClient.ManagedCluster.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "resRg", "myCluster");
            var collection = GetArmClient().GetManagedCluster(managedClusterId).GetApplicationTypeResources();
            await collection.GetAsync(applicationTypeName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: Get a list of application type name resources

            var managedClusterId = ServiceFabricManagedClustersManagementClient.ManagedCluster.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "resRg", "myCluster");
            var collection = GetArmClient().GetManagedCluster(managedClusterId).GetApplicationTypeResources();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

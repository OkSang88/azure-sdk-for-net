// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.ExtendedLocation;
using Azure.ResourceManager.ExtendedLocation.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.ExtendedLocation.Tests.Mock
{
    /// <summary> Test for CustomLocation. </summary>
    public partial class CustomLocationMockTests : MockTestBase
    {
        public CustomLocationMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get Custom Location
            var customLocationId = ExtendedLocation.CustomLocation.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testresourcegroup", "customLocation01");
            var customLocation = GetArmClient().GetCustomLocation(customLocationId);

            await customLocation.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: Delete Custom Location
            var customLocationId = ExtendedLocation.CustomLocation.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testresourcegroup", "customLocation01");
            var customLocation = GetArmClient().GetCustomLocation(customLocationId);

            await customLocation.DeleteAsync(true);
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: Update Custom Location
            var customLocationId = ExtendedLocation.CustomLocation.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testresourcegroup", "customLocation01");
            var customLocation = GetArmClient().GetCustomLocation(customLocationId);
            ExtendedLocation.Models.PatchableCustomLocations parameters = new ExtendedLocation.Models.PatchableCustomLocations()
            {
                Identity = new ExtendedLocation.Models.LocationIdentity()
                {
                    Type = new ExtendedLocation.Models.ResourceIdentityType("SystemAssigned"),
                },
            };

            await customLocation.UpdateAsync(parameters);
        }

        [RecordedTest]
        public async Task GetEnabledResourceTypes()
        {
            // Example: Get Custom Location
            var customLocationId = ExtendedLocation.CustomLocation.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testresourcegroup", "customLocation01");
            var customLocation = GetArmClient().GetCustomLocation(customLocationId);

            await foreach (var _ in customLocation.GetEnabledResourceTypesAsync())
            {
            }
        }
    }
}

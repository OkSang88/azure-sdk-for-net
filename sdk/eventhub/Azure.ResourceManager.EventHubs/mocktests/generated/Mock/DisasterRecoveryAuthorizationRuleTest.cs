// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.EventHubs;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.EventHubs.Tests.Mock
{
    /// <summary> Test for AuthorizationRule. </summary>
    public partial class DisasterRecoveryAuthorizationRuleMockTests : MockTestBase
    {
        public DisasterRecoveryAuthorizationRuleMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: NameSpaceAuthorizationRuleGet
            var disasterRecoveryAuthorizationRuleId = EventHubs.DisasterRecoveryAuthorizationRule.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "exampleResourceGroup", "sdk-Namespace-9080", "sdk-DisasterRecovery-4879", "sdk-Authrules-4879");
            var disasterRecoveryAuthorizationRule = GetArmClient().GetDisasterRecoveryAuthorizationRule(disasterRecoveryAuthorizationRuleId);

            await disasterRecoveryAuthorizationRule.GetAsync();
        }

        [RecordedTest]
        public async Task GetKeys()
        {
            // Example: NameSpaceAuthorizationRuleListKey
            var disasterRecoveryAuthorizationRuleId = EventHubs.DisasterRecoveryAuthorizationRule.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "exampleResourceGroup", "sdk-Namespace-2702", "sdk-DisasterRecovery-4047", "sdk-Authrules-1746");
            var disasterRecoveryAuthorizationRule = GetArmClient().GetDisasterRecoveryAuthorizationRule(disasterRecoveryAuthorizationRuleId);

            await disasterRecoveryAuthorizationRule.GetKeysAsync();
        }
    }
}

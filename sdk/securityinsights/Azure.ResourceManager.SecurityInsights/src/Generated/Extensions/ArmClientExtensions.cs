// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager;

namespace Azure.ResourceManager.SecurityInsights
{
    /// <summary> A class to add extension methods to ArmClient. </summary>
    public static partial class ArmClientExtensions
    {
        #region AlertRule
        /// <summary> Gets an object representing a AlertRule along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="AlertRule" /> object. </returns>
        public static AlertRule GetAlertRule(this ArmClient armClient, ResourceIdentifier id)
        {
            AlertRule.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new AlertRule(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ActionResponse
        /// <summary> Gets an object representing a ActionResponse along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ActionResponse" /> object. </returns>
        public static ActionResponse GetActionResponse(this ArmClient armClient, ResourceIdentifier id)
        {
            ActionResponse.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ActionResponse(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region AlertRuleTemplate
        /// <summary> Gets an object representing a AlertRuleTemplate along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="AlertRuleTemplate" /> object. </returns>
        public static AlertRuleTemplate GetAlertRuleTemplate(this ArmClient armClient, ResourceIdentifier id)
        {
            AlertRuleTemplate.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new AlertRuleTemplate(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region AutomationRule
        /// <summary> Gets an object representing a AutomationRule along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="AutomationRule" /> object. </returns>
        public static AutomationRule GetAutomationRule(this ArmClient armClient, ResourceIdentifier id)
        {
            AutomationRule.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new AutomationRule(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region Bookmark
        /// <summary> Gets an object representing a Bookmark along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="Bookmark" /> object. </returns>
        public static Bookmark GetBookmark(this ArmClient armClient, ResourceIdentifier id)
        {
            Bookmark.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new Bookmark(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region BookmarkRelation
        /// <summary> Gets an object representing a BookmarkRelation along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="BookmarkRelation" /> object. </returns>
        public static BookmarkRelation GetBookmarkRelation(this ArmClient armClient, ResourceIdentifier id)
        {
            BookmarkRelation.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new BookmarkRelation(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region EntityRelation
        /// <summary> Gets an object representing a EntityRelation along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="EntityRelation" /> object. </returns>
        public static EntityRelation GetEntityRelation(this ArmClient armClient, ResourceIdentifier id)
        {
            EntityRelation.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new EntityRelation(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region IncidentRelation
        /// <summary> Gets an object representing a IncidentRelation along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="IncidentRelation" /> object. </returns>
        public static IncidentRelation GetIncidentRelation(this ArmClient armClient, ResourceIdentifier id)
        {
            IncidentRelation.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new IncidentRelation(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region EntityQuery
        /// <summary> Gets an object representing a EntityQuery along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="EntityQuery" /> object. </returns>
        public static EntityQuery GetEntityQuery(this ArmClient armClient, ResourceIdentifier id)
        {
            EntityQuery.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new EntityQuery(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region Entity
        /// <summary> Gets an object representing a Entity along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="Entity" /> object. </returns>
        public static Entity GetEntity(this ArmClient armClient, ResourceIdentifier id)
        {
            Entity.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new Entity(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region Incident
        /// <summary> Gets an object representing a Incident along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="Incident" /> object. </returns>
        public static Incident GetIncident(this ArmClient armClient, ResourceIdentifier id)
        {
            Incident.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new Incident(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region IncidentComment
        /// <summary> Gets an object representing a IncidentComment along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="IncidentComment" /> object. </returns>
        public static IncidentComment GetIncidentComment(this ArmClient armClient, ResourceIdentifier id)
        {
            IncidentComment.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new IncidentComment(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region MetadataModel
        /// <summary> Gets an object representing a MetadataModel along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="MetadataModel" /> object. </returns>
        public static MetadataModel GetMetadataModel(this ArmClient armClient, ResourceIdentifier id)
        {
            MetadataModel.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new MetadataModel(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region SentinelOnboardingState
        /// <summary> Gets an object representing a SentinelOnboardingState along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SentinelOnboardingState" /> object. </returns>
        public static SentinelOnboardingState GetSentinelOnboardingState(this ArmClient armClient, ResourceIdentifier id)
        {
            SentinelOnboardingState.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new SentinelOnboardingState(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region Settings
        /// <summary> Gets an object representing a Settings along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="Settings" /> object. </returns>
        public static Settings GetSettings(this ArmClient armClient, ResourceIdentifier id)
        {
            Settings.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new Settings(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region SourceControl
        /// <summary> Gets an object representing a SourceControl along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SourceControl" /> object. </returns>
        public static SourceControl GetSourceControl(this ArmClient armClient, ResourceIdentifier id)
        {
            SourceControl.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new SourceControl(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region Watchlist
        /// <summary> Gets an object representing a Watchlist along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="Watchlist" /> object. </returns>
        public static Watchlist GetWatchlist(this ArmClient armClient, ResourceIdentifier id)
        {
            Watchlist.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new Watchlist(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region WatchlistItem
        /// <summary> Gets an object representing a WatchlistItem along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="WatchlistItem" /> object. </returns>
        public static WatchlistItem GetWatchlistItem(this ArmClient armClient, ResourceIdentifier id)
        {
            WatchlistItem.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new WatchlistItem(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region DataConnector
        /// <summary> Gets an object representing a DataConnector along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DataConnector" /> object. </returns>
        public static DataConnector GetDataConnector(this ArmClient armClient, ResourceIdentifier id)
        {
            DataConnector.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new DataConnector(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ThreatIntelligenceInformation
        /// <summary> Gets an object representing a ThreatIntelligenceInformation along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ThreatIntelligenceInformation" /> object. </returns>
        public static ThreatIntelligenceInformation GetThreatIntelligenceInformation(this ArmClient armClient, ResourceIdentifier id)
        {
            ThreatIntelligenceInformation.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ThreatIntelligenceInformation(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region OfficeConsent
        /// <summary> Gets an object representing a OfficeConsent along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="OfficeConsent" /> object. </returns>
        public static OfficeConsent GetOfficeConsent(this ArmClient armClient, ResourceIdentifier id)
        {
            OfficeConsent.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new OfficeConsent(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region EntityQueryTemplate
        /// <summary> Gets an object representing a EntityQueryTemplate along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="EntityQueryTemplate" /> object. </returns>
        public static EntityQueryTemplate GetEntityQueryTemplate(this ArmClient armClient, ResourceIdentifier id)
        {
            EntityQueryTemplate.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new EntityQueryTemplate(clientOptions, credential, uri, pipeline, id));
        }
        #endregion
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.StorageCache;
using Azure.ResourceManager.StorageCache.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.StorageCache.Tests.Mock
{
    /// <summary> Test for StorageTarget. </summary>
    public partial class StorageTargetCollectionMockTests : MockTestBase
    {
        public StorageTargetCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: StorageTargets_CreateOrUpdate
            string storageTargetName = "st1";
            StorageCache.StorageTargetData storagetarget = new StorageCache.StorageTargetData()
            {
                TargetType = new StorageCache.Models.StorageTargetType("nfs3"),
                Nfs3 = new StorageCache.Models.Nfs3Target()
                {
                    Target = "10.0.44.44",
                    UsageModel = "READ_HEAVY_INFREQ",
                },
            };

            var cacheId = StorageCache.Cache.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "scgroup", "sc1");
            var collection = GetArmClient().GetCache(cacheId).GetStorageTargets();
            await collection.CreateOrUpdateAsync(true, storageTargetName, storagetarget);
        }

        [RecordedTest]
        public async Task CreateOrUpdate2()
        {
            // Example: StorageTargets_CreateOrUpdate_BlobNfs
            string storageTargetName = "st1";
            StorageCache.StorageTargetData storagetarget = new StorageCache.StorageTargetData()
            {
                TargetType = new StorageCache.Models.StorageTargetType("blobNfs"),
                BlobNfs = new StorageCache.Models.BlobNfsTarget()
                {
                    Target = "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/scgroup/providers/Microsoft.Storage/storageAccounts/blofnfs/blobServices/default/containers/blobnfs",
                    UsageModel = "WRITE_WORKLOAD_15",
                },
            };

            var cacheId = StorageCache.Cache.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "scgroup", "sc1");
            var collection = GetArmClient().GetCache(cacheId).GetStorageTargets();
            await collection.CreateOrUpdateAsync(true, storageTargetName, storagetarget);
        }

        [RecordedTest]
        public async Task CreateOrUpdate3()
        {
            // Example: StorageTargets_CreateOrUpdate_NoJunctions
            string storageTargetName = "st1";
            StorageCache.StorageTargetData storagetarget = new StorageCache.StorageTargetData()
            {
                TargetType = new StorageCache.Models.StorageTargetType("nfs3"),
                Nfs3 = new StorageCache.Models.Nfs3Target()
                {
                    Target = "10.0.44.44",
                    UsageModel = "READ_HEAVY_INFREQ",
                },
            };

            var cacheId = StorageCache.Cache.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "scgroup", "sc1");
            var collection = GetArmClient().GetCache(cacheId).GetStorageTargets();
            await collection.CreateOrUpdateAsync(true, storageTargetName, storagetarget);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: StorageTargets_Get
            string storageTargetName = "st1";

            var cacheId = StorageCache.Cache.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "scgroup", "sc1");
            var collection = GetArmClient().GetCache(cacheId).GetStorageTargets();
            await collection.GetAsync(storageTargetName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: StorageTargets_List

            var cacheId = StorageCache.Cache.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "scgroup", "sc1");
            var collection = GetArmClient().GetCache(cacheId).GetStorageTargets();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

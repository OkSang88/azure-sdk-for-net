// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;
using ManagedNetworkManagementClient;

namespace ManagedNetworkManagementClient.Tests.Mock
{
    /// <summary> Test for ScopeAssignment. </summary>
    public partial class ScopeAssignmentMockTests : MockTestBase
    {
        public ScopeAssignmentMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: ScopeAssignmentsGet
            var scopeAssignmentId = ManagedNetworkManagementClient.ScopeAssignment.CreateResourceIdentifier("subscriptions/subscriptionC", "subscriptionCAssignment");
            var scopeAssignment = GetArmClient().GetScopeAssignment(scopeAssignmentId);

            await scopeAssignment.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: ScopeAssignmentsDelete
            var scopeAssignmentId = ManagedNetworkManagementClient.ScopeAssignment.CreateResourceIdentifier("subscriptions/subscriptionC", "subscriptionCAssignment");
            var scopeAssignment = GetArmClient().GetScopeAssignment(scopeAssignmentId);

            await scopeAssignment.DeleteAsync(true);
        }
    }
}

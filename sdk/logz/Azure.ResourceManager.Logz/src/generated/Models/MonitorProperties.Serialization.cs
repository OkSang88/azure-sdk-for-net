// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace MicrosoftLogz.Models
{
    public partial class MonitorProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(MonitoringStatus))
            {
                writer.WritePropertyName("monitoringStatus");
                writer.WriteStringValue(MonitoringStatus.Value.ToString());
            }
            if (Optional.IsDefined(MarketplaceSubscriptionStatus))
            {
                writer.WritePropertyName("marketplaceSubscriptionStatus");
                writer.WriteStringValue(MarketplaceSubscriptionStatus.Value.ToString());
            }
            if (Optional.IsDefined(LogzOrganizationProperties))
            {
                writer.WritePropertyName("logzOrganizationProperties");
                writer.WriteObjectValue(LogzOrganizationProperties);
            }
            if (Optional.IsDefined(UserInfo))
            {
                writer.WritePropertyName("userInfo");
                writer.WriteObjectValue(UserInfo);
            }
            if (Optional.IsDefined(PlanData))
            {
                writer.WritePropertyName("planData");
                writer.WriteObjectValue(PlanData);
            }
            writer.WriteEndObject();
        }

        internal static MonitorProperties DeserializeMonitorProperties(JsonElement element)
        {
            Optional<ProvisioningState> provisioningState = default;
            Optional<MonitoringStatus> monitoringStatus = default;
            Optional<MarketplaceSubscriptionStatus> marketplaceSubscriptionStatus = default;
            Optional<LogzOrganizationProperties> logzOrganizationProperties = default;
            Optional<UserInfo> userInfo = default;
            Optional<PlanData> planData = default;
            Optional<LiftrResourceCategories> liftrResourceCategory = default;
            Optional<int> liftrResourcePreference = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("provisioningState"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    provisioningState = new ProvisioningState(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("monitoringStatus"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    monitoringStatus = new MonitoringStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("marketplaceSubscriptionStatus"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    marketplaceSubscriptionStatus = new MarketplaceSubscriptionStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("logzOrganizationProperties"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    logzOrganizationProperties = LogzOrganizationProperties.DeserializeLogzOrganizationProperties(property.Value);
                    continue;
                }
                if (property.NameEquals("userInfo"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    userInfo = UserInfo.DeserializeUserInfo(property.Value);
                    continue;
                }
                if (property.NameEquals("planData"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    planData = PlanData.DeserializePlanData(property.Value);
                    continue;
                }
                if (property.NameEquals("liftrResourceCategory"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    liftrResourceCategory = new LiftrResourceCategories(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("liftrResourcePreference"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    liftrResourcePreference = property.Value.GetInt32();
                    continue;
                }
            }
            return new MonitorProperties(Optional.ToNullable(provisioningState), Optional.ToNullable(monitoringStatus), Optional.ToNullable(marketplaceSubscriptionStatus), logzOrganizationProperties.Value, userInfo.Value, planData.Value, Optional.ToNullable(liftrResourceCategory), Optional.ToNullable(liftrResourcePreference));
        }
    }
}

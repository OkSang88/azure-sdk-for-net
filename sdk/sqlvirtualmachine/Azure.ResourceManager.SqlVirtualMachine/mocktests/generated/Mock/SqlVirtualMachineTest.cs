// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.SqlVirtualMachine.Tests.Mock;
using Azure.ResourceManager.SqlVirtualMachine.Tests.Mock.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.SqlVirtualMachine.Tests.Mock.Tests.Mock
{
    /// <summary> Test for SqlVirtualMachine. </summary>
    public partial class SqlVirtualMachineMockTests : MockTestBase
    {
        public SqlVirtualMachineMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Gets a SQL virtual machine.
            var sqlVirtualMachineId = SqlVirtualMachine.Tests.Mock.SqlVirtualMachine.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg", "testvm");
            var sqlVirtualMachine = GetArmClient().GetSqlVirtualMachine(sqlVirtualMachineId);
            string expand = null;

            await sqlVirtualMachine.GetAsync(expand);
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: Deletes a SQL virtual machine.
            var sqlVirtualMachineId = SqlVirtualMachine.Tests.Mock.SqlVirtualMachine.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg", "testvm1");
            var sqlVirtualMachine = GetArmClient().GetSqlVirtualMachine(sqlVirtualMachineId);

            await sqlVirtualMachine.DeleteAsync(true);
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: Updates a SQL virtual machine tags.
            var sqlVirtualMachineId = SqlVirtualMachine.Tests.Mock.SqlVirtualMachine.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg", "testvm");
            var sqlVirtualMachine = GetArmClient().GetSqlVirtualMachine(sqlVirtualMachineId);
            SqlVirtualMachine.Tests.Mock.Models.SqlVirtualMachineUpdate parameters = new SqlVirtualMachine.Tests.Mock.Models.SqlVirtualMachineUpdate();

            await sqlVirtualMachine.UpdateAsync(true, parameters);
        }
    }
}

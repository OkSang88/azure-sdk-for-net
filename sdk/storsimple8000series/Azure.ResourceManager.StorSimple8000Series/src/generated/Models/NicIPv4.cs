// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace StorSimple8000SeriesManagementClient.Models
{
    /// <summary> Details related to the IPv4 address configuration. </summary>
    public partial class NicIPv4
    {
        /// <summary> Initializes a new instance of NicIPv4. </summary>
        public NicIPv4()
        {
        }

        /// <summary> Initializes a new instance of NicIPv4. </summary>
        /// <param name="ipv4Address"> The IPv4 address of the network adapter. </param>
        /// <param name="ipv4Netmask"> The IPv4 netmask of the network adapter. </param>
        /// <param name="ipv4Gateway"> The IPv4 gateway of the network adapter. </param>
        /// <param name="controller0Ipv4Address"> The IPv4 address of Controller0. </param>
        /// <param name="controller1Ipv4Address"> The IPv4 address of Controller1. </param>
        internal NicIPv4(string ipv4Address, string ipv4Netmask, string ipv4Gateway, string controller0Ipv4Address, string controller1Ipv4Address)
        {
            Ipv4Address = ipv4Address;
            Ipv4Netmask = ipv4Netmask;
            Ipv4Gateway = ipv4Gateway;
            Controller0Ipv4Address = controller0Ipv4Address;
            Controller1Ipv4Address = controller1Ipv4Address;
        }

        /// <summary> The IPv4 address of the network adapter. </summary>
        public string Ipv4Address { get; set; }
        /// <summary> The IPv4 netmask of the network adapter. </summary>
        public string Ipv4Netmask { get; set; }
        /// <summary> The IPv4 gateway of the network adapter. </summary>
        public string Ipv4Gateway { get; set; }
        /// <summary> The IPv4 address of Controller0. </summary>
        public string Controller0Ipv4Address { get; set; }
        /// <summary> The IPv4 address of Controller1. </summary>
        public string Controller1Ipv4Address { get; set; }
    }
}

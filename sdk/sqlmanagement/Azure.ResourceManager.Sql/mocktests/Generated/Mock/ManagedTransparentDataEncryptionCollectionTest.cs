// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Sql;
using Azure.ResourceManager.Sql.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Sql.Tests.Mock
{
    /// <summary> Test for ManagedTransparentDataEncryption. </summary>
    public partial class ManagedTransparentDataEncryptionCollectionMockTests : MockTestBase
    {
        public ManagedTransparentDataEncryptionCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: Update a database's Transparent Data Encryption state with minimal parameters
            Sql.Models.TransparentDataEncryptionName tdeName = new Sql.Models.TransparentDataEncryptionName("current");
            Sql.ManagedTransparentDataEncryptionData parameters = new Sql.ManagedTransparentDataEncryptionData()
            {
                State = Sql.Models.TransparentDataEncryptionState.Enabled,
            };

            var managedDatabaseId = Sql.ManagedDatabase.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "securitytde-42-rg", "securitytde-42", "testdb");
            var collection = GetArmClient().GetManagedDatabase(managedDatabaseId).GetManagedTransparentDataEncryptions();
            await collection.CreateOrUpdateAsync(true, tdeName, parameters);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get a database's transparent data encryption
            Sql.Models.TransparentDataEncryptionName tdeName = new Sql.Models.TransparentDataEncryptionName("current");

            var managedDatabaseId = Sql.ManagedDatabase.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "security-tde-resourcegroup", "securitytde", "testdb");
            var collection = GetArmClient().GetManagedDatabase(managedDatabaseId).GetManagedTransparentDataEncryptions();
            await collection.GetAsync(tdeName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: Get a list of the database's transparent data encryptions

            var managedDatabaseId = Sql.ManagedDatabase.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "security-tde-resourcegroup", "securitytde", "testdb");
            var collection = GetArmClient().GetManagedDatabase(managedDatabaseId).GetManagedTransparentDataEncryptions();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager;

namespace FrontDoorManagementClient
{
    /// <summary> A class to add extension methods to ArmClient. </summary>
    public static partial class ArmClientExtensions
    {
        #region Profile
        /// <summary> Gets an object representing a Profile along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="Profile" /> object. </returns>
        public static Profile GetProfile(this ArmClient armClient, ResourceIdentifier id)
        {
            Profile.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new Profile(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region Experiment
        /// <summary> Gets an object representing a Experiment along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="Experiment" /> object. </returns>
        public static Experiment GetExperiment(this ArmClient armClient, ResourceIdentifier id)
        {
            Experiment.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new Experiment(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region FrontDoor
        /// <summary> Gets an object representing a FrontDoor along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="FrontDoor" /> object. </returns>
        public static FrontDoor GetFrontDoor(this ArmClient armClient, ResourceIdentifier id)
        {
            FrontDoor.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new FrontDoor(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region FrontendEndpoint
        /// <summary> Gets an object representing a FrontendEndpoint along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="FrontendEndpoint" /> object. </returns>
        public static FrontendEndpoint GetFrontendEndpoint(this ArmClient armClient, ResourceIdentifier id)
        {
            FrontendEndpoint.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new FrontendEndpoint(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region RulesEngine
        /// <summary> Gets an object representing a RulesEngine along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="RulesEngine" /> object. </returns>
        public static RulesEngine GetRulesEngine(this ArmClient armClient, ResourceIdentifier id)
        {
            RulesEngine.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new RulesEngine(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region WebApplicationFirewallPolicy
        /// <summary> Gets an object representing a WebApplicationFirewallPolicy along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="WebApplicationFirewallPolicy" /> object. </returns>
        public static WebApplicationFirewallPolicy GetWebApplicationFirewallPolicy(this ArmClient armClient, ResourceIdentifier id)
        {
            WebApplicationFirewallPolicy.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new WebApplicationFirewallPolicy(clientOptions, credential, uri, pipeline, id));
        }
        #endregion
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;
using AzureQuotaExtensionAPI;
using AzureQuotaExtensionAPI.Models;

namespace AzureQuotaExtensionAPI.Tests.Mock
{
    /// <summary> Test for CurrentQuotaLimitBase. </summary>
    public partial class CurrentQuotaLimitBaseMockTests : MockTestBase
    {
        public CurrentQuotaLimitBaseMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Quotas_Get_Request_ForCompute
            var currentQuotaLimitBaseId = AzureQuotaExtensionAPI.CurrentQuotaLimitBase.CreateResourceIdentifier("subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Compute/locations/eastus", "standardNDSFamily");
            var currentQuotaLimitBase = GetArmClient().GetCurrentQuotaLimitBase(currentQuotaLimitBaseId);

            await currentQuotaLimitBase.GetAsync();
        }

        [RecordedTest]
        public async Task Get2()
        {
            // Example: Quotas_UsagesRequest_ForNetwork
            var currentQuotaLimitBaseId = AzureQuotaExtensionAPI.CurrentQuotaLimitBase.CreateResourceIdentifier("subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Network/locations/eastus", "MinPublicIpInterNetworkPrefixLength");
            var currentQuotaLimitBase = GetArmClient().GetCurrentQuotaLimitBase(currentQuotaLimitBaseId);

            await currentQuotaLimitBase.GetAsync();
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: Quotas_Request_PatchForCompute
            var currentQuotaLimitBaseId = AzureQuotaExtensionAPI.CurrentQuotaLimitBase.CreateResourceIdentifier("subscriptions/D7EC67B3-7657-4966-BFFC-41EFD36BAAB3/providers/Microsoft.Compute/locations/eastus", "standardFSv2Family");
            var currentQuotaLimitBase = GetArmClient().GetCurrentQuotaLimitBase(currentQuotaLimitBaseId);
            AzureQuotaExtensionAPI.CurrentQuotaLimitBaseData createQuotaRequest = new AzureQuotaExtensionAPI.CurrentQuotaLimitBaseData()
            {
                Properties = new AzureQuotaExtensionAPI.Models.QuotaProperties()
                {
                    Limit = new AzureQuotaExtensionAPI.Models.LimitObject(value: 10)
                    {
                        LimitObjectType = new AzureQuotaExtensionAPI.Models.LimitType("LimitValue"),
                    },
                    Name = new AzureQuotaExtensionAPI.Models.ResourceName()
                    {
                        Value = "standardFSv2Family",
                    },
                },
            };

            await currentQuotaLimitBase.UpdateAsync(true, createQuotaRequest);
        }

        [RecordedTest]
        public async Task Update2()
        {
            // Example: Quotas_Request_PatchForNetwork
            var currentQuotaLimitBaseId = AzureQuotaExtensionAPI.CurrentQuotaLimitBase.CreateResourceIdentifier("subscriptions/D7EC67B3-7657-4966-BFFC-41EFD36BAAB3/providers/Microsoft.Network/locations/eastus", "MinPublicIpInterNetworkPrefixLength");
            var currentQuotaLimitBase = GetArmClient().GetCurrentQuotaLimitBase(currentQuotaLimitBaseId);
            AzureQuotaExtensionAPI.CurrentQuotaLimitBaseData createQuotaRequest = new AzureQuotaExtensionAPI.CurrentQuotaLimitBaseData()
            {
                Properties = new AzureQuotaExtensionAPI.Models.QuotaProperties()
                {
                    Limit = new AzureQuotaExtensionAPI.Models.LimitObject(value: 10)
                    {
                        LimitObjectType = new AzureQuotaExtensionAPI.Models.LimitType("LimitValue"),
                    },
                    Name = new AzureQuotaExtensionAPI.Models.ResourceName()
                    {
                        Value = "MinPublicIpInterNetworkPrefixLength",
                    },
                    ResourceType = "MinPublicIpInterNetworkPrefixLength",
                },
            };

            await currentQuotaLimitBase.UpdateAsync(true, createQuotaRequest);
        }
    }
}

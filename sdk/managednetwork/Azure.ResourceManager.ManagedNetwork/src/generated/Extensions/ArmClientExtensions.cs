// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager;

namespace ManagedNetworkManagementClient
{
    /// <summary> A class to add extension methods to ArmClient. </summary>
    public static partial class ArmClientExtensions
    {
        #region ManagedNetwork
        /// <summary> Gets an object representing a ManagedNetwork along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ManagedNetwork" /> object. </returns>
        public static ManagedNetwork GetManagedNetwork(this ArmClient armClient, ResourceIdentifier id)
        {
            ManagedNetwork.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ManagedNetwork(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ScopeAssignment
        /// <summary> Gets an object representing a ScopeAssignment along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ScopeAssignment" /> object. </returns>
        public static ScopeAssignment GetScopeAssignment(this ArmClient armClient, ResourceIdentifier id)
        {
            ScopeAssignment.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ScopeAssignment(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ManagedNetworkGroup
        /// <summary> Gets an object representing a ManagedNetworkGroup along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ManagedNetworkGroup" /> object. </returns>
        public static ManagedNetworkGroup GetManagedNetworkGroup(this ArmClient armClient, ResourceIdentifier id)
        {
            ManagedNetworkGroup.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ManagedNetworkGroup(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ManagedNetworkPeeringPolicy
        /// <summary> Gets an object representing a ManagedNetworkPeeringPolicy along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ManagedNetworkPeeringPolicy" /> object. </returns>
        public static ManagedNetworkPeeringPolicy GetManagedNetworkPeeringPolicy(this ArmClient armClient, ResourceIdentifier id)
        {
            ManagedNetworkPeeringPolicy.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ManagedNetworkPeeringPolicy(clientOptions, credential, uri, pipeline, id));
        }
        #endregion
    }
}

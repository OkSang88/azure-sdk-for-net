// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace SecurityInsights.Models
{
    /// <summary> MicrosoftSecurityIncidentCreation rule property bag. </summary>
    internal partial class MicrosoftSecurityIncidentCreationAlertRuleProperties : MicrosoftSecurityIncidentCreationAlertRuleCommonProperties
    {
        /// <summary> Initializes a new instance of MicrosoftSecurityIncidentCreationAlertRuleProperties. </summary>
        /// <param name="productFilter"> The alerts&apos; productName on which the cases will be generated. </param>
        /// <param name="displayName"> The display name for alerts created by this alert rule. </param>
        /// <param name="enabled"> Determines whether this alert rule is enabled or disabled. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="displayName"/> is null. </exception>
        internal MicrosoftSecurityIncidentCreationAlertRuleProperties(MicrosoftSecurityProductName productFilter, string displayName, bool enabled) : base(productFilter)
        {
            if (displayName == null)
            {
                throw new ArgumentNullException(nameof(displayName));
            }

            DisplayName = displayName;
            Enabled = enabled;
        }

        /// <summary> The Name of the alert rule template used to create this rule. </summary>
        public string AlertRuleTemplateName { get; }
        /// <summary> The description of the alert rule. </summary>
        public string Description { get; }
        /// <summary> The display name for alerts created by this alert rule. </summary>
        public string DisplayName { get; }
        /// <summary> Determines whether this alert rule is enabled or disabled. </summary>
        public bool Enabled { get; }
        /// <summary> The last time that this alert has been modified. </summary>
        public DateTimeOffset? LastModifiedUtc { get; }
    }
}

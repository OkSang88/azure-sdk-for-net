// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Compute;
using Azure.ResourceManager.Compute.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Compute.Tests.Mock
{
    /// <summary> Test for VirtualMachineExtension. </summary>
    public partial class VirtualMachineExtensionMockTests : MockTestBase
    {
        public VirtualMachineExtensionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: Update VM extension.
            var virtualMachineExtensionId = Compute.VirtualMachineExtension.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myVM", "myVMExtension");
            var virtualMachineExtension = GetArmClient().GetVirtualMachineExtension(virtualMachineExtensionId);
            Compute.Models.VirtualMachineExtensionUpdate extensionParameters = new Compute.Models.VirtualMachineExtensionUpdate()
            {
                Publisher = "extPublisher",
                Type = "extType",
                TypeHandlerVersion = "1.2",
                AutoUpgradeMinorVersion = true,
                Settings = new Dictionary<string, object>()
                {
                    ["UserName"] = "xyz@microsoft.com",
                }
            ,
                SuppressFailures = true,
            };

            await virtualMachineExtension.UpdateAsync(true, extensionParameters);
        }
    }
}

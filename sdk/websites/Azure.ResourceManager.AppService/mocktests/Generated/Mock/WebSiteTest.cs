// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.AppService;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.AppService.Tests.Mock
{
    /// <summary> Test for WebSite. </summary>
    public partial class WebSiteMockTests : MockTestBase
    {
        public WebSiteMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task GetSiteBackups()
        {
            // Example: List backups
            var webSiteId = AppService.WebSite.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg123", "tests346");
            var webSite = GetArmClient().GetWebSite(webSiteId);

            await foreach (var _ in webSite.GetSiteBackupsAsync())
            {
            }
        }

        [RecordedTest]
        public async Task GetNetworkTraceOperation()
        {
            // Example: Get the current status of a network trace operation for a site
            var webSiteId = AppService.WebSite.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg123", "SampleApp");
            var webSite = GetArmClient().GetWebSite(webSiteId);
            string operationId = "c291433b-53ad-4c49-8cae-0a293eae1c6d";

            await webSite.GetNetworkTraceOperationAsync(operationId);
        }

        [RecordedTest]
        public async Task StartWebSiteNetworkTraceOperation()
        {
            // Example: Start a new network trace operation for a site
            var webSiteId = AppService.WebSite.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg123", "SampleApp");
            var webSite = GetArmClient().GetWebSite(webSiteId);
            int? durationInSeconds = 60;
            int? maxFrameLength = null;
            string sasUrl = null;

            await webSite.StartWebSiteNetworkTraceOperationAsync(true, durationInSeconds, maxFrameLength, sasUrl);
        }

        [RecordedTest]
        public async Task StopWebSiteNetworkTrace()
        {
            // Example: Stop a currently running network trace operation for a site
            var webSiteId = AppService.WebSite.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg123", "SampleApp");
            var webSite = GetArmClient().GetWebSite(webSiteId);

            await webSite.StopWebSiteNetworkTraceAsync();
        }

        [RecordedTest]
        public async Task GetNetworkTraces()
        {
            // Example: Get NetworkTraces for a site
            var webSiteId = AppService.WebSite.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg123", "SampleApp");
            var webSite = GetArmClient().GetWebSite(webSiteId);
            string operationId = "c291433b-53ad-4c49-8cae-0a293eae1c6d";

            await foreach (var _ in webSite.GetNetworkTracesAsync(operationId))
            {
            }
        }

        [RecordedTest]
        public async Task GetNetworkTraceOperationV2()
        {
            // Example: Get the current status of a network trace operation for a site
            var webSiteId = AppService.WebSite.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg123", "SampleApp");
            var webSite = GetArmClient().GetWebSite(webSiteId);
            string operationId = "c291433b-53ad-4c49-8cae-0a293eae1c6d";

            await webSite.GetNetworkTraceOperationV2Async(operationId);
        }

        [RecordedTest]
        public async Task GetNetworkTracesV2()
        {
            // Example: Get NetworkTraces for a site
            var webSiteId = AppService.WebSite.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg123", "SampleApp");
            var webSite = GetArmClient().GetWebSite(webSiteId);
            string operationId = "c291433b-53ad-4c49-8cae-0a293eae1c6d";

            await foreach (var _ in webSite.GetNetworkTracesV2Async(operationId))
            {
            }
        }

        [RecordedTest]
        public async Task GetPrivateLinkResources()
        {
            // Example: Get private link resources of a site
            var webSiteId = AppService.WebSite.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg", "testSite");
            var webSite = GetArmClient().GetWebSite(webSiteId);

            await foreach (var _ in webSite.GetPrivateLinkResourcesAsync())
            {
            }
        }

        [RecordedTest]
        public async Task StartNetworkTrace()
        {
            // Example: Start a new network trace operation for a site
            var webSiteId = AppService.WebSite.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg123", "SampleApp");
            var webSite = GetArmClient().GetWebSite(webSiteId);
            int? durationInSeconds = 60;
            int? maxFrameLength = null;
            string sasUrl = null;

            await webSite.StartNetworkTraceAsync(true, durationInSeconds, maxFrameLength, sasUrl);
        }

        [RecordedTest]
        public async Task StopNetworkTrace()
        {
            // Example: Stop a currently running network trace operation for a site
            var webSiteId = AppService.WebSite.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg123", "SampleApp");
            var webSite = GetArmClient().GetWebSite(webSiteId);

            await webSite.StopNetworkTraceAsync();
        }

        [RecordedTest]
        public async Task SiteResourceHealthMetadataGet()
        {
            // Example: Get ResourceHealthMetadata
            var siteResourceHealthMetadataId = AppService.SiteResourceHealthMetadata.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "Default-Web-NorthCentralUS", "newsiteinnewASE-NCUS");
            var siteResourceHealthMetadata = GetArmClient().GetSiteResourceHealthMetadata(siteResourceHealthMetadataId);

            await siteResourceHealthMetadata.GetAsync();
        }

        [RecordedTest]
        public async Task BasicPublishingCredentialsPolicyFtpGet()
        {
            // Example: Get FTP Allowed
            var basicPublishingCredentialsPolicyFtpId = AppService.BasicPublishingCredentialsPolicyFtp.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg", "testSite");
            var basicPublishingCredentialsPolicyFtp = GetArmClient().GetBasicPublishingCredentialsPolicyFtp(basicPublishingCredentialsPolicyFtpId);

            await basicPublishingCredentialsPolicyFtp.GetAsync();
        }

        [RecordedTest]
        public async Task SiteBasicPublishingCredentialsPolicyScmGet()
        {
            // Example: Get SCM Allowed
            var siteBasicPublishingCredentialsPolicyScmId = AppService.SiteBasicPublishingCredentialsPolicyScm.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg", "testSite");
            var siteBasicPublishingCredentialsPolicyScm = GetArmClient().GetSiteBasicPublishingCredentialsPolicyScm(siteBasicPublishingCredentialsPolicyScmId);

            await siteBasicPublishingCredentialsPolicyScm.GetAsync();
        }
    }
}

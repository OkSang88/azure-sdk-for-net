// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace SecurityInsights.Models
{
    /// <summary> Mail message entity property bag. </summary>
    internal partial class MailMessageEntityProperties : EntityCommonProperties
    {
        /// <summary> Initializes a new instance of MailMessageEntityProperties. </summary>
        internal MailMessageEntityProperties()
        {
            FileEntityIds = new ChangeTrackingList<string>();
            Urls = new ChangeTrackingList<string>();
            Threats = new ChangeTrackingList<string>();
            ThreatDetectionMethods = new ChangeTrackingList<string>();
        }

        /// <summary> The File entity ids of this mail message&apos;s attachments. </summary>
        public IReadOnlyList<string> FileEntityIds { get; }
        /// <summary> The recipient of this mail message. Note that in case of multiple recipients the mail message is forked and each copy has one recipient. </summary>
        public string Recipient { get; }
        /// <summary> The Urls contained in this mail message. </summary>
        public IReadOnlyList<string> Urls { get; }
        /// <summary> The threats of this mail message. </summary>
        public IReadOnlyList<string> Threats { get; }
        /// <summary> The p1 sender&apos;s email address. </summary>
        public string P1Sender { get; }
        /// <summary> The p1 sender&apos;s display name. </summary>
        public string P1SenderDisplayName { get; }
        /// <summary> The p1 sender&apos;s domain. </summary>
        public string P1SenderDomain { get; }
        /// <summary> The sender&apos;s IP address. </summary>
        public string SenderIP { get; }
        /// <summary> The p2 sender&apos;s email address. </summary>
        public string P2Sender { get; }
        /// <summary> The p2 sender&apos;s display name. </summary>
        public string P2SenderDisplayName { get; }
        /// <summary> The p2 sender&apos;s domain. </summary>
        public string P2SenderDomain { get; }
        /// <summary> The receive date of this message. </summary>
        public DateTimeOffset? ReceiveDate { get; }
        /// <summary> The network message id of this mail message. </summary>
        public Guid? NetworkMessageId { get; }
        /// <summary> The internet message id of this mail message. </summary>
        public string InternetMessageId { get; }
        /// <summary> The subject of this mail message. </summary>
        public string Subject { get; }
        /// <summary> The language of this mail message. </summary>
        public string Language { get; }
        /// <summary> The threat detection methods. </summary>
        public IReadOnlyList<string> ThreatDetectionMethods { get; }
        /// <summary> The bodyFingerprintBin1. </summary>
        public int? BodyFingerprintBin1 { get; }
        /// <summary> The bodyFingerprintBin2. </summary>
        public int? BodyFingerprintBin2 { get; }
        /// <summary> The bodyFingerprintBin3. </summary>
        public int? BodyFingerprintBin3 { get; }
        /// <summary> The bodyFingerprintBin4. </summary>
        public int? BodyFingerprintBin4 { get; }
        /// <summary> The bodyFingerprintBin5. </summary>
        public int? BodyFingerprintBin5 { get; }
        /// <summary> The directionality of this mail message. </summary>
        public AntispamMailDirection? AntispamDirection { get; }
        /// <summary> The delivery action of this mail message like Delivered, Blocked, Replaced etc. </summary>
        public DeliveryAction? DeliveryAction { get; }
        /// <summary> The delivery location of this mail message like Inbox, JunkFolder etc. </summary>
        public DeliveryLocation? DeliveryLocation { get; }
    }
}

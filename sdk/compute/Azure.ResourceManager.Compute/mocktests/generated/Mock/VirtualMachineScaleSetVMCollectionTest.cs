// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Compute;
using Azure.ResourceManager.Compute.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Compute.Tests.Mock
{
    /// <summary> Test for VirtualMachineScaleSetVm. </summary>
    public partial class VirtualMachineScaleSetVmCollectionMockTests : MockTestBase
    {
        public VirtualMachineScaleSetVmCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get VM scale set VM with UserData
            string instanceId = "0";
            Compute.Models.InstanceViewTypes? expand = null;

            var virtualMachineScaleSetId = Compute.VirtualMachineScaleSet.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "{vmss-name}");
            var collection = GetArmClient().GetVirtualMachineScaleSet(virtualMachineScaleSetId).GetVirtualMachineScaleSetVms();
            await collection.GetAsync(instanceId, expand);
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.AppService;
using Azure.ResourceManager.AppService.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.AppService.Tests.Mock
{
    /// <summary> Test for AppServicePlan. </summary>
    public partial class AppServicePlanMockTests : MockTestBase
    {
        public AppServicePlanMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get App Service plan
            var appServicePlanId = AppService.AppServicePlan.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg123", "testsf6141");
            var appServicePlan = GetArmClient().GetAppServicePlan(appServicePlanId);

            await appServicePlan.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: Delete App Service plan
            var appServicePlanId = AppService.AppServicePlan.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg123", "testsf6141");
            var appServicePlan = GetArmClient().GetAppServicePlan(appServicePlanId);

            await appServicePlan.DeleteAsync(true);
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: Patch Service plan
            var appServicePlanId = AppService.AppServicePlan.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg123", "testsf6141");
            var appServicePlan = GetArmClient().GetAppServicePlan(appServicePlanId);
            AppService.Models.AppServicePlanPatchOptions appServicePlan2 = new AppService.Models.AppServicePlanPatchOptions()
            {
                Kind = "app",
            };

            await appServicePlan.UpdateAsync(appServicePlan2);
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Network;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Network.Tests.Mock
{
    /// <summary> Test for VirtualNetworkGatewayNatRule. </summary>
    public partial class VirtualNetworkGatewayNatRuleMockTests : MockTestBase
    {
        public VirtualNetworkGatewayNatRuleMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: VirtualNetworkGatewayNatRuleGet
            var virtualNetworkGatewayNatRuleId = Network.VirtualNetworkGatewayNatRule.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "gateway1", "natRule1");
            var virtualNetworkGatewayNatRule = GetArmClient().GetVirtualNetworkGatewayNatRule(virtualNetworkGatewayNatRuleId);

            await virtualNetworkGatewayNatRule.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: VirtualNetworkGatewayNatRuleDelete
            var virtualNetworkGatewayNatRuleId = Network.VirtualNetworkGatewayNatRule.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "gateway1", "natRule1");
            var virtualNetworkGatewayNatRule = GetArmClient().GetVirtualNetworkGatewayNatRule(virtualNetworkGatewayNatRuleId);

            await virtualNetworkGatewayNatRule.DeleteAsync();
        }
    }
}

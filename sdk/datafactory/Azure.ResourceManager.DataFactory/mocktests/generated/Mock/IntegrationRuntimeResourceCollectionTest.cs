// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.DataFactory;
using Azure.ResourceManager.DataFactory.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.DataFactory.Tests.Mock
{
    /// <summary> Test for IntegrationRuntimeResource. </summary>
    public partial class IntegrationRuntimeResourceCollectionMockTests : MockTestBase
    {
        public IntegrationRuntimeResourceCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: IntegrationRuntimes_Create
            string integrationRuntimeName = "exampleIntegrationRuntime";
            DataFactory.IntegrationRuntimeResourceData integrationRuntime = new DataFactory.IntegrationRuntimeResourceData(properties: new DataFactory.Models.SelfHostedIntegrationRuntime()
            {
                Type = new DataFactory.Models.IntegrationRuntimeType("SelfHosted"),
                Description = "A selfhosted integration runtime",
            });
            string ifMatch = null;

            var factoryId = DataFactory.Factory.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "exampleResourceGroup", "exampleFactoryName");
            var collection = GetArmClient().GetFactory(factoryId).GetIntegrationRuntimeResources();
            await collection.CreateOrUpdateAsync(true, integrationRuntimeName, integrationRuntime, ifMatch);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: IntegrationRuntimes_Get
            string integrationRuntimeName = "exampleIntegrationRuntime";
            string ifNoneMatch = null;

            var factoryId = DataFactory.Factory.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "exampleResourceGroup", "exampleFactoryName");
            var collection = GetArmClient().GetFactory(factoryId).GetIntegrationRuntimeResources();
            await collection.GetAsync(integrationRuntimeName, ifNoneMatch);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: IntegrationRuntimes_ListByFactory

            var factoryId = DataFactory.Factory.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "exampleResourceGroup", "exampleFactoryName");
            var collection = GetArmClient().GetFactory(factoryId).GetIntegrationRuntimeResources();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

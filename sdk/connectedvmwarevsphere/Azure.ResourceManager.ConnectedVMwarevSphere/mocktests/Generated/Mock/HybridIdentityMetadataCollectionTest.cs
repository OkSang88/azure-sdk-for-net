// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.ConnectedVMwarevSphere;
using Azure.ResourceManager.ConnectedVMwarevSphere.Models;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.ConnectedVMwarevSphere.Tests.Mock
{
    /// <summary> Test for HybridIdentityMetadata. </summary>
    public partial class HybridIdentityMetadataCollectionMockTests : MockTestBase
    {
        public HybridIdentityMetadataCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync()
        {
            // Example: CreateHybridIdentityMetadata
            var collection = GetArmClient().GetVirtualMachine(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testrg/providers/Microsoft.ConnectedVMwarevSphere/virtualMachines/ContosoVm")).GetHybridIdentityMetadatas();
            string metadataName = "default";
            ConnectedVMwarevSphere.HybridIdentityMetadataData body = new ConnectedVMwarevSphere.HybridIdentityMetadataData()
            {
                VmId = "f8b82dff-38ef-4220-99ef-d3a3f86ddc6c",
                PublicKey = "8ec7d60c-9700-40b1-8e6e-e5b2f6f477f2",
            };

            await collection.CreateOrUpdateAsync(metadataName, body);
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: GetHybridIdentityMetadata
            var collection = GetArmClient().GetVirtualMachine(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testrg/providers/Microsoft.ConnectedVMwarevSphere/virtualMachines/ContosoVm")).GetHybridIdentityMetadatas();
            string metadataName = "default";

            await collection.GetAsync(metadataName);
        }

        [RecordedTest]
        public void GetAllAsync()
        {
            // Example: HybridIdentityMetadataListByVm
            var collection = GetArmClient().GetVirtualMachine(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testrg/providers/Microsoft.ConnectedVMwarevSphere/virtualMachines/ContosoVm")).GetHybridIdentityMetadatas();

            collection.GetAllAsync();
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;

namespace Azure.ResourceManager.RecoveryServicesSiteRecovery
{
    public partial class Sample_LogicalNetworkResource
    {
        // Gets a logical network with specified server id and logical network name.
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetsALogicalNetworkWithSpecifiedServerIdAndLogicalNetworkName()
        {
            // Generated from example definition: specification/recoveryservicessiterecovery/resource-manager/Microsoft.RecoveryServices/stable/2022-08-01/examples/ReplicationLogicalNetworks_Get.json
            // this example is just showing the usage of "ReplicationLogicalNetworks_Get" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this LogicalNetworkResource created on azure
            // for more information of creating LogicalNetworkResource, please refer to the document of LogicalNetworkResource
            string subscriptionId = "c183865e-6077-46f2-a3b1-deb0f4f4650a";
            string resourceGroupName = "resourceGroupPS1";
            string resourceName = "vault1";
            string fabricName = "cloud1";
            string logicalNetworkName = "87ab394f-165f-4aa9-bd84-b018500b4509";
            ResourceIdentifier logicalNetworkResourceId = LogicalNetworkResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, resourceName, fabricName, logicalNetworkName);
            LogicalNetworkResource logicalNetwork = client.GetLogicalNetworkResource(logicalNetworkResourceId);

            // invoke the operation
            LogicalNetworkResource result = await logicalNetwork.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            LogicalNetworkData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}

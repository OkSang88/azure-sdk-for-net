// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Network;
using Azure.ResourceManager.Network.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Network.Tests.Mock
{
    /// <summary> Test for ExpressRouteCircuit. </summary>
    public partial class ExpressRouteCircuitMockTests : MockTestBase
    {
        public ExpressRouteCircuitMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get ExpressRouteCircuit
            var expressRouteCircuitId = Network.ExpressRouteCircuit.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "circuitName");
            var expressRouteCircuit = GetArmClient().GetExpressRouteCircuit(expressRouteCircuitId);

            await expressRouteCircuit.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: Delete ExpressRouteCircuit
            var expressRouteCircuitId = Network.ExpressRouteCircuit.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "circuitName");
            var expressRouteCircuit = GetArmClient().GetExpressRouteCircuit(expressRouteCircuitId);

            await expressRouteCircuit.DeleteAsync();
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: Update Express Route Circuit Tags
            var expressRouteCircuitId = Network.ExpressRouteCircuit.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ertest", "er1");
            var expressRouteCircuit = GetArmClient().GetExpressRouteCircuit(expressRouteCircuitId);
            Network.Models.TagsObject parameters = new Network.Models.TagsObject();

            await expressRouteCircuit.UpdateAsync(parameters);
        }

        [RecordedTest]
        public async Task GetStats()
        {
            // Example: Get ExpressRoute Circuit Traffic Stats
            var expressRouteCircuitId = Network.ExpressRouteCircuit.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "circuitName");
            var expressRouteCircuit = GetArmClient().GetExpressRouteCircuit(expressRouteCircuitId);

            await expressRouteCircuit.GetStatsAsync();
        }
    }
}

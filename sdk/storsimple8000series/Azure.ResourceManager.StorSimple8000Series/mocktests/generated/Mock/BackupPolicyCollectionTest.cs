// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;
using StorSimple8000SeriesManagementClient;

namespace StorSimple8000SeriesManagementClient.Tests.Mock
{
    /// <summary> Test for BackupPolicy. </summary>
    public partial class BackupPolicyCollectionMockTests : MockTestBase
    {
        public BackupPolicyCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: BackupPoliciesCreateOrUpdate
            string backupPolicyName = "BkUpPolicy01ForSDKTest";
            StorSimple8000SeriesManagementClient.BackupPolicyData parameters = new StorSimple8000SeriesManagementClient.BackupPolicyData(volumeIds: new List<string>()
{
"/subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.StorSimple/managers/ManagerForSDKTest1/devices/Device05ForSDKTest/volumeContainers/volumeContainerForSDKTest/volumes/Clonedvolume1","/subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.StorSimple/managers/ManagerForSDKTest1/devices/Device05ForSDKTest/volumeContainers/volumeContainerForSDKTest/volumes/volume1",})
            {
                Kind = "Series8000",
            };

            var deviceId = StorSimple8000SeriesManagementClient.Device.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ResourceGroupForSDKTest", "ManagerForSDKTest1", "Device05ForSDKTest");
            var collection = GetArmClient().GetDevice(deviceId).GetBackupPolicies();
            await collection.CreateOrUpdateAsync(true, backupPolicyName, parameters);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: BackupPoliciesGet
            string backupPolicyName = "BkUpPolicy01ForSDKTest";

            var deviceId = StorSimple8000SeriesManagementClient.Device.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ResourceGroupForSDKTest", "ManagerForSDKTest1", "Device05ForSDKTest");
            var collection = GetArmClient().GetDevice(deviceId).GetBackupPolicies();
            await collection.GetAsync(backupPolicyName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: BackupPoliciesListByDevice

            var deviceId = StorSimple8000SeriesManagementClient.Device.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ResourceGroupForSDKTest", "ManagerForSDKTest1", "Device05ForSDKTest");
            var collection = GetArmClient().GetDevice(deviceId).GetBackupPolicies();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;
using SecurityInsights.Models;

namespace SecurityInsights
{
    /// <summary> A class representing the SourceControl data model. </summary>
    public partial class SourceControlData : ResourceWithEtag
    {
        /// <summary> Initializes a new instance of SourceControlData. </summary>
        public SourceControlData()
        {
            ContentTypes = new ChangeTrackingList<Models.ContentType>();
        }

        /// <summary> Initializes a new instance of SourceControlData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="type"> The type. </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="etag"> Etag of the azure resource. </param>
        /// <param name="idPropertiesId"> The id (a Guid) of the source control. </param>
        /// <param name="displayName"> The display name of the source control. </param>
        /// <param name="description"> A description of the source control. </param>
        /// <param name="repoType"> The repository type of the source control. </param>
        /// <param name="contentTypes"> Array of source control content types. </param>
        /// <param name="repository"> Repository metadata. </param>
        internal SourceControlData(ResourceIdentifier id, string name, ResourceType type, SystemData systemData, string etag, string idPropertiesId, string displayName, string description, RepoType? repoType, IList<Models.ContentType> contentTypes, Repository repository) : base(id, name, type, systemData, etag)
        {
            IdPropertiesId = idPropertiesId;
            DisplayName = displayName;
            Description = description;
            RepoType = repoType;
            ContentTypes = contentTypes;
            Repository = repository;
        }

        /// <summary> The id (a Guid) of the source control. </summary>
        public string IdPropertiesId { get; set; }
        /// <summary> The display name of the source control. </summary>
        public string DisplayName { get; set; }
        /// <summary> A description of the source control. </summary>
        public string Description { get; set; }
        /// <summary> The repository type of the source control. </summary>
        public RepoType? RepoType { get; set; }
        /// <summary> Array of source control content types. </summary>
        public IList<Models.ContentType> ContentTypes { get; }
        /// <summary> Repository metadata. </summary>
        public Repository Repository { get; set; }
    }
}

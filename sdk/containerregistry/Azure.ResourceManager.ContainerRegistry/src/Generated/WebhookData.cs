// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.ContainerRegistry.Models;

namespace Azure.ResourceManager.ContainerRegistry
{
    /// <summary> A class representing the Webhook data model. </summary>
    public partial class WebhookData : Resource
    {
        /// <summary> Initializes a new instance of WebhookData. </summary>
        /// <param name="location"> The location. </param>
        public WebhookData(AzureLocation location) : base(location)
        {
            Actions = new ChangeTrackingList<WebhookAction>();
        }

        /// <summary> Initializes a new instance of WebhookData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="type"> The type. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="systemData"> Metadata pertaining to creation and last modification of the resource. </param>
        /// <param name="status"> The status of the webhook at the time the operation was called. </param>
        /// <param name="scope"> The scope of repositories where the event can be triggered. For example, &apos;foo:*&apos; means events for all tags under repository &apos;foo&apos;. &apos;foo:bar&apos; means events for &apos;foo:bar&apos; only. &apos;foo&apos; is equivalent to &apos;foo:latest&apos;. Empty means all events. </param>
        /// <param name="actions"> The list of actions that trigger the webhook to post notifications. </param>
        /// <param name="provisioningState"> The provisioning state of the webhook at the time the operation was called. </param>
        internal WebhookData(ResourceIdentifier id, string name, ResourceType type, IDictionary<string, string> tags, AzureLocation location, SystemData systemData, WebhookStatus? status, string scope, IList<WebhookAction> actions, ProvisioningState? provisioningState) : base(id, name, type, tags, location, systemData)
        {
            Status = status;
            Scope = scope;
            Actions = actions;
            ProvisioningState = provisioningState;
        }

        /// <summary> The status of the webhook at the time the operation was called. </summary>
        public WebhookStatus? Status { get; set; }
        /// <summary> The scope of repositories where the event can be triggered. For example, &apos;foo:*&apos; means events for all tags under repository &apos;foo&apos;. &apos;foo:bar&apos; means events for &apos;foo:bar&apos; only. &apos;foo&apos; is equivalent to &apos;foo:latest&apos;. Empty means all events. </summary>
        public string Scope { get; set; }
        /// <summary> The list of actions that trigger the webhook to post notifications. </summary>
        public IList<WebhookAction> Actions { get; }
        /// <summary> The provisioning state of the webhook at the time the operation was called. </summary>
        public ProvisioningState? ProvisioningState { get; }
    }
}

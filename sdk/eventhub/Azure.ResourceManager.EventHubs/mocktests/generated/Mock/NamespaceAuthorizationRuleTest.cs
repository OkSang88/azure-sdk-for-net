// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.EventHubs;
using Azure.ResourceManager.EventHubs.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.EventHubs.Tests.Mock
{
    /// <summary> Test for AuthorizationRule. </summary>
    public partial class NamespaceAuthorizationRuleMockTests : MockTestBase
    {
        public NamespaceAuthorizationRuleMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: NameSpaceAuthorizationRuleGet
            var namespaceAuthorizationRuleId = EventHubs.NamespaceAuthorizationRule.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ArunMonocle", "sdk-Namespace-2702", "sdk-Authrules-1746");
            var namespaceAuthorizationRule = GetArmClient().GetNamespaceAuthorizationRule(namespaceAuthorizationRuleId);

            await namespaceAuthorizationRule.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: NameSpaceAuthorizationRuleDelete
            var namespaceAuthorizationRuleId = EventHubs.NamespaceAuthorizationRule.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ArunMonocle", "sdk-Namespace-8980", "sdk-Authrules-8929");
            var namespaceAuthorizationRule = GetArmClient().GetNamespaceAuthorizationRule(namespaceAuthorizationRuleId);

            await namespaceAuthorizationRule.DeleteAsync();
        }

        [RecordedTest]
        public async Task GetKeys()
        {
            // Example: NameSpaceAuthorizationRuleListKey
            var namespaceAuthorizationRuleId = EventHubs.NamespaceAuthorizationRule.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ArunMonocle", "sdk-Namespace-2702", "sdk-Authrules-1746");
            var namespaceAuthorizationRule = GetArmClient().GetNamespaceAuthorizationRule(namespaceAuthorizationRuleId);

            await namespaceAuthorizationRule.GetKeysAsync();
        }

        [RecordedTest]
        public async Task RegenerateKeys()
        {
            // Example: NameSpaceAuthorizationRuleRegenerateKey
            var namespaceAuthorizationRuleId = EventHubs.NamespaceAuthorizationRule.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ArunMonocle", "sdk-Namespace-8980", "sdk-Authrules-8929");
            var namespaceAuthorizationRule = GetArmClient().GetNamespaceAuthorizationRule(namespaceAuthorizationRuleId);
            EventHubs.Models.RegenerateAccessKeyOptions parameters = new EventHubs.Models.RegenerateAccessKeyOptions(keyType: new EventHubs.Models.KeyType("PrimaryKey"));

            await namespaceAuthorizationRule.RegenerateKeysAsync(parameters);
        }
    }
}

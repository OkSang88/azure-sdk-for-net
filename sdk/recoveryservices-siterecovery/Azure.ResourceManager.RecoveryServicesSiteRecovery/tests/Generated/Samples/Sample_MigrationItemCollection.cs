// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.RecoveryServicesSiteRecovery.Models;

namespace Azure.ResourceManager.RecoveryServicesSiteRecovery
{
    public partial class Sample_MigrationItemCollection
    {
        // Gets the list of migration items in the protection container.
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetAll_GetsTheListOfMigrationItemsInTheProtectionContainer()
        {
            // Generated from example definition: specification/recoveryservicessiterecovery/resource-manager/Microsoft.RecoveryServices/stable/2022-08-01/examples/ReplicationMigrationItems_ListByReplicationProtectionContainers.json
            // this example is just showing the usage of "ReplicationMigrationItems_ListByReplicationProtectionContainers" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this ProtectionContainerResource created on azure
            // for more information of creating ProtectionContainerResource, please refer to the document of ProtectionContainerResource
            string subscriptionId = "cb53d0c3-bd59-4721-89bc-06916a9147ef";
            string resourceGroupName = "resourcegroup1";
            string resourceName = "migrationvault";
            string fabricName = "vmwarefabric1";
            string protectionContainerName = "vmwareContainer1";
            ResourceIdentifier protectionContainerResourceId = ProtectionContainerResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, resourceName, fabricName, protectionContainerName);
            ProtectionContainerResource protectionContainer = client.GetProtectionContainerResource(protectionContainerResourceId);

            // get the collection of this MigrationItemResource
            MigrationItemCollection collection = protectionContainer.GetMigrationItems();

            // invoke the operation and iterate over the result
            await foreach (MigrationItemResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                MigrationItemData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine($"Succeeded");
        }

        // Gets the details of a migration item.
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetsTheDetailsOfAMigrationItem()
        {
            // Generated from example definition: specification/recoveryservicessiterecovery/resource-manager/Microsoft.RecoveryServices/stable/2022-08-01/examples/ReplicationMigrationItems_Get.json
            // this example is just showing the usage of "ReplicationMigrationItems_Get" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this ProtectionContainerResource created on azure
            // for more information of creating ProtectionContainerResource, please refer to the document of ProtectionContainerResource
            string subscriptionId = "cb53d0c3-bd59-4721-89bc-06916a9147ef";
            string resourceGroupName = "resourcegroup1";
            string resourceName = "migrationvault";
            string fabricName = "vmwarefabric1";
            string protectionContainerName = "vmwareContainer1";
            ResourceIdentifier protectionContainerResourceId = ProtectionContainerResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, resourceName, fabricName, protectionContainerName);
            ProtectionContainerResource protectionContainer = client.GetProtectionContainerResource(protectionContainerResourceId);

            // get the collection of this MigrationItemResource
            MigrationItemCollection collection = protectionContainer.GetMigrationItems();

            // invoke the operation
            string migrationItemName = "virtualmachine1";
            MigrationItemResource result = await collection.GetAsync(migrationItemName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            MigrationItemData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Gets the details of a migration item.
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Exists_GetsTheDetailsOfAMigrationItem()
        {
            // Generated from example definition: specification/recoveryservicessiterecovery/resource-manager/Microsoft.RecoveryServices/stable/2022-08-01/examples/ReplicationMigrationItems_Get.json
            // this example is just showing the usage of "ReplicationMigrationItems_Get" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this ProtectionContainerResource created on azure
            // for more information of creating ProtectionContainerResource, please refer to the document of ProtectionContainerResource
            string subscriptionId = "cb53d0c3-bd59-4721-89bc-06916a9147ef";
            string resourceGroupName = "resourcegroup1";
            string resourceName = "migrationvault";
            string fabricName = "vmwarefabric1";
            string protectionContainerName = "vmwareContainer1";
            ResourceIdentifier protectionContainerResourceId = ProtectionContainerResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, resourceName, fabricName, protectionContainerName);
            ProtectionContainerResource protectionContainer = client.GetProtectionContainerResource(protectionContainerResourceId);

            // get the collection of this MigrationItemResource
            MigrationItemCollection collection = protectionContainer.GetMigrationItems();

            // invoke the operation
            string migrationItemName = "virtualmachine1";
            bool result = await collection.ExistsAsync(migrationItemName);

            Console.WriteLine($"Succeeded: {result}");
        }

        // Enables migration.
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task CreateOrUpdate_EnablesMigration()
        {
            // Generated from example definition: specification/recoveryservicessiterecovery/resource-manager/Microsoft.RecoveryServices/stable/2022-08-01/examples/ReplicationMigrationItems_Create.json
            // this example is just showing the usage of "ReplicationMigrationItems_Create" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this ProtectionContainerResource created on azure
            // for more information of creating ProtectionContainerResource, please refer to the document of ProtectionContainerResource
            string subscriptionId = "cb53d0c3-bd59-4721-89bc-06916a9147ef";
            string resourceGroupName = "resourcegroup1";
            string resourceName = "migrationvault";
            string fabricName = "vmwarefabric1";
            string protectionContainerName = "vmwareContainer1";
            ResourceIdentifier protectionContainerResourceId = ProtectionContainerResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, resourceName, fabricName, protectionContainerName);
            ProtectionContainerResource protectionContainer = client.GetProtectionContainerResource(protectionContainerResourceId);

            // get the collection of this MigrationItemResource
            MigrationItemCollection collection = protectionContainer.GetMigrationItems();

            // invoke the operation
            string migrationItemName = "virtualmachine1";
            MigrationItemCreateOrUpdateContent content = new MigrationItemCreateOrUpdateContent(new EnableMigrationInputProperties("/Subscriptions/cb53d0c3-bd59-4721-89bc-06916a9147ef/resourceGroups/resourcegroup1/providers/Microsoft.RecoveryServices/vaults/migrationvault/replicationPolicies/vmwarepolicy1", new EnableMigrationProviderSpecificInput()
            {
                InstanceType = "VMwareCbt",
            }));
            ArmOperation<MigrationItemResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, migrationItemName, content);
            MigrationItemResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            MigrationItemData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}

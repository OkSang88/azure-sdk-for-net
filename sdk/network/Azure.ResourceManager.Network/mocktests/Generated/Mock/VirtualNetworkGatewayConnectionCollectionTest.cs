// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Network;
using Azure.ResourceManager.Network.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Network.Tests.Mock
{
    /// <summary> Test for VirtualNetworkGatewayConnection. </summary>
    public partial class VirtualNetworkGatewayConnectionCollectionMockTests : MockTestBase
    {
        public VirtualNetworkGatewayConnectionCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: CreateVirtualNetworkGatewayConnection_S2S
            string virtualNetworkGatewayConnectionName = "connS2S";
            Network.VirtualNetworkGatewayConnectionData parameters = new Network.VirtualNetworkGatewayConnectionData(virtualNetworkGateway1: new Network.VirtualNetworkGatewayData()
            {
                GatewayType = new Network.Models.VirtualNetworkGatewayType("Vpn"),
                VpnType = new Network.Models.VpnType("RouteBased"),
                EnableBgp = false,
                Active = false,
                Sku = new Network.Models.VirtualNetworkGatewaySku()
                {
                    Name = new Network.Models.VirtualNetworkGatewaySkuName("VpnGw1"),
                    Tier = new Network.Models.VirtualNetworkGatewaySkuTier("VpnGw1"),
                },
                BgpSettings = new Network.Models.BgpSettings()
                {
                    Asn = 65514,
                    BgpPeeringAddress = "10.0.1.30",
                    PeerWeight = 0,
                },
                Id = "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/vpngw",
                Location = "centralus",
            }, connectionType: new Network.Models.VirtualNetworkGatewayConnectionType("IPsec"))
            {
                LocalNetworkGateway2 = new Network.LocalNetworkGatewayData()
                {
                    LocalNetworkAddressSpace = new Network.Models.AddressSpace(),
                    GatewayIpAddress = "x.x.x.x",
                    Id = "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/localNetworkGateways/localgw",
                    Location = "centralus",
                },
                ConnectionProtocol = new Network.Models.VirtualNetworkGatewayConnectionProtocol("IKEv2"),
                RoutingWeight = 0,
                DpdTimeoutSeconds = 30,
                ConnectionMode = new Network.Models.VirtualNetworkGatewayConnectionMode("Default"),
                SharedKey = "Abc123",
                EnableBgp = false,
                UsePolicyBasedTrafficSelectors = false,
                Location = "centralus",
            };

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1")).GetVirtualNetworkGatewayConnections();
            await collection.CreateOrUpdateAsync(true, virtualNetworkGatewayConnectionName, parameters);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: GetVirtualNetworkGatewayConnection
            string virtualNetworkGatewayConnectionName = "connS2S";

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1")).GetVirtualNetworkGatewayConnections();
            await collection.GetAsync(virtualNetworkGatewayConnectionName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: ListVirtualNetworkGatewayConnectionsinResourceGroup

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1")).GetVirtualNetworkGatewayConnections();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

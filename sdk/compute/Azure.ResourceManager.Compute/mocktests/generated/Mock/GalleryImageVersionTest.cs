// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Compute;
using Azure.ResourceManager.Compute.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Compute.Tests.Mock
{
    /// <summary> Test for GalleryImageVersion. </summary>
    public partial class GalleryImageVersionMockTests : MockTestBase
    {
        public GalleryImageVersionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get a gallery image version with replication status.
            var galleryImageVersionId = Compute.GalleryImageVersion.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myGalleryName", "myGalleryImageName", "1.0.0");
            var galleryImageVersion = GetArmClient().GetGalleryImageVersion(galleryImageVersionId);
            Compute.Models.ReplicationStatusTypes? expand = new Compute.Models.ReplicationStatusTypes("ReplicationStatus");

            await galleryImageVersion.GetAsync(expand);
        }

        [RecordedTest]
        public async Task Get2()
        {
            // Example: Get a gallery image version with snapshots as a source.
            var galleryImageVersionId = Compute.GalleryImageVersion.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myGalleryName", "myGalleryImageName", "1.0.0");
            var galleryImageVersion = GetArmClient().GetGalleryImageVersion(galleryImageVersionId);
            Compute.Models.ReplicationStatusTypes? expand = null;

            await galleryImageVersion.GetAsync(expand);
        }

        [RecordedTest]
        public async Task Get3()
        {
            // Example: Get a gallery image version with vhd as a source.
            var galleryImageVersionId = Compute.GalleryImageVersion.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myGalleryName", "myGalleryImageName", "1.0.0");
            var galleryImageVersion = GetArmClient().GetGalleryImageVersion(galleryImageVersionId);
            Compute.Models.ReplicationStatusTypes? expand = null;

            await galleryImageVersion.GetAsync(expand);
        }

        [RecordedTest]
        public async Task Get4()
        {
            // Example: Get a gallery image version.
            var galleryImageVersionId = Compute.GalleryImageVersion.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myGalleryName", "myGalleryImageName", "1.0.0");
            var galleryImageVersion = GetArmClient().GetGalleryImageVersion(galleryImageVersionId);
            Compute.Models.ReplicationStatusTypes? expand = null;

            await galleryImageVersion.GetAsync(expand);
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: Delete a gallery image version.
            var galleryImageVersionId = Compute.GalleryImageVersion.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myGalleryName", "myGalleryImageName", "1.0.0");
            var galleryImageVersion = GetArmClient().GetGalleryImageVersion(galleryImageVersionId);

            await galleryImageVersion.DeleteAsync(true);
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: Update a simple Gallery Image Version (Managed Image as source).
            var galleryImageVersionId = Compute.GalleryImageVersion.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myGalleryName", "myGalleryImageName", "1.0.0");
            var galleryImageVersion = GetArmClient().GetGalleryImageVersion(galleryImageVersionId);
            Compute.Models.GalleryImageVersionUpdate galleryImageVersion2 = new Compute.Models.GalleryImageVersionUpdate()
            {
                PublishingProfile = new Compute.Models.GalleryImageVersionPublishingProfile(),
                StorageProfile = new Compute.Models.GalleryImageVersionStorageProfile()
                {
                    Source = new Compute.Models.GalleryArtifactVersionSource()
                    {
                        Id = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/images/{imageName}",
                    },
                },
            };

            await galleryImageVersion.UpdateAsync(true, galleryImageVersion2);
        }

        [RecordedTest]
        public async Task Update2()
        {
            // Example: Update a simple Gallery Image Version without source id.
            var galleryImageVersionId = Compute.GalleryImageVersion.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myGalleryName", "myGalleryImageName", "1.0.0");
            var galleryImageVersion = GetArmClient().GetGalleryImageVersion(galleryImageVersionId);
            Compute.Models.GalleryImageVersionUpdate galleryImageVersion2 = new Compute.Models.GalleryImageVersionUpdate()
            {
                PublishingProfile = new Compute.Models.GalleryImageVersionPublishingProfile(),
                StorageProfile = new Compute.Models.GalleryImageVersionStorageProfile(),
            };

            await galleryImageVersion.UpdateAsync(true, galleryImageVersion2);
        }
    }
}

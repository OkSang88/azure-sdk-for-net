// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.StorageMover;
using Azure.ResourceManager.StorageMover.Models;

namespace Azure.ResourceManager.StorageMover.Samples
{
    public partial class Sample_StorageMoverEndpointResource
    {
        // Endpoints_Get
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_EndpointsGet()
        {
            // Generated from example definition: specification/storagemover/resource-manager/Microsoft.StorageMover/preview/2022-07-01-preview/examples/Endpoints_Get.json
            // this example is just showing the usage of "Endpoints_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this StorageMoverEndpointResource created on azure
            // for more information of creating StorageMoverEndpointResource, please refer to the document of StorageMoverEndpointResource
            string subscriptionId = "11111111-2222-3333-4444-555555555555";
            string resourceGroupName = "examples-rg";
            string storageMoverName = "examples-storageMoverName";
            string endpointName = "examples-endpointName";
            ResourceIdentifier storageMoverEndpointResourceId = StorageMoverEndpointResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, storageMoverName, endpointName);
            StorageMoverEndpointResource storageMoverEndpoint = client.GetStorageMoverEndpointResource(storageMoverEndpointResourceId);

            // invoke the operation
            StorageMoverEndpointResource result = await storageMoverEndpoint.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            StorageMoverEndpointData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Endpoints_Update
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Update_EndpointsUpdate()
        {
            // Generated from example definition: specification/storagemover/resource-manager/Microsoft.StorageMover/preview/2022-07-01-preview/examples/Endpoints_Update.json
            // this example is just showing the usage of "Endpoints_Update" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this StorageMoverEndpointResource created on azure
            // for more information of creating StorageMoverEndpointResource, please refer to the document of StorageMoverEndpointResource
            string subscriptionId = "11111111-2222-3333-4444-555555555555";
            string resourceGroupName = "examples-rg";
            string storageMoverName = "examples-storageMoverName";
            string endpointName = "examples-endpointName";
            ResourceIdentifier storageMoverEndpointResourceId = StorageMoverEndpointResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, storageMoverName, endpointName);
            StorageMoverEndpointResource storageMoverEndpoint = client.GetStorageMoverEndpointResource(storageMoverEndpointResourceId);

            // invoke the operation
            StorageMoverEndpointPatch patch = new StorageMoverEndpointPatch()
            {
                EndpointBaseUpdateDescription = "Updated Endpoint Description",
            };
            StorageMoverEndpointResource result = await storageMoverEndpoint.UpdateAsync(patch);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            StorageMoverEndpointData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Endpoints_Delete
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Delete_EndpointsDelete()
        {
            // Generated from example definition: specification/storagemover/resource-manager/Microsoft.StorageMover/preview/2022-07-01-preview/examples/Endpoints_Delete.json
            // this example is just showing the usage of "Endpoints_Delete" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this StorageMoverEndpointResource created on azure
            // for more information of creating StorageMoverEndpointResource, please refer to the document of StorageMoverEndpointResource
            string subscriptionId = "11111111-2222-3333-4444-555555555555";
            string resourceGroupName = "examples-rg";
            string storageMoverName = "examples-storageMoverName";
            string endpointName = "examples-endpointName";
            ResourceIdentifier storageMoverEndpointResourceId = StorageMoverEndpointResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, storageMoverName, endpointName);
            StorageMoverEndpointResource storageMoverEndpoint = client.GetStorageMoverEndpointResource(storageMoverEndpointResourceId);

            // invoke the operation
            await storageMoverEndpoint.DeleteAsync(WaitUntil.Completed);

            Console.WriteLine($"Succeeded");
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Sql;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Sql.Tests.Mock
{
    /// <summary> Test for RecommendedAction. </summary>
    public partial class RecommendedActionCollectionMockTests : MockTestBase
    {
        public RecommendedActionCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get database recommended action
            string recommendedActionName = "IR_[CRM]_[DataPoints]_4821CD2F9510D98184BB";

            var serverDatabaseAdvisorId = Sql.ServerDatabaseAdvisor.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "workloadinsight-demos", "misosisvr", "IndexAdvisor_test_3", "CreateIndex");
            var collection = GetArmClient().GetServerDatabaseAdvisor(serverDatabaseAdvisorId).GetRecommendedActions();
            await collection.GetAsync(recommendedActionName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: List of database recommended actions

            var serverDatabaseAdvisorId = Sql.ServerDatabaseAdvisor.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "workloadinsight-demos", "misosisvr", "IndexAdvisor_test_3", "CreateIndex");
            var collection = GetArmClient().GetServerDatabaseAdvisor(serverDatabaseAdvisorId).GetRecommendedActions();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

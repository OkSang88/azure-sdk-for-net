// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.DataFactory;
using Azure.ResourceManager.DataFactory.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.DataFactory.Tests.Mock
{
    /// <summary> Test for IntegrationRuntimeResource. </summary>
    public partial class IntegrationRuntimeResourceMockTests : MockTestBase
    {
        public IntegrationRuntimeResourceMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: IntegrationRuntimes_Get
            var integrationRuntimeResourceId = DataFactory.IntegrationRuntimeResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "exampleResourceGroup", "exampleFactoryName", "exampleIntegrationRuntime");
            var integrationRuntimeResource = GetArmClient().GetIntegrationRuntimeResource(integrationRuntimeResourceId);
            string ifNoneMatch = null;

            await integrationRuntimeResource.GetAsync(ifNoneMatch);
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: IntegrationRuntimes_Delete
            var integrationRuntimeResourceId = DataFactory.IntegrationRuntimeResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "exampleResourceGroup", "exampleFactoryName", "exampleIntegrationRuntime");
            var integrationRuntimeResource = GetArmClient().GetIntegrationRuntimeResource(integrationRuntimeResourceId);

            await integrationRuntimeResource.DeleteAsync(true);
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: IntegrationRuntimes_Update
            var integrationRuntimeResourceId = DataFactory.IntegrationRuntimeResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "exampleResourceGroup", "exampleFactoryName", "exampleIntegrationRuntime");
            var integrationRuntimeResource = GetArmClient().GetIntegrationRuntimeResource(integrationRuntimeResourceId);
            DataFactory.Models.UpdateIntegrationRuntimeRequest updateIntegrationRuntimeRequest = new DataFactory.Models.UpdateIntegrationRuntimeRequest()
            {
                AutoUpdate = new DataFactory.Models.IntegrationRuntimeAutoUpdate("Off"),
                UpdateDelayOffset = "\"PT3H\"",
            };

            await integrationRuntimeResource.UpdateAsync(updateIntegrationRuntimeRequest);
        }

        [RecordedTest]
        public async Task GetStatus()
        {
            // Example: IntegrationRuntimes_GetStatus
            var integrationRuntimeResourceId = DataFactory.IntegrationRuntimeResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "exampleResourceGroup", "exampleFactoryName", "exampleIntegrationRuntime");
            var integrationRuntimeResource = GetArmClient().GetIntegrationRuntimeResource(integrationRuntimeResourceId);

            await integrationRuntimeResource.GetStatusAsync();
        }

        [RecordedTest]
        public async Task GetOutboundNetworkDependenciesEndpoints()
        {
            // Example: IntegrationRuntimes_OutboundNetworkDependenciesEndpoints
            var integrationRuntimeResourceId = DataFactory.IntegrationRuntimeResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "exampleResourceGroup", "exampleFactoryName", "exampleIntegrationRuntime");
            var integrationRuntimeResource = GetArmClient().GetIntegrationRuntimeResource(integrationRuntimeResourceId);

            await foreach (var _ in integrationRuntimeResource.GetOutboundNetworkDependenciesEndpointsAsync())
            {
            }
        }

        [RecordedTest]
        public async Task GetConnectionInfo()
        {
            // Example: IntegrationRuntimes_GetConnectionInfo
            var integrationRuntimeResourceId = DataFactory.IntegrationRuntimeResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "exampleResourceGroup", "exampleFactoryName", "exampleIntegrationRuntime");
            var integrationRuntimeResource = GetArmClient().GetIntegrationRuntimeResource(integrationRuntimeResourceId);

            await integrationRuntimeResource.GetConnectionInfoAsync();
        }

        [RecordedTest]
        public async Task RegenerateAuthKey()
        {
            // Example: IntegrationRuntimes_RegenerateAuthKey
            var integrationRuntimeResourceId = DataFactory.IntegrationRuntimeResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "exampleResourceGroup", "exampleFactoryName", "exampleIntegrationRuntime");
            var integrationRuntimeResource = GetArmClient().GetIntegrationRuntimeResource(integrationRuntimeResourceId);
            DataFactory.Models.IntegrationRuntimeRegenerateKeyParameters regenerateKeyParameters = new DataFactory.Models.IntegrationRuntimeRegenerateKeyParameters()
            {
                KeyName = new DataFactory.Models.IntegrationRuntimeAuthKeyName("authKey2"),
            };

            await integrationRuntimeResource.RegenerateAuthKeyAsync(regenerateKeyParameters);
        }

        [RecordedTest]
        public async Task GetAuthKeys()
        {
            // Example: IntegrationRuntimes_ListAuthKeys
            var integrationRuntimeResourceId = DataFactory.IntegrationRuntimeResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "exampleResourceGroup", "exampleFactoryName", "exampleIntegrationRuntime");
            var integrationRuntimeResource = GetArmClient().GetIntegrationRuntimeResource(integrationRuntimeResourceId);

            await integrationRuntimeResource.GetAuthKeysAsync();
        }

        [RecordedTest]
        public async Task Start()
        {
            // Example: IntegrationRuntimes_Start
            var integrationRuntimeResourceId = DataFactory.IntegrationRuntimeResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "exampleResourceGroup", "exampleFactoryName", "exampleManagedIntegrationRuntime");
            var integrationRuntimeResource = GetArmClient().GetIntegrationRuntimeResource(integrationRuntimeResourceId);

            await integrationRuntimeResource.StartAsync(true);
        }

        [RecordedTest]
        public async Task Stop()
        {
            // Example: IntegrationRuntimes_Stop
            var integrationRuntimeResourceId = DataFactory.IntegrationRuntimeResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "exampleResourceGroup", "exampleFactoryName", "exampleManagedIntegrationRuntime");
            var integrationRuntimeResource = GetArmClient().GetIntegrationRuntimeResource(integrationRuntimeResourceId);

            await integrationRuntimeResource.StopAsync(true);
        }

        [RecordedTest]
        public async Task SyncCredentials()
        {
            // Example: IntegrationRuntimes_SyncCredentials
            var integrationRuntimeResourceId = DataFactory.IntegrationRuntimeResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "exampleResourceGroup", "exampleFactoryName", "exampleIntegrationRuntime");
            var integrationRuntimeResource = GetArmClient().GetIntegrationRuntimeResource(integrationRuntimeResourceId);

            await integrationRuntimeResource.SyncCredentialsAsync();
        }

        [RecordedTest]
        public async Task GetMonitoringData()
        {
            // Example: IntegrationRuntimes_GetMonitoringData
            var integrationRuntimeResourceId = DataFactory.IntegrationRuntimeResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "exampleResourceGroup", "exampleFactoryName", "exampleIntegrationRuntime");
            var integrationRuntimeResource = GetArmClient().GetIntegrationRuntimeResource(integrationRuntimeResourceId);

            await integrationRuntimeResource.GetMonitoringDataAsync();
        }

        [RecordedTest]
        public async Task Upgrade()
        {
            // Example: IntegrationRuntimes_Upgrade
            var integrationRuntimeResourceId = DataFactory.IntegrationRuntimeResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "exampleResourceGroup", "exampleFactoryName", "exampleIntegrationRuntime");
            var integrationRuntimeResource = GetArmClient().GetIntegrationRuntimeResource(integrationRuntimeResourceId);

            await integrationRuntimeResource.UpgradeAsync();
        }

        [RecordedTest]
        public async Task RemoveLinks()
        {
            // Example: IntegrationRuntimes_Upgrade
            var integrationRuntimeResourceId = DataFactory.IntegrationRuntimeResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "exampleResourceGroup", "exampleFactoryName", "exampleIntegrationRuntime");
            var integrationRuntimeResource = GetArmClient().GetIntegrationRuntimeResource(integrationRuntimeResourceId);
            DataFactory.Models.LinkedIntegrationRuntimeRequest linkedIntegrationRuntimeRequest = new DataFactory.Models.LinkedIntegrationRuntimeRequest(linkedFactoryName: "exampleFactoryName-linked");

            await integrationRuntimeResource.RemoveLinksAsync(linkedIntegrationRuntimeRequest);
        }

        [RecordedTest]
        public async Task CreateLinkedIntegrationRuntime()
        {
            // Example: IntegrationRuntimes_CreateLinkedIntegrationRuntime
            var integrationRuntimeResourceId = DataFactory.IntegrationRuntimeResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "exampleResourceGroup", "exampleFactoryName", "exampleIntegrationRuntime");
            var integrationRuntimeResource = GetArmClient().GetIntegrationRuntimeResource(integrationRuntimeResourceId);
            DataFactory.Models.CreateLinkedIntegrationRuntimeRequest createLinkedIntegrationRuntimeRequest = new DataFactory.Models.CreateLinkedIntegrationRuntimeRequest()
            {
                Name = "bfa92911-9fb6-4fbe-8f23-beae87bc1c83",
                SubscriptionId = "061774c7-4b5a-4159-a55b-365581830283",
                DataFactoryName = "e9955d6d-56ea-4be3-841c-52a12c1a9981",
                DataFactoryLocation = "West US",
            };

            await integrationRuntimeResource.CreateLinkedIntegrationRuntimeAsync(createLinkedIntegrationRuntimeRequest);
        }

        [RecordedTest]
        public async Task RefreshIntegrationRuntimeObjectMetadata()
        {
            // Example: IntegrationRuntimeObjectMetadata_Refresh
            var integrationRuntimeResourceId = DataFactory.IntegrationRuntimeResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "exampleResourceGroup", "exampleFactoryName", "testactivityv2");
            var integrationRuntimeResource = GetArmClient().GetIntegrationRuntimeResource(integrationRuntimeResourceId);

            await integrationRuntimeResource.RefreshIntegrationRuntimeObjectMetadataAsync(true);
        }

        [RecordedTest]
        public async Task GetAllIntegrationRuntimeObjectMetadata()
        {
            // Example: IntegrationRuntimeObjectMetadata_Get
            var integrationRuntimeResourceId = DataFactory.IntegrationRuntimeResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "exampleResourceGroup", "exampleFactoryName", "testactivityv2");
            var integrationRuntimeResource = GetArmClient().GetIntegrationRuntimeResource(integrationRuntimeResourceId);
            DataFactory.Models.GetSsisObjectMetadataRequest getMetadataRequest = new DataFactory.Models.GetSsisObjectMetadataRequest()
            {
                MetadataPath = "ssisFolders",
            };

            await foreach (var _ in integrationRuntimeResource.GetAllIntegrationRuntimeObjectMetadataAsync(getMetadataRequest))
            {
            }
        }

        [RecordedTest]
        public async Task GetIntegrationRuntimeNode()
        {
            // Example: IntegrationRuntimeNodes_Get
            var integrationRuntimeResourceId = DataFactory.IntegrationRuntimeResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "exampleResourceGroup", "exampleFactoryName", "exampleIntegrationRuntime");
            var integrationRuntimeResource = GetArmClient().GetIntegrationRuntimeResource(integrationRuntimeResourceId);
            string nodeName = "Node_1";

            await integrationRuntimeResource.GetIntegrationRuntimeNodeAsync(nodeName);
        }

        [RecordedTest]
        public async Task DeleteIntegrationRuntimeNode()
        {
            // Example: IntegrationRuntimesNodes_Delete
            var integrationRuntimeResourceId = DataFactory.IntegrationRuntimeResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "exampleResourceGroup", "exampleFactoryName", "exampleIntegrationRuntime");
            var integrationRuntimeResource = GetArmClient().GetIntegrationRuntimeResource(integrationRuntimeResourceId);
            string nodeName = "Node_1";

            await integrationRuntimeResource.DeleteIntegrationRuntimeNodeAsync(nodeName);
        }

        [RecordedTest]
        public async Task UpdateIntegrationRuntimeNode()
        {
            // Example: IntegrationRuntimeNodes_Update
            var integrationRuntimeResourceId = DataFactory.IntegrationRuntimeResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "exampleResourceGroup", "exampleFactoryName", "exampleIntegrationRuntime");
            var integrationRuntimeResource = GetArmClient().GetIntegrationRuntimeResource(integrationRuntimeResourceId);
            string nodeName = "Node_1";
            DataFactory.Models.UpdateIntegrationRuntimeNodeRequest updateIntegrationRuntimeNodeRequest = new DataFactory.Models.UpdateIntegrationRuntimeNodeRequest()
            {
                ConcurrentJobsLimit = 2,
            };

            await integrationRuntimeResource.UpdateIntegrationRuntimeNodeAsync(nodeName, updateIntegrationRuntimeNodeRequest);
        }

        [RecordedTest]
        public async Task GetIpAddressIntegrationRuntimeNode()
        {
            // Example: IntegrationRuntimeNodes_GetIpAddress
            var integrationRuntimeResourceId = DataFactory.IntegrationRuntimeResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "exampleResourceGroup", "exampleFactoryName", "exampleIntegrationRuntime");
            var integrationRuntimeResource = GetArmClient().GetIntegrationRuntimeResource(integrationRuntimeResourceId);
            string nodeName = "Node_1";

            await integrationRuntimeResource.GetIpAddressIntegrationRuntimeNodeAsync(nodeName);
        }
    }
}

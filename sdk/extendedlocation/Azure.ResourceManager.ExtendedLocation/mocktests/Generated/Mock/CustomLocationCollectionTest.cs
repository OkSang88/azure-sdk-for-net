// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Core.TestFramework;
using Azure.ResourceManager.ExtendedLocation;
using Azure.ResourceManager.ExtendedLocation.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.ExtendedLocation.Tests.Mock
{
    /// <summary> Test for CustomLocation. </summary>
    public partial class CustomLocationCollectionMockTests : MockTestBase
    {
        public CustomLocationCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: Create/Update Custom Location
            string resourceName = "customLocation01";
            ExtendedLocation.CustomLocationData parameters = new ExtendedLocation.CustomLocationData(location: "West US")
            {
                Identity = new ExtendedLocation.Models.LocationIdentity()
                {
                    Type = new ExtendedLocation.Models.ResourceIdentityType("SystemAssigned"),
                },
                Authentication = new ExtendedLocation.Models.CustomLocationPropertiesAuthentication()
                {
                    Type = "KubeConfig",
                    Value = "<base64 KubeConfig>",
                },
                DisplayName = "customLocationLocation01",
                HostResourceId = "/subscriptions/11111111-2222-3333-4444-555555555555/resourceGroups/testresourcegroup/providers/Microsoft.ContainerService/managedClusters/cluster01",
                Namespace = "namespace01",
            };

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testresourcegroup")).GetCustomLocations();
            await collection.CreateOrUpdateAsync(true, resourceName, parameters);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get Custom Location
            string resourceName = "customLocation01";

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testresourcegroup")).GetCustomLocations();
            await collection.GetAsync(resourceName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: List Custom Locations by resource group

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testresourcegroup")).GetCustomLocations();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.Sql;
using Azure.ResourceManager.Sql.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Sql.Tests.Mock
{
    /// <summary> Test for VirtualNetworkRule. </summary>
    public partial class VirtualNetworkRuleCollectionMockTests : MockTestBase
    {
        public VirtualNetworkRuleCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync()
        {
            // Example: Create or update a virtual network rule
            var collection = GetArmClient().GetSqlServer(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/Default/providers/Microsoft.Sql/servers/vnet-test-svr")).GetVirtualNetworkRules();
            string virtualNetworkRuleName = "vnet-firewall-rule";
            Sql.VirtualNetworkRuleData parameters = new Sql.VirtualNetworkRuleData()
            {
                VirtualNetworkSubnetId = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default/providers/Microsoft.Network/virtualNetworks/testvnet/subnets/testsubnet",
                IgnoreMissingVnetServiceEndpoint = false,
            };

            await collection.CreateOrUpdateAsync(virtualNetworkRuleName, parameters);
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Gets a virtual network rule
            var collection = GetArmClient().GetSqlServer(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/Default/providers/Microsoft.Sql/servers/vnet-test-svr")).GetVirtualNetworkRules();
            string virtualNetworkRuleName = "vnet-firewall-rule";

            await collection.GetAsync(virtualNetworkRuleName);
        }

        [RecordedTest]
        public void GetAllAsync()
        {
            // Example: List virtual network rules
            var collection = GetArmClient().GetSqlServer(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/Default/providers/Microsoft.Sql/servers/vnet-test-svr")).GetVirtualNetworkRules();

            collection.GetAllAsync();
        }
    }
}

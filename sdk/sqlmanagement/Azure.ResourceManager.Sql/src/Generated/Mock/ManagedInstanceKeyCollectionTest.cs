// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.Sql;
using Azure.ResourceManager.Sql.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Sql.Tests.Mock
{
    /// <summary> Test for ManagedInstanceKey. </summary>
    public partial class ManagedInstanceKeyCollectionMockTests : MockTestBase
    {
        public ManagedInstanceKeyCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync()
        {
            // Example: Creates or updates a managed instance key
            var collection = GetArmClient().GetManagedInstance(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/sqlcrudtest-7398/providers/Microsoft.Sql/managedInstances/sqlcrudtest-4645")).GetManagedInstanceKeys();
            string keyName = "someVault_someKey_01234567890123456789012345678901";
            Sql.ManagedInstanceKeyData parameters = new Sql.ManagedInstanceKeyData()
            {
                ServerKeyType = new Sql.Models.ServerKeyType("AzureKeyVault"),
                Uri = "https://someVault.vault.azure.net/keys/someKey/01234567890123456789012345678901",
            };

            await collection.CreateOrUpdateAsync(keyName, parameters);
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get the managed instance key
            var collection = GetArmClient().GetManagedInstance(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/sqlcrudtest-7398/providers/Microsoft.Sql/managedInstances/sqlcrudtest-4645")).GetManagedInstanceKeys();
            string keyName = "someVault_someKey_01234567890123456789012345678901";

            await collection.GetAsync(keyName);
        }

        [RecordedTest]
        public void GetAllAsync()
        {
            // Example: List the keys for a managed instance.
            var collection = GetArmClient().GetManagedInstance(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/sqlcrudtest-7398/providers/Microsoft.Sql/managedInstances/sqlcrudtest-4645")).GetManagedInstanceKeys();
            string filter = null;

            collection.GetAllAsync(filter);
        }
    }
}

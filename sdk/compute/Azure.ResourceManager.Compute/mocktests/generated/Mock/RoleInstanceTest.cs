// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.Compute.Models;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Compute.Tests.Mock
{
    /// <summary> Test for RoleInstance. </summary>
    public partial class RoleInstanceMockTests : MockTestBase
    {
        public RoleInstanceMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get Cloud Service Role Instance
            var roleInstance = GetArmClient().GetRoleInstance(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/ConstosoRG/providers/Microsoft.Compute/cloudServices/{{cs-name}}/roleInstances/{{roleInstance-name}}"));
            Compute.Models.InstanceViewTypes? expand = null;

            await roleInstance.GetAsync(expand);
        }

        [RecordedTest]
        public async Task DeleteAsync()
        {
            // Example: Delete Cloud Service Role Instance
            var roleInstance = GetArmClient().GetRoleInstance(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/ConstosoRG/providers/Microsoft.Compute/cloudServices/{{cs-name}}/roleInstances/{{roleInstance-name}}"));

            await roleInstance.DeleteAsync();
        }

        [RecordedTest]
        public async Task GetInstanceViewAsync()
        {
            // Example: Get Instance View of Cloud Service Role Instance
            var roleInstance = GetArmClient().GetRoleInstance(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/ConstosoRG/providers/Microsoft.Compute/cloudServices/{{cs-name}}/roleInstances/{{roleInstance-name}}"));

            await roleInstance.GetInstanceViewAsync();
        }

        [RecordedTest]
        public async Task RestartAsync()
        {
            // Example: Restart Cloud Service Role Instance
            var roleInstance = GetArmClient().GetRoleInstance(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/ConstosoRG/providers/Microsoft.Compute/cloudServices/{{cs-name}}/roleInstances/{{roleInstance-name}}"));

            await roleInstance.RestartAsync();
        }

        [RecordedTest]
        public async Task ReimageAsync()
        {
            // Example: Reimage Cloud Service Role Instance
            var roleInstance = GetArmClient().GetRoleInstance(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/ConstosoRG/providers/Microsoft.Compute/cloudServices/{{cs-name}}/roleInstances/{{roleInstance-name}}"));

            await roleInstance.ReimageAsync();
        }

        [RecordedTest]
        public async Task RebuildAsync()
        {
            // Example: Rebuild Cloud Service Role Instance
            var roleInstance = GetArmClient().GetRoleInstance(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/ConstosoRG/providers/Microsoft.Compute/cloudServices/{{cs-name}}/roleInstances/{{roleInstance-name}}"));

            await roleInstance.RebuildAsync();
        }
    }
}

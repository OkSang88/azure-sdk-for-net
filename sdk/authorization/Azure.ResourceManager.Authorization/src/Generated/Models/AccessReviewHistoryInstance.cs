// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.Authorization.Models
{
    /// <summary> Access Review History Definition Instance. </summary>
    internal partial class AccessReviewHistoryInstance : ResourceData
    {
        /// <summary> Initializes a new instance of AccessReviewHistoryInstance. </summary>
        internal AccessReviewHistoryInstance()
        {
        }

        /// <summary> Date time used when selecting review data, all reviews included in data start on or after this date. For use only with one-time/non-recurring reports. </summary>
        public DateTimeOffset? ReviewHistoryPeriodStartOn { get; }
        /// <summary> Date time used when selecting review data, all reviews included in data end on or before this date. For use only with one-time/non-recurring reports. </summary>
        public DateTimeOffset? ReviewHistoryPeriodEndOn { get; }
        /// <summary> The display name for the parent history definition. </summary>
        public string DisplayName { get; }
        /// <summary> Status of the requested review history instance data. This is either requested, in-progress, done or error. The state transitions are as follows - Requested -&gt; InProgress -&gt; Done -&gt; Expired. </summary>
        public AccessReviewHistoryDefinitionStatus? Status { get; }
        /// <summary> Date time when the history data report is scheduled to be generated. </summary>
        public DateTimeOffset? RunOn { get; }
        /// <summary> Date time when the history data report is scheduled to be generated. </summary>
        public DateTimeOffset? FulfilledOn { get; }
        /// <summary> Uri which can be used to retrieve review history data. To generate this Uri, generateDownloadUri() must be called for a specific accessReviewHistoryDefinitionInstance. The link expires after a 24 hour period. Callers can see the expiration date time by looking at the &apos;se&apos; parameter in the generated uri. </summary>
        public Uri DownloadUri { get; }
        /// <summary> Date time when history data report expires and the associated data is deleted. </summary>
        public DateTimeOffset? Expiration { get; }
    }
}

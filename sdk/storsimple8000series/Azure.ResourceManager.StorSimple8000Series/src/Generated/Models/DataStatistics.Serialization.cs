// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.StorSimple8000Series.Models
{
    public partial class DataStatistics : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(TotalData))
            {
                writer.WritePropertyName("totalData");
                writer.WriteNumberValue(TotalData.Value);
            }
            if (Optional.IsDefined(ProcessedData))
            {
                writer.WritePropertyName("processedData");
                writer.WriteNumberValue(ProcessedData.Value);
            }
            if (Optional.IsDefined(CloudData))
            {
                writer.WritePropertyName("cloudData");
                writer.WriteNumberValue(CloudData.Value);
            }
            if (Optional.IsDefined(Throughput))
            {
                writer.WritePropertyName("throughput");
                writer.WriteNumberValue(Throughput.Value);
            }
            writer.WriteEndObject();
        }

        internal static DataStatistics DeserializeDataStatistics(JsonElement element)
        {
            Optional<long> totalData = default;
            Optional<long> processedData = default;
            Optional<long> cloudData = default;
            Optional<long> throughput = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("totalData"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    totalData = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("processedData"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    processedData = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("cloudData"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    cloudData = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("throughput"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    throughput = property.Value.GetInt64();
                    continue;
                }
            }
            return new DataStatistics(Optional.ToNullable(totalData), Optional.ToNullable(processedData), Optional.ToNullable(cloudData), Optional.ToNullable(throughput));
        }
    }
}

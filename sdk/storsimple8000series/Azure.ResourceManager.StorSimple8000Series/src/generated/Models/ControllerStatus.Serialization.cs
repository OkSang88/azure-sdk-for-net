// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace StorSimple8000SeriesManagementClient.Models
{
    internal static partial class ControllerStatusExtensions
    {
        public static string ToSerialString(this ControllerStatus value) => value switch
        {
            ControllerStatus.NotPresent => "NotPresent",
            ControllerStatus.PoweredOff => "PoweredOff",
            ControllerStatus.Ok => "Ok",
            ControllerStatus.Recovering => "Recovering",
            ControllerStatus.Warning => "Warning",
            ControllerStatus.Failure => "Failure",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown ControllerStatus value.")
        };

        public static ControllerStatus ToControllerStatus(this string value)
        {
            if (string.Equals(value, "NotPresent", StringComparison.InvariantCultureIgnoreCase)) return ControllerStatus.NotPresent;
            if (string.Equals(value, "PoweredOff", StringComparison.InvariantCultureIgnoreCase)) return ControllerStatus.PoweredOff;
            if (string.Equals(value, "Ok", StringComparison.InvariantCultureIgnoreCase)) return ControllerStatus.Ok;
            if (string.Equals(value, "Recovering", StringComparison.InvariantCultureIgnoreCase)) return ControllerStatus.Recovering;
            if (string.Equals(value, "Warning", StringComparison.InvariantCultureIgnoreCase)) return ControllerStatus.Warning;
            if (string.Equals(value, "Failure", StringComparison.InvariantCultureIgnoreCase)) return ControllerStatus.Failure;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown ControllerStatus value.");
        }
    }
}

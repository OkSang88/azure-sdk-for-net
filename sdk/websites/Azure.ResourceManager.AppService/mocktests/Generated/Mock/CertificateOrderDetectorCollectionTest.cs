// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.AppService;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.AppService.Tests.Mock
{
    /// <summary> Test for AppServiceDetector. </summary>
    public partial class CertificateOrderDetectorCollectionMockTests : MockTestBase
    {
        public CertificateOrderDetectorCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get app service certificate order detector response
            string detectorName = "AutoRenewStatus";
            DateTimeOffset? startTime = null;
            DateTimeOffset? endTime = null;
            string timeGrain = null;

            var appServiceCertificateOrderId = AppService.AppServiceCertificateOrder.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "Sample-WestUSResourceGroup", "SampleCertificateOrderName");
            var collection = GetArmClient().GetAppServiceCertificateOrder(appServiceCertificateOrderId).GetCertificateOrderDetectors();
            await collection.GetAsync(detectorName, startTime, endTime, timeGrain);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: List app service certificate detector response

            var appServiceCertificateOrderId = AppService.AppServiceCertificateOrder.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "Sample-WestUSResourceGroup", "SampleCertificateOrderName");
            var collection = GetArmClient().GetAppServiceCertificateOrder(appServiceCertificateOrderId).GetCertificateOrderDetectors();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager;

namespace MicrosoftStorageSync
{
    /// <summary> A class to add extension methods to ArmClient. </summary>
    public static partial class ArmClientExtensions
    {
        #region StorageSyncService
        /// <summary> Gets an object representing a StorageSyncService along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="StorageSyncService" /> object. </returns>
        public static StorageSyncService GetStorageSyncService(this ArmClient armClient, ResourceIdentifier id)
        {
            StorageSyncService.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new StorageSyncService(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region PrivateEndpointConnection
        /// <summary> Gets an object representing a PrivateEndpointConnection along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="PrivateEndpointConnection" /> object. </returns>
        public static PrivateEndpointConnection GetPrivateEndpointConnection(this ArmClient armClient, ResourceIdentifier id)
        {
            PrivateEndpointConnection.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new PrivateEndpointConnection(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region SyncGroup
        /// <summary> Gets an object representing a SyncGroup along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SyncGroup" /> object. </returns>
        public static SyncGroup GetSyncGroup(this ArmClient armClient, ResourceIdentifier id)
        {
            SyncGroup.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new SyncGroup(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region CloudEndpoint
        /// <summary> Gets an object representing a CloudEndpoint along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="CloudEndpoint" /> object. </returns>
        public static CloudEndpoint GetCloudEndpoint(this ArmClient armClient, ResourceIdentifier id)
        {
            CloudEndpoint.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new CloudEndpoint(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ServerEndpoint
        /// <summary> Gets an object representing a ServerEndpoint along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ServerEndpoint" /> object. </returns>
        public static ServerEndpoint GetServerEndpoint(this ArmClient armClient, ResourceIdentifier id)
        {
            ServerEndpoint.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ServerEndpoint(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region RegisteredServer
        /// <summary> Gets an object representing a RegisteredServer along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="RegisteredServer" /> object. </returns>
        public static RegisteredServer GetRegisteredServer(this ArmClient armClient, ResourceIdentifier id)
        {
            RegisteredServer.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new RegisteredServer(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region Workflow
        /// <summary> Gets an object representing a Workflow along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="Workflow" /> object. </returns>
        public static Workflow GetWorkflow(this ArmClient armClient, ResourceIdentifier id)
        {
            Workflow.ValidateResourceId(id);
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new Workflow(clientOptions, credential, uri, pipeline, id));
        }
        #endregion
    }
}

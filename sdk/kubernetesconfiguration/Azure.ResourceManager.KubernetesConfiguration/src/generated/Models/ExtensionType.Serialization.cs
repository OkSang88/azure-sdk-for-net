// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace SourceControlConfigurationClient.Models
{
    public partial class ExtensionType
    {
        internal static ExtensionType DeserializeExtensionType(JsonElement element)
        {
            Optional<SystemData> systemData = default;
            Optional<IReadOnlyList<string>> releaseTrains = default;
            Optional<ClusterTypes> clusterTypes = default;
            Optional<SupportedScopes> supportedScopes = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("systemData"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    systemData = JsonSerializer.Deserialize<SystemData>(property.Value.ToString());
                    continue;
                }
                if (property.NameEquals("properties"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("releaseTrains"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            List<string> array = new List<string>();
                            foreach (var item in property0.Value.EnumerateArray())
                            {
                                array.Add(item.GetString());
                            }
                            releaseTrains = array;
                            continue;
                        }
                        if (property0.NameEquals("clusterTypes"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            clusterTypes = property0.Value.GetString().ToClusterTypes();
                            continue;
                        }
                        if (property0.NameEquals("supportedScopes"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            supportedScopes = SupportedScopes.DeserializeSupportedScopes(property0.Value);
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new ExtensionType(systemData, Optional.ToList(releaseTrains), Optional.ToNullable(clusterTypes), supportedScopes.Value);
        }
    }
}

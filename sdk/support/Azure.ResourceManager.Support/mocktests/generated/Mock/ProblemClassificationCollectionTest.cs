// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;
using MicrosoftSupport;

namespace MicrosoftSupport.Tests.Mock
{
    /// <summary> Test for ProblemClassification. </summary>
    public partial class ProblemClassificationCollectionMockTests : MockTestBase
    {
        public ProblemClassificationCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Gets details of problemClassification for Azure service
            string problemClassificationName = "problemClassification_guid";

            var serviceId = MicrosoftSupport.Service.CreateResourceIdentifier("service_guid");
            var collection = GetArmClient().GetService(serviceId).GetProblemClassifications();
            await collection.GetAsync(problemClassificationName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: Gets list of problemClassifications for a service for which a support ticket can be created

            var serviceId = MicrosoftSupport.Service.CreateResourceIdentifier("service_guid");
            var collection = GetArmClient().GetService(serviceId).GetProblemClassifications();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

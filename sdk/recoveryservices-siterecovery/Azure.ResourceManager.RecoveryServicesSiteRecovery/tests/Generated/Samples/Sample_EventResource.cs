// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;

namespace Azure.ResourceManager.RecoveryServicesSiteRecovery
{
    public partial class Sample_EventResource
    {
        // Get the details of an Azure Site recovery event.
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_GetTheDetailsOfAnAzureSiteRecoveryEvent()
        {
            // Generated from example definition: specification/recoveryservicessiterecovery/resource-manager/Microsoft.RecoveryServices/stable/2022-08-01/examples/ReplicationEvents_Get.json
            // this example is just showing the usage of "ReplicationEvents_Get" operation, for the dependent resources, they will have to be created separately.

            // authenticate your client
            ArmClient client = new ArmClient(new DefaultAzureCredential());

            // this example assumes you already have this EventResource created on azure
            // for more information of creating EventResource, please refer to the document of EventResource
            string subscriptionId = "c183865e-6077-46f2-a3b1-deb0f4f4650a";
            string resourceGroupName = "resourceGroupPS1";
            string resourceName = "vault1";
            string eventName = "654b71d0-b2ce-4e6e-a861-98528d4bd375";
            ResourceIdentifier eventResourceId = EventResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, resourceName, eventName);
            EventResource @event = client.GetEventResource(eventResourceId);

            // invoke the operation
            EventResource result = await @event.GetAsync();

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            EventData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}

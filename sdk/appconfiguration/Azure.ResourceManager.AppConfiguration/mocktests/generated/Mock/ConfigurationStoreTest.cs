// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.AppConfiguration.Models;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.AppConfiguration.Tests.Mock
{
    /// <summary> Test for ConfigurationStore. </summary>
    public partial class ConfigurationStoreMockTests : MockTestBase
    {
        public ConfigurationStoreMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: ConfigurationStores_Get
            var configurationStore = GetArmClient().GetConfigurationStore(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppConfiguration/configurationStores/contoso"));

            await configurationStore.GetAsync();
        }

        [RecordedTest]
        public async Task DeleteAsync()
        {
            // Example: ConfigurationStores_Delete
            var configurationStore = GetArmClient().GetConfigurationStore(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppConfiguration/configurationStores/contoso"));

            await configurationStore.DeleteAsync();
        }

        [RecordedTest]
        public async Task UpdateAsync()
        {
            // Example: ConfigurationStores_Update
            var configurationStore = GetArmClient().GetConfigurationStore(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppConfiguration/configurationStores/contoso"));
            AppConfiguration.Models.ConfigurationStoreUpdateOptions configurationStoreUpdateOptions = null; /* Can't find this parameter in example, please provide value here!*/

            await configurationStore.UpdateAsync(configurationStoreUpdateOptions);
        }

        [RecordedTest]
        public async Task UpdateAsync2()
        {
            // Example: ConfigurationStores_Update_WithIdentity
            var configurationStore = GetArmClient().GetConfigurationStore(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppConfiguration/configurationStores/contoso"));
            AppConfiguration.Models.ConfigurationStoreUpdateOptions configurationStoreUpdateOptions = null; /* Can't find this parameter in example, please provide value here!*/

            await configurationStore.UpdateAsync(configurationStoreUpdateOptions);
        }

        [RecordedTest]
        public void GetKeysAsync()
        {
            // Example: ConfigurationStores_ListKeys
            var configurationStore = GetArmClient().GetConfigurationStore(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppConfiguration/configurationStores/contoso"));
            string skipToken = null;

            configurationStore.GetKeysAsync(skipToken);
        }

        [RecordedTest]
        public async Task RegenerateKeyAsync()
        {
            // Example: ConfigurationStores_RegenerateKey
            var configurationStore = GetArmClient().GetConfigurationStore(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppConfiguration/configurationStores/contoso"));
            AppConfiguration.Models.RegenerateKeyOptions regenerateKeyOptions = null; /* Can't find this parameter in example, please provide value here!*/

            await configurationStore.RegenerateKeyAsync(regenerateKeyOptions);
        }

        [RecordedTest]
        public async Task GetKeyValueAsync()
        {
            // Example: ConfigurationStores_ListKeyValue
            var configurationStore = GetArmClient().GetConfigurationStore(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppConfiguration/configurationStores/fayeh"));
            AppConfiguration.Models.ListKeyValueOptions listKeyValueOptions = null; /* Can't find this parameter in example, please provide value here!*/

            await configurationStore.GetKeyValueAsync(listKeyValueOptions);
        }
    }
}

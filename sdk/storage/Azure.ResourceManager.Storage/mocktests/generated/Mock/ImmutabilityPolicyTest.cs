// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Storage;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Storage.Tests.Mock
{
    /// <summary> Test for ImmutabilityPolicy. </summary>
    public partial class ImmutabilityPolicyMockTests : MockTestBase
    {
        public ImmutabilityPolicyMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: GetImmutabilityPolicy
            var immutabilityPolicyId = Storage.ImmutabilityPolicy.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "res5221", "sto9177", "container3489");
            var immutabilityPolicy = GetArmClient().GetImmutabilityPolicy(immutabilityPolicyId);
            string ifMatch = null;

            await immutabilityPolicy.GetAsync(ifMatch);
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: DeleteImmutabilityPolicy
            var immutabilityPolicyId = Storage.ImmutabilityPolicy.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "res1581", "sto9621", "container4910");
            var immutabilityPolicy = GetArmClient().GetImmutabilityPolicy(immutabilityPolicyId);
            string ifMatch = "\"8d59f81a7fa7be0\"";

            await immutabilityPolicy.DeleteAsync(true, ifMatch);
        }

        [RecordedTest]
        public async Task LockImmutabilityPolicy()
        {
            // Example: LockImmutabilityPolicy
            var immutabilityPolicyId = Storage.ImmutabilityPolicy.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "res2702", "sto5009", "container1631");
            var immutabilityPolicy = GetArmClient().GetImmutabilityPolicy(immutabilityPolicyId);
            string ifMatch = "\"8d59f825b721dd3\"";

            await immutabilityPolicy.LockImmutabilityPolicyAsync(ifMatch);
        }

        [RecordedTest]
        public async Task ExtendImmutabilityPolicy()
        {
            // Example: ExtendImmutabilityPolicy
            var immutabilityPolicyId = Storage.ImmutabilityPolicy.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "res6238", "sto232", "container5023");
            var immutabilityPolicy = GetArmClient().GetImmutabilityPolicy(immutabilityPolicyId);
            string ifMatch = "\"8d59f830d0c3bf9\"";
            Storage.ImmutabilityPolicyData parameters = new Storage.ImmutabilityPolicyData()
            {
                ImmutabilityPeriodSinceCreationInDays = 100,
            };

            await immutabilityPolicy.ExtendImmutabilityPolicyAsync(ifMatch, parameters);
        }
    }
}

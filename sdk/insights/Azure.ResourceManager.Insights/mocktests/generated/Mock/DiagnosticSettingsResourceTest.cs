// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;
using Insights;

namespace Insights.Tests.Mock
{
    /// <summary> Test for DiagnosticSettingsResource. </summary>
    public partial class DiagnosticSettingsResourceMockTests : MockTestBase
    {
        public DiagnosticSettingsResourceMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Gets the diagnostic setting
            var diagnosticSettingsResourceId = Insights.DiagnosticSettingsResource.CreateResourceIdentifier("subscriptions/1a66ce04-b633-4a0b-b2bc-a912ec8986a6/resourcegroups/viruela1/providers/microsoft.logic/workflows/viruela6", "mysetting");
            var diagnosticSettingsResource = GetArmClient().GetDiagnosticSettingsResource(diagnosticSettingsResourceId);

            await diagnosticSettingsResource.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: Deletes the diagnostic setting
            var diagnosticSettingsResourceId = Insights.DiagnosticSettingsResource.CreateResourceIdentifier("subscriptions/1a66ce04-b633-4a0b-b2bc-a912ec8986a6/resourcegroups/viruela1/providers/microsoft.logic/workflows/viruela6", "mysetting");
            var diagnosticSettingsResource = GetArmClient().GetDiagnosticSettingsResource(diagnosticSettingsResourceId);

            await diagnosticSettingsResource.DeleteAsync(true);
        }
    }
}

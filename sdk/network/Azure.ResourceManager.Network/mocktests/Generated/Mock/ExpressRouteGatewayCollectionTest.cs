// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Network;
using Azure.ResourceManager.Network.Models;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Network.Tests.Mock
{
    /// <summary> Test for ExpressRouteGateway. </summary>
    public partial class ExpressRouteGatewayCollectionMockTests : MockTestBase
    {
        public ExpressRouteGatewayCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: ExpressRouteGatewayCreate
            string expressRouteGatewayName = "gateway-2";
            Network.ExpressRouteGatewayData putExpressRouteGatewayParameters = new Network.ExpressRouteGatewayData()
            {
                AutoScaleConfiguration = new Network.Models.ExpressRouteGatewayPropertiesAutoScaleConfiguration()
                {
                    Bounds = new Network.Models.ExpressRouteGatewayPropertiesAutoScaleConfigurationBounds()
                    {
                        Min = 3,
                    },
                },
                VirtualHub = new WritableSubResource()
                {
                    Id = new ResourceIdentifier($"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroupId/providers/Microsoft.Network/virtualHubs/virtualHubName"),
                },
                Location = "westus",
            };

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroupName")).GetExpressRouteGateways();
            await collection.CreateOrUpdateAsync(true, expressRouteGatewayName, putExpressRouteGatewayParameters);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: ExpressRouteGatewayGet
            string expressRouteGatewayName = "expressRouteGatewayName";

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroupName")).GetExpressRouteGateways();
            await collection.GetAsync(expressRouteGatewayName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: ExpressRouteGatewayListByResourceGroup

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroupName")).GetExpressRouteGateways();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

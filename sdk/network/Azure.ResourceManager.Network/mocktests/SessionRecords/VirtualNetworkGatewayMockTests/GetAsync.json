{
  "Entries": [
    {
      "RequestUri": "https://localhost:8443/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/vpngw?api-version=2021-02-01",
      "RequestMethod": "GET",
      "RequestHeaders": {
        "Accept": "application/json",
        "Authorization": "Sanitized",
        "User-Agent": [
          "azsdk-net-ResourceManager.Network/1.0.0-alpha.20220119.1",
          "(.NET 6.0.1; Microsoft Windows 10.0.22000)"
        ],
        "x-ms-client-request-id": "003b18b0b3da5aae00922e84fbf28d5a",
        "x-ms-return-client-request-id": "true"
      },
      "RequestBody": null,
      "StatusCode": 200,
      "ResponseHeaders": {
        "Connection": "keep-alive",
        "Content-Length": "3641",
        "Content-Type": "application/json; charset=utf-8",
        "Date": "Wed, 19 Jan 2022 07:29:31 GMT",
        "ETag": "W/\u0022e39-GJTVMg2VhEqG\u002ByOugvmLHINMD1Q\u0022",
        "Keep-Alive": "timeout=5",
        "X-Powered-By": "Express"
      },
      "ResponseBody": {
        "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/vpngw",
        "name": "vpngw",
        "type": "/Microsoft.Network/virtualNetworkGateways",
        "location": "aaaaaaaaaaaaaaaaa",
        "tags": {
          "key4011": "aaaaaaa"
        },
        "properties": {
          "ipConfigurations": [
            {
              "id": "/subscriptions/a9cbceed-cd54-47f1-b7a2-bad149218603/resourceGroups/mockRg/providers/Microsoft.Resources/mockResource/mockName",
              "properties": {
                "privateIPAllocationMethod": "Static",
                "subnet": {
                  "id": "/subscriptions/a9cbceed-cd54-47f1-b7a2-bad149218603/resourceGroups/mockRg/providers/Microsoft.Resources/mockResource/mockName"
                },
                "publicIPAddress": {
                  "id": "/subscriptions/a9cbceed-cd54-47f1-b7a2-bad149218603/resourceGroups/mockRg/providers/Microsoft.Resources/mockResource/mockName"
                },
                "privateIPAddress": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                "provisioningState": "Succeeded"
              },
              "name": "mockName",
              "etag": "aaaaaaaaaaaaaaaaaaaaaaaa"
            }
          ],
          "gatewayType": "Vpn",
          "vpnType": "PolicyBased",
          "vpnGatewayGeneration": "None",
          "enableBgp": true,
          "enablePrivateIpAddress": true,
          "activeActive": true,
          "gatewayDefaultSite": {
            "id": "/subscriptions/a9cbceed-cd54-47f1-b7a2-bad149218603/resourceGroups/mockRg/providers/Microsoft.Resources/mockResource/mockName"
          },
          "sku": {
            "name": "Basic",
            "tier": "Basic",
            "capacity": 30
          },
          "vpnClientConfiguration": {
            "vpnClientAddressPool": {
              "addressPrefixes": [
                "aaaaaaa"
              ]
            },
            "vpnClientRootCertificates": [
              {
                "id": "/subscriptions/a9cbceed-cd54-47f1-b7a2-bad149218603/resourceGroups/mockRg/providers/Microsoft.Resources/mockResource/mockName",
                "properties": {
                  "publicCertData": "aaa",
                  "provisioningState": "Succeeded"
                },
                "name": "mockName",
                "etag": "aaaaaaaaaaaaaaaaaaaaaaaa"
              }
            ],
            "vpnClientRevokedCertificates": [
              {
                "id": "/subscriptions/a9cbceed-cd54-47f1-b7a2-bad149218603/resourceGroups/mockRg/providers/Microsoft.Resources/mockResource/mockName",
                "properties": {
                  "thumbprint": "aaaaaaaaaaaaaaaaaaaaa",
                  "provisioningState": "Succeeded"
                },
                "name": "mockName",
                "etag": "aaaaaaaaaaaaaaaaaaa"
              }
            ],
            "vpnClientProtocols": [
              "IkeV2"
            ],
            "vpnAuthenticationTypes": [
              "Certificate"
            ],
            "vpnClientIpsecPolicies": [
              {
                "saLifeTimeSeconds": 27,
                "saDataSizeKilobytes": 3,
                "ipsecEncryption": "None",
                "ipsecIntegrity": "MD5",
                "ikeEncryption": "DES",
                "ikeIntegrity": "MD5",
                "dhGroup": "None",
                "pfsGroup": "None"
              }
            ],
            "radiusServerAddress": "aaaaaa",
            "radiusServerSecret": "aaaaaaaaaaaaaaaaaaaaaaaaaa",
            "radiusServers": [
              {
                "radiusServerAddress": "aaaaaaaaaaaaaaaaaaaaaaa",
                "radiusServerScore": 20,
                "radiusServerSecret": "aaaaaaaaaaaaaaaaaaaaaaaa"
              }
            ],
            "aadTenant": "aaaa",
            "aadAudience": "aaaaaaaaaaaaaaaaaaaaaaa",
            "aadIssuer": "aaaaaaaaaaaaaaaaaaaa"
          },
          "bgpSettings": {
            "asn": 850261576,
            "bgpPeeringAddress": "aaaaaaaaaaaaaaaaaaaa",
            "peerWeight": 19,
            "bgpPeeringAddresses": [
              {
                "ipconfigurationId": "aaaaaaaaaa",
                "defaultBgpIpAddresses": [
                  "aa"
                ],
                "customBgpIpAddresses": [
                  "aaaaaaaaaaaaaaaaaaaaaaa"
                ],
                "tunnelIpAddresses": [
                  "aaaa"
                ]
              }
            ]
          },
          "customRoutes": {
            "addressPrefixes": [
              "a"
            ]
          },
          "resourceGuid": "aaaaaaa",
          "provisioningState": "Succeeded",
          "enableDnsForwarding": true,
          "inboundDnsForwardingEndpoint": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
          "vNetExtendedLocationResourceId": "aaaaaaaaaaaaaaaaaaaaaaa",
          "natRules": [
            {
              "id": "/subscriptions/a9cbceed-cd54-47f1-b7a2-bad149218603/resourceGroups/mockRg/providers/Microsoft.Resources/mockResource/mockName",
              "properties": {
                "provisioningState": "Succeeded",
                "type": "Static",
                "mode": "EgressSnat",
                "internalMappings": [
                  {
                    "addressSpace": "aaaaaaaaaaaaaaaaaaaaaaaaaaaa"
                  }
                ],
                "externalMappings": [
                  {
                    "addressSpace": "aaaaaaaaaaaaaaaaaaaaaaaa"
                  }
                ],
                "ipConfigurationId": "aaaaaaaaaaaaaaaaaa"
              },
              "name": "mockName",
              "etag": "aaaaaaa",
              "type": "Microsoft.Resources/mockResource"
            }
          ],
          "enableBgpRouteTranslationForNat": true
        },
        "extendedLocation": {
          "name": "aaaaaaaa",
          "type": "EdgeZone"
        },
        "etag": "aaaaaaaaaaaaaaaaaaaa"
      }
    }
  ],
  "Variables": {
    "RandomSeed": "1468952370",
    "RESOURCE_MANAGER_URL": "https://localhost:8443",
    "SUBSCRIPTION_ID": "00000000-0000-0000-0000-000000000000"
  }
}
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;
using BatchManagementClient;
using BatchManagementClient.Models;

namespace BatchManagementClient.Tests.Mock
{
    /// <summary> Test for Pool. </summary>
    public partial class PoolMockTests : MockTestBase
    {
        public PoolMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: GetPool
            var poolId = BatchManagementClient.Pool.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "default-azurebatch-japaneast", "sampleacct", "testpool");
            var pool = GetArmClient().GetPool(poolId);

            await pool.GetAsync();
        }

        [RecordedTest]
        public async Task Get2()
        {
            // Example: GetPool - VirtualMachineConfiguration Extensions
            var poolId = BatchManagementClient.Pool.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "default-azurebatch-japaneast", "sampleacct", "testpool");
            var pool = GetArmClient().GetPool(poolId);

            await pool.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: DeletePool
            var poolId = BatchManagementClient.Pool.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "default-azurebatch-japaneast", "sampleacct", "testpool");
            var pool = GetArmClient().GetPool(poolId);

            await pool.DeleteAsync(true);
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: UpdatePool - Enable Autoscale
            var poolId = BatchManagementClient.Pool.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "default-azurebatch-japaneast", "sampleacct", "testpool");
            var pool = GetArmClient().GetPool(poolId);
            BatchManagementClient.PoolData parameters = new BatchManagementClient.PoolData()
            {
                ScaleSettings = new BatchManagementClient.Models.ScaleSettings()
                {
                    AutoScale = new BatchManagementClient.Models.AutoScaleSettings(formula: "$TargetDedicatedNodes=34"),
                },
            };
            string ifMatch = null;

            await pool.UpdateAsync(parameters, ifMatch);
        }

        [RecordedTest]
        public async Task Update2()
        {
            // Example: UpdatePool - Other Properties
            var poolId = BatchManagementClient.Pool.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "default-azurebatch-japaneast", "sampleacct", "testpool");
            var pool = GetArmClient().GetPool(poolId);
            BatchManagementClient.PoolData parameters = new BatchManagementClient.PoolData();
            string ifMatch = null;

            await pool.UpdateAsync(parameters, ifMatch);
        }

        [RecordedTest]
        public async Task Update3()
        {
            // Example: UpdatePool - Remove Start Task
            var poolId = BatchManagementClient.Pool.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "default-azurebatch-japaneast", "sampleacct", "testpool");
            var pool = GetArmClient().GetPool(poolId);
            BatchManagementClient.PoolData parameters = new BatchManagementClient.PoolData()
            {
                StartTask = new BatchManagementClient.Models.StartTask(),
            };
            string ifMatch = null;

            await pool.UpdateAsync(parameters, ifMatch);
        }

        [RecordedTest]
        public async Task Update4()
        {
            // Example: UpdatePool - Resize Pool
            var poolId = BatchManagementClient.Pool.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "default-azurebatch-japaneast", "sampleacct", "testpool");
            var pool = GetArmClient().GetPool(poolId);
            BatchManagementClient.PoolData parameters = new BatchManagementClient.PoolData()
            {
                ScaleSettings = new BatchManagementClient.Models.ScaleSettings()
                {
                    FixedScale = new BatchManagementClient.Models.FixedScaleSettings()
                    {
                        ResizeTimeout = TimeSpan.Parse("PT8M"),
                        TargetDedicatedNodes = 5,
                        TargetLowPriorityNodes = 0,
                        NodeDeallocationOption = BatchManagementClient.Models.ComputeNodeDeallocationOption.TaskCompletion,
                    },
                },
            };
            string ifMatch = null;

            await pool.UpdateAsync(parameters, ifMatch);
        }

        [RecordedTest]
        public async Task DisableAutoScale()
        {
            // Example: Disable AutoScale
            var poolId = BatchManagementClient.Pool.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "default-azurebatch-japaneast", "sampleacct", "testpool");
            var pool = GetArmClient().GetPool(poolId);

            await pool.DisableAutoScaleAsync();
        }

        [RecordedTest]
        public async Task StopResize()
        {
            // Example: StopPoolResize
            var poolId = BatchManagementClient.Pool.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "default-azurebatch-japaneast", "sampleacct", "testpool");
            var pool = GetArmClient().GetPool(poolId);

            await pool.StopResizeAsync();
        }
    }
}

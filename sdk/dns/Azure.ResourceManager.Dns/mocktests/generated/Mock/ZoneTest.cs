// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;
using DnsManagementClient.Models;

namespace DnsManagementClient.Tests.Mock
{
    /// <summary> Test for Zone. </summary>
    public partial class ZoneMockTests : MockTestBase
    {
        public ZoneMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get zone
            var zone = GetArmClient().GetZone(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1"));

            await zone.GetAsync();
        }

        [RecordedTest]
        public async Task DeleteAsync()
        {
            // Example: Delete zone
            var zone = GetArmClient().GetZone(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1"));
            string ifMatch = null;

            await zone.DeleteAsync(ifMatch);
        }

        [RecordedTest]
        public async Task UpdateAsync()
        {
            // Example: Patch zone
            var zone = GetArmClient().GetZone(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1"));
            DnsManagementClient.Models.ZoneUpdate parameters = new DnsManagementClient.Models.ZoneUpdate();
            string ifMatch = null;

            await zone.UpdateAsync(parameters, ifMatch);
        }

        [RecordedTest]
        public void GetRecordSetsByDnsZoneAsync()
        {
            // Example: List recordsets by zone
            var zone = GetArmClient().GetZone(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1"));
            int? top = null;
            string recordsetnamesuffix = null;

            zone.GetRecordSetsByDnsZoneAsync(top, recordsetnamesuffix);
        }

        [RecordedTest]
        public void GetRecordSetsByDnsZoneAsync()
        {
            // Example: List recordsets by zone
            var zone = GetArmClient().GetZone(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Network/dnsZones/zone1"));
            int? top = null;
            string recordSetNameSuffix = null;

            zone.GetRecordSetsByDnsZoneAsync(top, recordSetNameSuffix);
        }
    }
}

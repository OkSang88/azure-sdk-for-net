// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Core.TestFramework;
using Azure.ResourceManager.ConnectedVMwarevSphere;
using Azure.ResourceManager.ConnectedVMwarevSphere.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.ConnectedVMwarevSphere.Tests.Mock
{
    /// <summary> Test for ResourcePool. </summary>
    public partial class ResourcePoolCollectionMockTests : MockTestBase
    {
        public ResourcePoolCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: CreateResourcePool
            string resourcePoolName = "HRPool";
            ConnectedVMwarevSphere.ResourcePoolData body = new ConnectedVMwarevSphere.ResourcePoolData(location: "East US")
            {
                ExtendedLocation = new ConnectedVMwarevSphere.Models.ExtendedLocation()
                {
                    Type = "customLocation",
                    Name = "/subscriptions/a5015e1c-867f-4533-8541-85cd470d0cfb/resourceGroups/demoRG/providers/Microsoft.ExtendedLocation/customLocations/contoso",
                },
                VCenterId = "/subscriptions/fd3c3665-1729-4b7b-9a38-238e83b0f98b/resourceGroups/testrg/providers/Microsoft.ConnectedVMwarevSphere/VCenters/ContosoVCenter",
                MoRefId = "aaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee",
            };

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testrg")).GetResourcePools();
            await collection.CreateOrUpdateAsync(resourcePoolName, body);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: GetResourcePool
            string resourcePoolName = "HRPool";

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testrg")).GetResourcePools();
            await collection.GetAsync(resourcePoolName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: ListResourcePoolsByResourceGroup

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testrg")).GetResourcePools();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

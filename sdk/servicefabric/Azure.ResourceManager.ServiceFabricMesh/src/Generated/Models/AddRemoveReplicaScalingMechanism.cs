// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace Azure.ResourceManager.ServiceFabricMesh.Models
{
    /// <summary> Describes the horizontal auto scaling mechanism that adds or removes replicas (containers or container groups). </summary>
    public partial class AddRemoveReplicaScalingMechanism : AutoScalingMechanism
    {
        /// <summary> Initializes a new instance of AddRemoveReplicaScalingMechanism. </summary>
        /// <param name="minCount"> Minimum number of containers (scale down won&apos;t be performed below this number). </param>
        /// <param name="maxCount"> Maximum number of containers (scale up won&apos;t be performed above this number). </param>
        /// <param name="scaleIncrement"> Each time auto scaling is performed, this number of containers will be added or removed. </param>
        public AddRemoveReplicaScalingMechanism(int minCount, int maxCount, int scaleIncrement)
        {
            MinCount = minCount;
            MaxCount = maxCount;
            ScaleIncrement = scaleIncrement;
            Kind = AutoScalingMechanismKind.AddRemoveReplica;
        }

        /// <summary> Initializes a new instance of AddRemoveReplicaScalingMechanism. </summary>
        /// <param name="kind"> The type of auto scaling mechanism. </param>
        /// <param name="minCount"> Minimum number of containers (scale down won&apos;t be performed below this number). </param>
        /// <param name="maxCount"> Maximum number of containers (scale up won&apos;t be performed above this number). </param>
        /// <param name="scaleIncrement"> Each time auto scaling is performed, this number of containers will be added or removed. </param>
        internal AddRemoveReplicaScalingMechanism(AutoScalingMechanismKind kind, int minCount, int maxCount, int scaleIncrement) : base(kind)
        {
            MinCount = minCount;
            MaxCount = maxCount;
            ScaleIncrement = scaleIncrement;
            Kind = kind;
        }

        /// <summary> Minimum number of containers (scale down won&apos;t be performed below this number). </summary>
        public int MinCount { get; set; }
        /// <summary> Maximum number of containers (scale up won&apos;t be performed above this number). </summary>
        public int MaxCount { get; set; }
        /// <summary> Each time auto scaling is performed, this number of containers will be added or removed. </summary>
        public int ScaleIncrement { get; set; }
    }
}

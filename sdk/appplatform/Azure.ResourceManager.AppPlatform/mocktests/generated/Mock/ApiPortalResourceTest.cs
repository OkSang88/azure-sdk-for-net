// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using AppPlatformManagementClient;
using AppPlatformManagementClient.Models;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;

namespace AppPlatformManagementClient.Tests.Mock
{
    /// <summary> Test for ApiPortalResource. </summary>
    public partial class ApiPortalResourceMockTests : MockTestBase
    {
        public ApiPortalResourceMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: ApiPortals_Get
            var apiPortalResourceId = AppPlatformManagementClient.ApiPortalResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myservice", "default");
            var apiPortalResource = GetArmClient().GetApiPortalResource(apiPortalResourceId);

            await apiPortalResource.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: ApiPortals_Delete
            var apiPortalResourceId = AppPlatformManagementClient.ApiPortalResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myservice", "default");
            var apiPortalResource = GetArmClient().GetApiPortalResource(apiPortalResourceId);

            await apiPortalResource.DeleteAsync(true);
        }

        [RecordedTest]
        public async Task ValidateDomain()
        {
            // Example: ApiPortals_ValidateDomain
            var apiPortalResourceId = AppPlatformManagementClient.ApiPortalResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myservice", "default");
            var apiPortalResource = GetArmClient().GetApiPortalResource(apiPortalResourceId);
            AppPlatformManagementClient.Models.CustomDomainValidatePayload validatePayload = new AppPlatformManagementClient.Models.CustomDomainValidatePayload(name: "mydomain.io");

            await apiPortalResource.ValidateDomainAsync(validatePayload);
        }
    }
}

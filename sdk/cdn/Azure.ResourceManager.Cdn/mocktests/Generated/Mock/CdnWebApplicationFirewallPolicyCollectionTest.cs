// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.Cdn;
using Azure.ResourceManager.Cdn.Models;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Cdn.Tests.Mock
{
    /// <summary> Test for CdnWebApplicationFirewallPolicy. </summary>
    public partial class CdnWebApplicationFirewallPolicyCollectionMockTests : MockTestBase
    {
        public CdnWebApplicationFirewallPolicyCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync()
        {
            // Example: Creates specific policy
            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1")).GetCdnWebApplicationFirewallPolicies();
            string policyName = "MicrosoftCdnWafPolicy";
            Cdn.CdnWebApplicationFirewallPolicyData cdnWebApplicationFirewallPolicy = new Cdn.CdnWebApplicationFirewallPolicyData(location: "WestUs", sku: new Cdn.Models.Sku()
            {
                Name = new Cdn.Models.SkuName("Standard_Microsoft"),
            })
            {
                PolicySettings = new Cdn.Models.PolicySettings()
                {
                    DefaultRedirectUrl = "http://www.bing.com",
                    DefaultCustomBlockResponseStatusCode = new Cdn.Models.PolicySettingsDefaultCustomBlockResponseStatusCode(200),
                    DefaultCustomBlockResponseBody = "PGh0bWw+CjxoZWFkZXI+PHRpdGxlPkhlbGxvPC90aXRsZT48L2hlYWRlcj4KPGJvZHk+CkhlbGxvIHdvcmxkCjwvYm9keT4KPC9odG1sPg==",
                },
                RateLimitRules = new Cdn.Models.RateLimitRuleList(),
                CustomRules = new Cdn.Models.CustomRuleList(),
                ManagedRules = new Cdn.Models.ManagedRuleSetList(),
            };

            await collection.CreateOrUpdateAsync(policyName, cdnWebApplicationFirewallPolicy);
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get Policy
            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1")).GetCdnWebApplicationFirewallPolicies();
            string policyName = "MicrosoftCdnWafPolicy";

            await collection.GetAsync(policyName);
        }

        [RecordedTest]
        public void GetAllAsync()
        {
            // Example: List Policies in a Resource Group
            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1")).GetCdnWebApplicationFirewallPolicies();

            collection.GetAllAsync();
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Compute;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Compute.Tests.Mock
{
    /// <summary> Test for DiskAccess. </summary>
    public partial class DiskAccessCollectionMockTests : MockTestBase
    {
        public DiskAccessCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: Create a disk access resource.
            string diskAccessName = "myDiskAccess";
            Compute.DiskAccessData diskAccess = new Compute.DiskAccessData(location: "West US");

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup")).GetDiskAccesses();
            await collection.CreateOrUpdateAsync(diskAccessName, diskAccess);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get information about a disk access resource with private endpoints.
            string diskAccessName = "myDiskAccess";

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup")).GetDiskAccesses();
            await collection.GetAsync(diskAccessName);
        }

        [RecordedTest]
        public async Task Get2()
        {
            // Example: Get information about a disk access resource.
            string diskAccessName = "myDiskAccess";

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup")).GetDiskAccesses();
            await collection.GetAsync(diskAccessName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: List all disk access resources in a resource group.

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup")).GetDiskAccesses();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;
using HealthbotClient;
using HealthbotClient.Models;

namespace HealthbotClient.Tests.Mock
{
    /// <summary> Test for HealthBot. </summary>
    public partial class HealthBotCollectionMockTests : MockTestBase
    {
        public HealthBotCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: BotCreate
            string botName = "samplebotname";
            HealthbotClient.HealthBotData parameters = new HealthbotClient.HealthBotData(location: "East US", sku: new HealthbotClient.Models.Sku(name: HealthbotClient.Models.SkuName.F0))
            {
                Identity = new ResourceIdentity(),
            };

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/healthbotClient")).GetHealthBots();
            await collection.CreateOrUpdateAsync(true, botName, parameters);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: ResourceInfoGet
            string botName = "samplebotname";

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/healthbotClient")).GetHealthBots();
            await collection.GetAsync(botName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: List Bots by Resource Group

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/OneResourceGroupName")).GetHealthBots();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.KeyVault;
using Azure.ResourceManager.KeyVault.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.KeyVault.Tests.Mock
{
    /// <summary> Test for Secret. </summary>
    public partial class SecretCollectionMockTests : MockTestBase
    {
        public SecretCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: Create a secret
            string secretName = "secret-name";
            KeyVault.Models.SecretCreateOrUpdateParameters parameters = new KeyVault.Models.SecretCreateOrUpdateParameters(properties: new KeyVault.Models.SecretProperties()
            {
                Value = "secret-value",
            });

            var vaultId = KeyVault.Vault.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "sample-group", "sample-vault");
            var collection = GetArmClient().GetVault(vaultId).GetSecrets();
            await collection.CreateOrUpdateAsync(true, secretName, parameters);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get a secret
            string secretName = "secret-name";

            var vaultId = KeyVault.Vault.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "sample-group", "sample-vault");
            var collection = GetArmClient().GetVault(vaultId).GetSecrets();
            await collection.GetAsync(secretName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: List secrets in the vault
            int? top = null;

            var vaultId = KeyVault.Vault.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "sample-group", "sample-vault");
            var collection = GetArmClient().GetVault(vaultId).GetSecrets();
            await foreach (var _ in collection.GetAllAsync(top))
            {
            }
        }
    }
}

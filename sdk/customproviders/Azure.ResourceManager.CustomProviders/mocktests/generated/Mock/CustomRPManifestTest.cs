// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.CustomProviders;
using Azure.ResourceManager.CustomProviders.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.CustomProviders.Tests.Mock
{
    /// <summary> Test for CustomRPManifest. </summary>
    public partial class CustomRPManifestMockTests : MockTestBase
    {
        public CustomRPManifestMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get a custom resource provider
            var customRPManifestId = CustomProviders.CustomRPManifest.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testRG", "newrp");
            var customRPManifest = GetArmClient().GetCustomRPManifest(customRPManifestId);

            await customRPManifest.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: Delete a custom resource provider
            var customRPManifestId = CustomProviders.CustomRPManifest.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testRG", "newrp");
            var customRPManifest = GetArmClient().GetCustomRPManifest(customRPManifestId);

            await customRPManifest.DeleteAsync(true);
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: Update a custom resource provider
            var customRPManifestId = CustomProviders.CustomRPManifest.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testRG", "newrp");
            var customRPManifest = GetArmClient().GetCustomRPManifest(customRPManifestId);
            CustomProviders.Models.ResourceProvidersUpdate patchableResource = new CustomProviders.Models.ResourceProvidersUpdate();

            await customRPManifest.UpdateAsync(patchableResource);
        }
    }
}

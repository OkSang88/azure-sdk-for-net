// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Compute;
using Azure.ResourceManager.Compute.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Compute.Tests.Mock
{
    /// <summary> Test for VirtualMachineScaleSetVMExtension. </summary>
    public partial class VirtualMachineScaleSetVMExtensionMockTests : MockTestBase
    {
        public VirtualMachineScaleSetVMExtensionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get VirtualMachineScaleSet VM extension.
            var virtualMachineScaleSetVMExtensionId = Compute.VirtualMachineScaleSetVMExtension.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myvmScaleSet", "0", "myVMExtension");
            var virtualMachineScaleSetVMExtension = GetArmClient().GetVirtualMachineScaleSetVMExtension(virtualMachineScaleSetVMExtensionId);
            string expand = null;

            await virtualMachineScaleSetVMExtension.GetAsync(expand);
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: Delete VirtualMachineScaleSet VM extension.
            var virtualMachineScaleSetVMExtensionId = Compute.VirtualMachineScaleSetVMExtension.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myvmScaleSet", "0", "myVMExtension");
            var virtualMachineScaleSetVMExtension = GetArmClient().GetVirtualMachineScaleSetVMExtension(virtualMachineScaleSetVMExtensionId);

            await virtualMachineScaleSetVMExtension.DeleteAsync();
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: Update VirtualMachineScaleSet VM extension.
            var virtualMachineScaleSetVMExtensionId = Compute.VirtualMachineScaleSetVMExtension.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myvmScaleSet", "0", "myVMExtension");
            var virtualMachineScaleSetVMExtension = GetArmClient().GetVirtualMachineScaleSetVMExtension(virtualMachineScaleSetVMExtensionId);
            Compute.Models.VirtualMachineScaleSetVMExtensionUpdate extensionParameters = new Compute.Models.VirtualMachineScaleSetVMExtensionUpdate()
            {
                Publisher = "extPublisher",
                TypePropertiesType = "extType",
                TypeHandlerVersion = "1.2",
                AutoUpgradeMinorVersion = true,
                Settings = new Dictionary<string, object>()
                {
                    ["UserName"] = "xyz@microsoft.com",
                }
            ,
            };

            await virtualMachineScaleSetVMExtension.UpdateAsync(extensionParameters);
        }
    }
}

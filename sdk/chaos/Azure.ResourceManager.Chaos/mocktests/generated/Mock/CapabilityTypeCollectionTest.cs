// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;
using ChaosManagementClient;

namespace ChaosManagementClient.Tests.Mock
{
    /// <summary> Test for CapabilityType. </summary>
    public partial class CapabilityTypeCollectionMockTests : MockTestBase
    {
        public CapabilityTypeCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get a Capability Type for a virtual machine Target resource on westus2 location.
            string capabilityTypeName = "Shutdown-1.0";

            var targetTypeId = ChaosManagementClient.TargetType.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "westus2", "Microsoft-VirtualMachine");
            var collection = GetArmClient().GetTargetType(targetTypeId).GetCapabilityTypes();
            await collection.GetAsync(capabilityTypeName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: List all Capability Types for a virtual machine Target resource on westus2 location.
            string continuationToken = null;

            var targetTypeId = ChaosManagementClient.TargetType.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "westus2", "Microsoft-VirtualMachine");
            var collection = GetArmClient().GetTargetType(targetTypeId).GetCapabilityTypes();
            await foreach (var _ in collection.GetAllAsync(continuationToken))
            {
            }
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Healthbot.Tests.Mock;
using Azure.ResourceManager.Healthbot.Tests.Mock.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Healthbot.Tests.Mock.Tests.Mock
{
    /// <summary> Test for HealthBot. </summary>
    public partial class HealthBotMockTests : MockTestBase
    {
        public HealthBotMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: ResourceInfoGet
            var healthBotId = Healthbot.Tests.Mock.HealthBot.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "healthbotClient", "samplebotname");
            var healthBot = GetArmClient().GetHealthBot(healthBotId);

            await healthBot.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: BotDelete
            var healthBotId = Healthbot.Tests.Mock.HealthBot.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "healthbotClient", "samplebotname");
            var healthBot = GetArmClient().GetHealthBot(healthBotId);

            await healthBot.DeleteAsync(true);
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: BotUpdate
            var healthBotId = Healthbot.Tests.Mock.HealthBot.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "healthbotClient", "samplebotname");
            var healthBot = GetArmClient().GetHealthBot(healthBotId);
            Healthbot.Tests.Mock.Models.HealthBotUpdateParameters parameters = new Healthbot.Tests.Mock.Models.HealthBotUpdateParameters()
            {
                Sku = new Healthbot.Tests.Mock.Models.Sku(name: Healthbot.Tests.Mock.Models.SkuName.F0),
            };

            await healthBot.UpdateAsync(parameters);
        }
    }
}

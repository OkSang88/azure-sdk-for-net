// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.Cdn.Models;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Cdn.Tests.Mock
{
    /// <summary> Test for AfdCustomDomain. </summary>
    public partial class AfdCustomDomainMockTests : MockTestBase
    {
        public AfdCustomDomainMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: AFDCustomDomains_Get
            var afdCustomDomain = GetArmClient().GetAfdCustomDomain(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/RG/providers/Microsoft.Cdn/profiles/profile1/customDomains/domain1"));

            await afdCustomDomain.GetAsync();
        }

        [RecordedTest]
        public async Task DeleteAsync()
        {
            // Example: AFDCustomDomains_Delete
            var afdCustomDomain = GetArmClient().GetAfdCustomDomain(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/RG/providers/Microsoft.Cdn/profiles/profile1/customDomains/domain1"));

            await afdCustomDomain.DeleteAsync();
        }

        [RecordedTest]
        public async Task UpdateAsync()
        {
            // Example: AFDCustomDomains_Update
            var afdCustomDomain = GetArmClient().GetAfdCustomDomain(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/RG/providers/Microsoft.Cdn/profiles/profile1/customDomains/domain1"));
            Cdn.Models.AfdCustomDomainUpdateOptions customDomainUpdateProperties = new Cdn.Models.AfdCustomDomainUpdateOptions()
            {
                TlsSettings = new Cdn.Models.AfdCustomDomainHttpsParameters(certificateType: new Cdn.Models.AfdCertificateType("CustomerCertificate"))
                {
                    MinimumTlsVersion = Cdn.Models.AfdMinimumTlsVersion.TLS12,
                },
                AzureDnsZone = new WritableSubResource()
                {
                    Id = new ResourceIdentifier($"/subscriptions/00000000-0000-0000-0000-000000000000"),
                },
            };

            await afdCustomDomain.UpdateAsync(customDomainUpdateProperties);
        }

        [RecordedTest]
        public async Task RefreshValidationTokenAsync()
        {
            // Example: AFDCustomDomains_Delete
            var afdCustomDomain = GetArmClient().GetAfdCustomDomain(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/RG/providers/Microsoft.Cdn/profiles/profile1/customDomains/domain1"));

            await afdCustomDomain.RefreshValidationTokenAsync();
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Compute.Tests.Mock
{
    /// <summary> Test for OSVersion. </summary>
    public partial class OSVersionCollectionMockTests : MockTestBase
    {
        public OSVersionCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get Cloud Service OS Version
            string location = "westus2";
            string osVersionName = "WA-GUEST-OS-3.90_202010-02";

            var collection = GetArmClient().GetSubscription(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000")).GetOSVersions(location);
            await collection.GetAsync(osVersionName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: List Cloud Service OS Versions in a subscription
            string location = "westus2";

            var collection = GetArmClient().GetSubscription(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000")).GetOSVersions(location);
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.Cdn.Models;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Cdn.Tests.Mock
{
    /// <summary> Test for CdnCustomDomain. </summary>
    public partial class CdnCustomDomainMockTests : MockTestBase
    {
        public CdnCustomDomainMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: CustomDomains_Get
            var cdnCustomDomain = GetArmClient().GetCdnCustomDomain(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/RG/providers/Microsoft.Cdn/profiles/profile1/endpoints/endpoint1/customDomains/www-someDomain-net"));

            await cdnCustomDomain.GetAsync();
        }

        [RecordedTest]
        public async Task DeleteAsync()
        {
            // Example: CustomDomains_Delete
            var cdnCustomDomain = GetArmClient().GetCdnCustomDomain(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/RG/providers/Microsoft.Cdn/profiles/profile1/endpoints/endpoint1/customDomains/www-someDomain-net"));

            await cdnCustomDomain.DeleteAsync();
        }

        [RecordedTest]
        public async Task DisableCustomHttpsAsync()
        {
            // Example: CustomDomains_DisableCustomHttps
            var cdnCustomDomain = GetArmClient().GetCdnCustomDomain(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/RG/providers/Microsoft.Cdn/profiles/profile1/endpoints/endpoint1/customDomains/www-someDomain-net"));

            await cdnCustomDomain.DisableCustomHttpsAsync();
        }

        [RecordedTest]
        public async Task EnableCustomHttpsAsync()
        {
            // Example: CustomDomains_EnableCustomHttpsUsingCDNManagedCertificate
            var cdnCustomDomain = GetArmClient().GetCdnCustomDomain(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/RG/providers/Microsoft.Cdn/profiles/profile1/endpoints/endpoint1/customDomains/www-someDomain-net"));
            Cdn.Models.CustomDomainHttpsOptions customDomainHttpsParameters = null;

            await cdnCustomDomain.EnableCustomHttpsAsync(customDomainHttpsParameters);
        }

        [RecordedTest]
        public async Task EnableCustomHttpsAsync2()
        {
            // Example: CustomDomains_EnableCustomHttpsUsingYourOwnCertificate
            var cdnCustomDomain = GetArmClient().GetCdnCustomDomain(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/RG/providers/Microsoft.Cdn/profiles/profile1/endpoints/endpoint1/customDomains/www-someDomain-net"));
            Cdn.Models.CustomDomainHttpsOptions customDomainHttpsParameters = null;

            await cdnCustomDomain.EnableCustomHttpsAsync(customDomainHttpsParameters);
        }
    }
}

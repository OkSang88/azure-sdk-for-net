// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Compute;
using Azure.ResourceManager.Compute.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Compute.Tests.Mock
{
    /// <summary> Test for SharedGalleryImage. </summary>
    public partial class SharedGalleryImageCollectionMockTests : MockTestBase
    {
        public SharedGalleryImageCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get a gallery.
            string galleryImageName = "myGalleryImageName";

            var sharedGalleryId = Compute.SharedGallery.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myLocation", "galleryUniqueName");
            var collection = GetArmClient().GetSharedGallery(sharedGalleryId).GetSharedGalleryImages();
            await collection.GetAsync(galleryImageName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: Get a gallery.
            Compute.Models.SharedToValues? sharedTo = null;

            var sharedGalleryId = Compute.SharedGallery.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myLocation", "galleryUniqueName");
            var collection = GetArmClient().GetSharedGallery(sharedGalleryId).GetSharedGalleryImages();
            await foreach (var _ in collection.GetAllAsync(sharedTo))
            {
            }
        }
    }
}

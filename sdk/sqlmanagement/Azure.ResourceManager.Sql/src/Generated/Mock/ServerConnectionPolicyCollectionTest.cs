// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.Sql;
using Azure.ResourceManager.Sql.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Sql.Tests.Mock
{
    /// <summary> Test for ServerConnectionPolicy. </summary>
    public partial class ServerConnectionPolicyCollectionMockTests : MockTestBase
    {
        public ServerConnectionPolicyCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync()
        {
            // Example: Updates a server connection policy
            var collection = GetArmClient().GetSqlServer(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testrg/providers/Microsoft.Sql/servers/testserver")).GetServerConnectionPolicies();
            Sql.Models.ConnectionPolicyName connectionPolicyName = new Sql.Models.ConnectionPolicyName("default");
            Sql.ServerConnectionPolicyData parameters = new Sql.ServerConnectionPolicyData()
            {
                ConnectionType = new Sql.Models.ServerConnectionType("Redirect"),
            };

            await collection.CreateOrUpdateAsync(connectionPolicyName, parameters);
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Gets a server connection policy
            var collection = GetArmClient().GetSqlServer(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rgtest-12/providers/Microsoft.Sql/servers/servertest-6285")).GetServerConnectionPolicies();
            Sql.Models.ConnectionPolicyName connectionPolicyName = new Sql.Models.ConnectionPolicyName("default");

            await collection.GetAsync(connectionPolicyName);
        }

        [RecordedTest]
        public void GetAllAsync()
        {
            // Example: Lists a servers connection policies
            var collection = GetArmClient().GetSqlServer(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rgtest-12/providers/Microsoft.Sql/servers/servertest-6285")).GetServerConnectionPolicies();

            collection.GetAllAsync();
        }
    }
}

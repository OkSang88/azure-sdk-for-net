// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace ServiceFabricMeshManagementClient.Models
{
    /// <summary> Describes the average load trigger used for auto scaling. </summary>
    public partial class AverageLoadScalingTrigger : AutoScalingTrigger
    {
        /// <summary> Initializes a new instance of AverageLoadScalingTrigger. </summary>
        /// <param name="metric"> Description of the metric that is used for scaling. </param>
        /// <param name="lowerLoadThreshold"> Lower load threshold (if average load is below this threshold, service will scale down). </param>
        /// <param name="upperLoadThreshold"> Upper load threshold (if average load is above this threshold, service will scale up). </param>
        /// <param name="scaleIntervalInSeconds"> Scale interval that indicates how often will this trigger be checked. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="metric"/> is null. </exception>
        public AverageLoadScalingTrigger(AutoScalingMetric metric, double lowerLoadThreshold, double upperLoadThreshold, int scaleIntervalInSeconds)
        {
            if (metric == null)
            {
                throw new ArgumentNullException(nameof(metric));
            }

            Metric = metric;
            LowerLoadThreshold = lowerLoadThreshold;
            UpperLoadThreshold = upperLoadThreshold;
            ScaleIntervalInSeconds = scaleIntervalInSeconds;
            Kind = AutoScalingTriggerKind.AverageLoad;
        }

        /// <summary> Initializes a new instance of AverageLoadScalingTrigger. </summary>
        /// <param name="kind"> The type of auto scaling trigger. </param>
        /// <param name="metric"> Description of the metric that is used for scaling. </param>
        /// <param name="lowerLoadThreshold"> Lower load threshold (if average load is below this threshold, service will scale down). </param>
        /// <param name="upperLoadThreshold"> Upper load threshold (if average load is above this threshold, service will scale up). </param>
        /// <param name="scaleIntervalInSeconds"> Scale interval that indicates how often will this trigger be checked. </param>
        internal AverageLoadScalingTrigger(AutoScalingTriggerKind kind, AutoScalingMetric metric, double lowerLoadThreshold, double upperLoadThreshold, int scaleIntervalInSeconds) : base(kind)
        {
            Metric = metric;
            LowerLoadThreshold = lowerLoadThreshold;
            UpperLoadThreshold = upperLoadThreshold;
            ScaleIntervalInSeconds = scaleIntervalInSeconds;
            Kind = kind;
        }

        /// <summary> Description of the metric that is used for scaling. </summary>
        public AutoScalingMetric Metric { get; set; }
        /// <summary> Lower load threshold (if average load is below this threshold, service will scale down). </summary>
        public double LowerLoadThreshold { get; set; }
        /// <summary> Upper load threshold (if average load is above this threshold, service will scale up). </summary>
        public double UpperLoadThreshold { get; set; }
        /// <summary> Scale interval that indicates how often will this trigger be checked. </summary>
        public int ScaleIntervalInSeconds { get; set; }
    }
}

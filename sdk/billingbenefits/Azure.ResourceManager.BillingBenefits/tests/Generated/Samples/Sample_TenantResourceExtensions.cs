// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.BillingBenefits;
using Azure.ResourceManager.BillingBenefits.Models;

namespace Azure.ResourceManager.BillingBenefits.Samples
{
    public partial class Sample_TenantResourceExtensions
    {
        // SavingsPlanValidatePurchase
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task ValidatePurchase_SavingsPlanValidatePurchase()
        {
            // Generated from example definition: specification/billingbenefits/resource-manager/Microsoft.BillingBenefits/stable/2022-11-01/examples/SavingsPlanValidatePurchase.json
            // this example is just showing the usage of "ValidatePurchase" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this TenantResource created on azure
            // for more information of creating TenantResource, please refer to the document of TenantResource
            var tenantResource = client.GetTenants().GetAllAsync().GetAsyncEnumerator().Current;

            // invoke the operation and iterate over the result
            SavingsPlanPurchaseValidateContent content = new SavingsPlanPurchaseValidateContent()
            {
                Benefits =
{
new BillingBenefitsSavingsPlanOrderAliasData(new BillingBenefitsSku()
{
Name = "Compute_Savings_Plan",
})
{
DisplayName = "ComputeSavingsPlan_2021-07-01",
BillingScopeId = new ResourceIdentifier("/subscriptions/10000000-0000-0000-0000-000000000000"),
Term = BillingBenefitsTerm.P1Y,
AppliedScopeType = BillingBenefitsAppliedScopeType.Single,
AppliedScopeProperties = new BillingBenefitsAppliedScopeProperties()
{
ResourceGroupId = new ResourceIdentifier("/subscriptions/10000000-0000-0000-0000-000000000000/resourceGroups/testrg"),
},
Commitment = new BillingBenefitsCommitment()
{
Grain = BillingBenefitsCommitmentGrain.Hourly,
CurrencyCode = "USD",
Amount = 15.23,
},
},new BillingBenefitsSavingsPlanOrderAliasData(new BillingBenefitsSku()
{
Name = "Compute_Savings_Plan",
})
{
DisplayName = "ComputeSavingsPlan_2021-07-01",
BillingScopeId = new ResourceIdentifier("/subscriptions/10000000-0000-0000-0000-000000000000"),
Term = BillingBenefitsTerm.P1Y,
AppliedScopeType = BillingBenefitsAppliedScopeType.Single,
AppliedScopeProperties = new BillingBenefitsAppliedScopeProperties()
{
ResourceGroupId = new ResourceIdentifier("/subscriptions/10000000-0000-0000-0000-000000000000/resourceGroups/RG"),
},
Commitment = new BillingBenefitsCommitment()
{
Grain = BillingBenefitsCommitmentGrain.Hourly,
CurrencyCode = "USD",
Amount = 20,
},
}
},
            };
            await foreach (SavingsPlanValidateResult item in tenantResource.ValidatePurchaseAsync(content))
            {
                Console.WriteLine($"Succeeded: {item}");
            }

            Console.WriteLine($"Succeeded");
        }
    }
}

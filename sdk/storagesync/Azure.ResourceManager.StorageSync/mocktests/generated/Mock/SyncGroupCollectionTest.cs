// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.StorageSync.Tests.Mock;
using Azure.ResourceManager.StorageSync.Tests.Mock.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.StorageSync.Tests.Mock.Tests.Mock
{
    /// <summary> Test for SyncGroup. </summary>
    public partial class SyncGroupCollectionMockTests : MockTestBase
    {
        public SyncGroupCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: SyncGroups_Create
            string syncGroupName = "SampleSyncGroup_1";
            StorageSync.Tests.Mock.Models.SyncGroupCreateParameters parameters = new StorageSync.Tests.Mock.Models.SyncGroupCreateParameters()
            {
                Properties = new Dictionary<string, object>()
                {
                }
            ,
            };

            var storageSyncServiceId = StorageSync.Tests.Mock.StorageSyncService.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "SampleResourceGroup_1", "SampleStorageSyncService_1");
            var collection = GetArmClient().GetStorageSyncService(storageSyncServiceId).GetSyncGroups();
            await collection.CreateOrUpdateAsync(true, syncGroupName, parameters);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: SyncGroups_Get
            string syncGroupName = "SampleSyncGroup_1";

            var storageSyncServiceId = StorageSync.Tests.Mock.StorageSyncService.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "SampleResourceGroup_1", "SampleStorageSyncService_1");
            var collection = GetArmClient().GetStorageSyncService(storageSyncServiceId).GetSyncGroups();
            await collection.GetAsync(syncGroupName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: SyncGroups_ListByStorageSyncService

            var storageSyncServiceId = StorageSync.Tests.Mock.StorageSyncService.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "SampleResourceGroup_1", "SampleStorageSyncService_1");
            var collection = GetArmClient().GetStorageSyncService(storageSyncServiceId).GetSyncGroups();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

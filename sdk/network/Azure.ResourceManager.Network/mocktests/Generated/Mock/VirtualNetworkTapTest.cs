// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Network;
using Azure.ResourceManager.Network.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Network.Tests.Mock
{
    /// <summary> Test for VirtualNetworkTap. </summary>
    public partial class VirtualNetworkTapMockTests : MockTestBase
    {
        public VirtualNetworkTapMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get Virtual Network Tap
            var virtualNetworkTapId = Network.VirtualNetworkTap.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "testvtap");
            var virtualNetworkTap = GetArmClient().GetVirtualNetworkTap(virtualNetworkTapId);

            await virtualNetworkTap.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: Delete Virtual Network Tap resource
            var virtualNetworkTapId = Network.VirtualNetworkTap.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "test-vtap");
            var virtualNetworkTap = GetArmClient().GetVirtualNetworkTap(virtualNetworkTapId);

            await virtualNetworkTap.DeleteAsync();
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: Update virtual network tap tags
            var virtualNetworkTapId = Network.VirtualNetworkTap.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "test-vtap");
            var virtualNetworkTap = GetArmClient().GetVirtualNetworkTap(virtualNetworkTapId);
            Network.Models.TagsObject tapParameters = new Network.Models.TagsObject();

            await virtualNetworkTap.UpdateAsync(tapParameters);
        }
    }
}

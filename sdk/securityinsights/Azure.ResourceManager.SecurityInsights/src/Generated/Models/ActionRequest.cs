// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.SecurityInsights.Models
{
    /// <summary> Action for alert rule. </summary>
    public partial class ActionRequest : ResourceWithEtag
    {
        /// <summary> Initializes a new instance of ActionRequest. </summary>
        public ActionRequest()
        {
        }

        /// <summary> Initializes a new instance of ActionRequest. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="type"> The type. </param>
        /// <param name="systemData"> Azure Resource Manager metadata containing createdBy and modifiedBy information. </param>
        /// <param name="etag"> Etag of the azure resource. </param>
        /// <param name="logicAppResourceId"> Logic App Resource Id, /subscriptions/{my-subscription}/resourceGroups/{my-resource-group}/providers/Microsoft.Logic/workflows/{my-workflow-id}. </param>
        /// <param name="triggerUri"> Logic App Callback URL for this specific workflow. </param>
        internal ActionRequest(ResourceIdentifier id, string name, ResourceType type, SystemData systemData, string etag, string logicAppResourceId, string triggerUri) : base(id, name, type, systemData, etag)
        {
            LogicAppResourceId = logicAppResourceId;
            TriggerUri = triggerUri;
        }

        /// <summary> Logic App Resource Id, /subscriptions/{my-subscription}/resourceGroups/{my-resource-group}/providers/Microsoft.Logic/workflows/{my-workflow-id}. </summary>
        public string LogicAppResourceId { get; set; }
        /// <summary> Logic App Callback URL for this specific workflow. </summary>
        public string TriggerUri { get; set; }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Network;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Network.Tests.Mock
{
    /// <summary> Test for NetworkInterfaceTapConfiguration. </summary>
    public partial class NetworkInterfaceTapConfigurationCollectionMockTests : MockTestBase
    {
        public NetworkInterfaceTapConfigurationCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: Create Network Interface Tap Configurations
            string tapConfigurationName = "tapconfiguration1";
            Network.NetworkInterfaceTapConfigurationData tapConfigurationParameters = new Network.NetworkInterfaceTapConfigurationData()
            {
                VirtualNetworkTap = new Network.VirtualNetworkTapData()
                {
                    Id = "/subscriptions/subid/resourceGroups/testrg/providers/Microsoft.Network/virtualNetworkTaps/testvtap",
                },
            };

            var networkInterfaceId = Network.NetworkInterface.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg", "mynic");
            var collection = GetArmClient().GetNetworkInterface(networkInterfaceId).GetNetworkInterfaceTapConfigurations();
            await collection.CreateOrUpdateAsync(true, tapConfigurationName, tapConfigurationParameters);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get Network Interface Tap Configurations
            string tapConfigurationName = "tapconfiguration1";

            var networkInterfaceId = Network.NetworkInterface.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg", "mynic");
            var collection = GetArmClient().GetNetworkInterface(networkInterfaceId).GetNetworkInterfaceTapConfigurations();
            await collection.GetAsync(tapConfigurationName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: List virtual network tap configurations

            var networkInterfaceId = Network.NetworkInterface.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "mynic");
            var collection = GetArmClient().GetNetworkInterface(networkInterfaceId).GetNetworkInterfaceTapConfigurations();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Resources.Tests.Mock
{
    /// <summary> Test for TemplateSpecVersion. </summary>
    public partial class TemplateSpecVersionCollectionMockTests : MockTestBase
    {
        public TemplateSpecVersionCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: TemplateSpecVersionsCreateUpdate
            string templateSpecVersion = "v1.0";
            Resources.TemplateSpecVersionData templateSpecVersionModel = new Resources.TemplateSpecVersionData(location: "eastus")
            {
                Description = "This is version v1.0 of our template content",
                MainTemplate = new Dictionary<string, object>()
                {
                    ["$schema"] = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    ["contentVersion"] = "1.0.0.0",
                    ["parameters"] = new Dictionary<string, object>()
                    {
                    }
            ,
                    ["resources"] = new object[]
            {
            }
            ,
                }
            ,
            };

            var templateSpecId = Resources.TemplateSpec.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "templateSpecRG", "simpleTemplateSpec");
            var collection = GetArmClient().GetTemplateSpec(templateSpecId).GetTemplateSpecVersions();
            await collection.CreateOrUpdateAsync(templateSpecVersion, templateSpecVersionModel);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: TemplateSpecVersionsGet
            string templateSpecVersion = "v1.0";

            var templateSpecId = Resources.TemplateSpec.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "templateSpecRG", "simpleTemplateSpec");
            var collection = GetArmClient().GetTemplateSpec(templateSpecId).GetTemplateSpecVersions();
            await collection.GetAsync(templateSpecVersion);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: TemplateSpecVersions_List

            var templateSpecId = Resources.TemplateSpec.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "templateSpecRG", "simpleTemplateSpec");
            var collection = GetArmClient().GetTemplateSpec(templateSpecId).GetTemplateSpecVersions();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

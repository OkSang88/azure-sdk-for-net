// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;
using Insights.Models;

namespace Insights
{
    /// <summary> A class representing the ActivityLogAlertResource data model. </summary>
    public partial class ActivityLogAlertResourceData : TrackedResource
    {
        /// <summary> Initializes a new instance of ActivityLogAlertResourceData. </summary>
        /// <param name="location"> The location. </param>
        public ActivityLogAlertResourceData(AzureLocation location) : base(location)
        {
            Scopes = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of ActivityLogAlertResourceData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="type"> The type. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="scopes"> A list of resourceIds that will be used as prefixes. The alert will only apply to activityLogs with resourceIds that fall under one of these prefixes. This list must include at least one item. </param>
        /// <param name="enabled"> Indicates whether this activity log alert is enabled. If an activity log alert is not enabled, then none of its actions will be activated. </param>
        /// <param name="condition"> The condition that will cause this alert to activate. </param>
        /// <param name="actions"> The actions that will activate when the condition is met. </param>
        /// <param name="description"> A description of this activity log alert. </param>
        internal ActivityLogAlertResourceData(ResourceIdentifier id, string name, ResourceType type, IDictionary<string, string> tags, AzureLocation location, IList<string> scopes, bool? enabled, ActivityLogAlertAllOfCondition condition, ActivityLogAlertActionList actions, string description) : base(id, name, type, tags, location)
        {
            Scopes = scopes;
            Enabled = enabled;
            Condition = condition;
            Actions = actions;
            Description = description;
        }

        /// <summary> A list of resourceIds that will be used as prefixes. The alert will only apply to activityLogs with resourceIds that fall under one of these prefixes. This list must include at least one item. </summary>
        public IList<string> Scopes { get; }
        /// <summary> Indicates whether this activity log alert is enabled. If an activity log alert is not enabled, then none of its actions will be activated. </summary>
        public bool? Enabled { get; set; }
        /// <summary> The condition that will cause this alert to activate. </summary>
        public ActivityLogAlertAllOfCondition Condition { get; set; }
        /// <summary> The actions that will activate when the condition is met. </summary>
        public ActivityLogAlertActionList Actions { get; set; }
        /// <summary> A description of this activity log alert. </summary>
        public string Description { get; set; }
    }
}

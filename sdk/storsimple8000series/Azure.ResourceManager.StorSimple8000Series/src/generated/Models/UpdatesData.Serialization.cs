// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace StorSimple8000SeriesManagementClient
{
    public partial class UpdatesData : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Kind))
            {
                writer.WritePropertyName("kind");
                writer.WriteStringValue(Kind);
            }
            writer.WritePropertyName("properties");
            writer.WriteStartObject();
            if (Optional.IsDefined(RegularUpdatesAvailable))
            {
                writer.WritePropertyName("regularUpdatesAvailable");
                writer.WriteBooleanValue(RegularUpdatesAvailable.Value);
            }
            if (Optional.IsDefined(MaintenanceModeUpdatesAvailable))
            {
                writer.WritePropertyName("maintenanceModeUpdatesAvailable");
                writer.WriteBooleanValue(MaintenanceModeUpdatesAvailable.Value);
            }
            if (Optional.IsDefined(IsUpdateInProgress))
            {
                writer.WritePropertyName("isUpdateInProgress");
                writer.WriteBooleanValue(IsUpdateInProgress.Value);
            }
            if (Optional.IsDefined(LastUpdatedTime))
            {
                writer.WritePropertyName("lastUpdatedTime");
                writer.WriteStringValue(LastUpdatedTime.Value, "O");
            }
            writer.WriteEndObject();
            writer.WriteEndObject();
        }

        internal static UpdatesData DeserializeUpdatesData(JsonElement element)
        {
            Optional<string> kind = default;
            ResourceIdentifier id = default;
            string name = default;
            ResourceType type = default;
            Optional<bool> regularUpdatesAvailable = default;
            Optional<bool> maintenanceModeUpdatesAvailable = default;
            Optional<bool> isUpdateInProgress = default;
            Optional<DateTimeOffset> lastUpdatedTime = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("kind"))
                {
                    kind = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("id"))
                {
                    id = new ResourceIdentifier(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("properties"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        if (property0.NameEquals("regularUpdatesAvailable"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            regularUpdatesAvailable = property0.Value.GetBoolean();
                            continue;
                        }
                        if (property0.NameEquals("maintenanceModeUpdatesAvailable"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            maintenanceModeUpdatesAvailable = property0.Value.GetBoolean();
                            continue;
                        }
                        if (property0.NameEquals("isUpdateInProgress"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            isUpdateInProgress = property0.Value.GetBoolean();
                            continue;
                        }
                        if (property0.NameEquals("lastUpdatedTime"))
                        {
                            if (property0.Value.ValueKind == JsonValueKind.Null)
                            {
                                property0.ThrowNonNullablePropertyIsNull();
                                continue;
                            }
                            lastUpdatedTime = property0.Value.GetDateTimeOffset("O");
                            continue;
                        }
                    }
                    continue;
                }
            }
            return new UpdatesData(id, name, type, kind.Value, Optional.ToNullable(regularUpdatesAvailable), Optional.ToNullable(maintenanceModeUpdatesAvailable), Optional.ToNullable(isUpdateInProgress), Optional.ToNullable(lastUpdatedTime));
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;
using StorSimple8000SeriesManagementClient;

namespace StorSimple8000SeriesManagementClient.Tests.Mock
{
    /// <summary> Test for BandwidthSetting. </summary>
    public partial class BandwidthSettingMockTests : MockTestBase
    {
        public BandwidthSettingMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: BandwidthSettingsGet
            var bandwidthSettingId = StorSimple8000SeriesManagementClient.BandwidthSetting.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ResourceGroupForSDKTest", "ManagerForSDKTest1", "bandwidthSetting1");
            var bandwidthSetting = GetArmClient().GetBandwidthSetting(bandwidthSettingId);

            await bandwidthSetting.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: BandwidthSettingsDelete
            var bandwidthSettingId = StorSimple8000SeriesManagementClient.BandwidthSetting.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ResourceGroupForSDKTest", "ManagerForSDKTest1", "BWSForTest");
            var bandwidthSetting = GetArmClient().GetBandwidthSetting(bandwidthSettingId);

            await bandwidthSetting.DeleteAsync(true);
        }
    }
}

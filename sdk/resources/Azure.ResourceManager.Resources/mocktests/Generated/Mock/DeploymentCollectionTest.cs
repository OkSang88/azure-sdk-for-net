// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Resources.Tests.Mock
{
    /// <summary> Test for Deployment. </summary>
    public partial class DeploymentCollectionMockTests : MockTestBase
    {
        public DeploymentCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: Create deployment at a given scope.
            string deploymentName = "my-deployment";
            Models.DeploymentInput parameters = new Models.DeploymentInput(properties: new Models.DeploymentProperties(mode: new Models.DeploymentMode("Incremental"))
            {
                TemplateLink = new Models.TemplateLink()
                {
                    Uri = "https://example.com/exampleTemplate.json",
                },
                Parameters = new Dictionary<string, object>()
                {
                }
            ,
            })
            {
                Location = "eastus",
            };

            var collection = GetArmClient().GetTenants().GetAll().GetEnumerator().Current.GetDeployments();
            await collection.CreateOrUpdateAsync(true, deploymentName, parameters);
        }
    }
}

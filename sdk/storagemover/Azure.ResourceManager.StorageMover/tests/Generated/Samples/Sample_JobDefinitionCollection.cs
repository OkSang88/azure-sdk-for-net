// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.StorageMover;
using Azure.ResourceManager.StorageMover.Models;

namespace Azure.ResourceManager.StorageMover.Samples
{
    public partial class Sample_JobDefinitionCollection
    {
        // JobDefinitions_List
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetAll_JobDefinitionsList()
        {
            // Generated from example definition: specification/storagemover/resource-manager/Microsoft.StorageMover/preview/2022-07-01-preview/examples/JobDefinitions_List.json
            // this example is just showing the usage of "JobDefinitions_List" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this StorageMoverProjectResource created on azure
            // for more information of creating StorageMoverProjectResource, please refer to the document of StorageMoverProjectResource
            string subscriptionId = "11111111-2222-3333-4444-555555555555";
            string resourceGroupName = "examples-rg";
            string storageMoverName = "examples-storageMoverName";
            string projectName = "examples-projectName";
            ResourceIdentifier storageMoverProjectResourceId = StorageMoverProjectResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, storageMoverName, projectName);
            StorageMoverProjectResource storageMoverProject = client.GetStorageMoverProjectResource(storageMoverProjectResourceId);

            // get the collection of this JobDefinitionResource
            JobDefinitionCollection collection = storageMoverProject.GetJobDefinitions();

            // invoke the operation and iterate over the result
            await foreach (JobDefinitionResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                JobDefinitionData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine($"Succeeded");
        }

        // JobDefinitions_Get
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_JobDefinitionsGet()
        {
            // Generated from example definition: specification/storagemover/resource-manager/Microsoft.StorageMover/preview/2022-07-01-preview/examples/JobDefinitions_Get.json
            // this example is just showing the usage of "JobDefinitions_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this StorageMoverProjectResource created on azure
            // for more information of creating StorageMoverProjectResource, please refer to the document of StorageMoverProjectResource
            string subscriptionId = "11111111-2222-3333-4444-555555555555";
            string resourceGroupName = "examples-rg";
            string storageMoverName = "examples-storageMoverName";
            string projectName = "examples-projectName";
            ResourceIdentifier storageMoverProjectResourceId = StorageMoverProjectResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, storageMoverName, projectName);
            StorageMoverProjectResource storageMoverProject = client.GetStorageMoverProjectResource(storageMoverProjectResourceId);

            // get the collection of this JobDefinitionResource
            JobDefinitionCollection collection = storageMoverProject.GetJobDefinitions();

            // invoke the operation
            string jobDefinitionName = "examples-jobDefinitionName";
            JobDefinitionResource result = await collection.GetAsync(jobDefinitionName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            JobDefinitionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // JobDefinitions_Get
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Exists_JobDefinitionsGet()
        {
            // Generated from example definition: specification/storagemover/resource-manager/Microsoft.StorageMover/preview/2022-07-01-preview/examples/JobDefinitions_Get.json
            // this example is just showing the usage of "JobDefinitions_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this StorageMoverProjectResource created on azure
            // for more information of creating StorageMoverProjectResource, please refer to the document of StorageMoverProjectResource
            string subscriptionId = "11111111-2222-3333-4444-555555555555";
            string resourceGroupName = "examples-rg";
            string storageMoverName = "examples-storageMoverName";
            string projectName = "examples-projectName";
            ResourceIdentifier storageMoverProjectResourceId = StorageMoverProjectResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, storageMoverName, projectName);
            StorageMoverProjectResource storageMoverProject = client.GetStorageMoverProjectResource(storageMoverProjectResourceId);

            // get the collection of this JobDefinitionResource
            JobDefinitionCollection collection = storageMoverProject.GetJobDefinitions();

            // invoke the operation
            string jobDefinitionName = "examples-jobDefinitionName";
            bool result = await collection.ExistsAsync(jobDefinitionName);

            Console.WriteLine($"Succeeded: {result}");
        }

        // JobDefinitions_CreateOrUpdate
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task CreateOrUpdate_JobDefinitionsCreateOrUpdate()
        {
            // Generated from example definition: specification/storagemover/resource-manager/Microsoft.StorageMover/preview/2022-07-01-preview/examples/JobDefinitions_CreateOrUpdate.json
            // this example is just showing the usage of "JobDefinitions_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this StorageMoverProjectResource created on azure
            // for more information of creating StorageMoverProjectResource, please refer to the document of StorageMoverProjectResource
            string subscriptionId = "11111111-2222-3333-4444-555555555555";
            string resourceGroupName = "examples-rg";
            string storageMoverName = "examples-storageMoverName";
            string projectName = "examples-projectName";
            ResourceIdentifier storageMoverProjectResourceId = StorageMoverProjectResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, storageMoverName, projectName);
            StorageMoverProjectResource storageMoverProject = client.GetStorageMoverProjectResource(storageMoverProjectResourceId);

            // get the collection of this JobDefinitionResource
            JobDefinitionCollection collection = storageMoverProject.GetJobDefinitions();

            // invoke the operation
            string jobDefinitionName = "examples-jobDefinitionName";
            JobDefinitionData data = new JobDefinitionData(StorageMoverCopyMode.Additive, "examples-sourceEndpointName", "examples-targetEndpointName")
            {
                Description = "Example Job Definition Description",
                SourceSubpath = "/",
                TargetSubpath = "/",
                AgentName = "migration-agent",
            };
            ArmOperation<JobDefinitionResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, jobDefinitionName, data);
            JobDefinitionResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            JobDefinitionData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}

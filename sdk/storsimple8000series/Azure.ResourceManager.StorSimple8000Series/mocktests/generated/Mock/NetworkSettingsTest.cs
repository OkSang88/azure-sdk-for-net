// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;
using StorSimple8000SeriesManagementClient;
using StorSimple8000SeriesManagementClient.Models;

namespace StorSimple8000SeriesManagementClient.Tests.Mock
{
    /// <summary> Test for NetworkSettings. </summary>
    public partial class NetworkSettingsMockTests : MockTestBase
    {
        public NetworkSettingsMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: DeviceSettingsGetNetworkSettings
            var networkSettingsId = StorSimple8000SeriesManagementClient.NetworkSettings.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ResourceGroupForSDKTest", "ManagerForSDKTest1", "Device05ForSDKTest");
            var networkSettings = GetArmClient().GetNetworkSettings(networkSettingsId);

            await networkSettings.GetAsync();
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: DeviceSettingsUpdateNetworkSettings
            var networkSettingsId = StorSimple8000SeriesManagementClient.NetworkSettings.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "ResourceGroupForSDKTest", "ManagerForSDKTest1", "Device05ForSDKTest");
            var networkSettings = GetArmClient().GetNetworkSettings(networkSettingsId);
            StorSimple8000SeriesManagementClient.Models.NetworkSettingsPatch parameters = new StorSimple8000SeriesManagementClient.Models.NetworkSettingsPatch()
            {
                DnsSettings = new StorSimple8000SeriesManagementClient.Models.DNSSettings()
                {
                    PrimaryDnsServer = "10.171.65.60",
                },
            };

            await networkSettings.UpdateAsync(true, parameters);
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;
using MixedRealityClient.Models;

namespace MixedRealityClient
{
    /// <summary> A class representing the RemoteRenderingAccount data model. </summary>
    public partial class RemoteRenderingAccountData : TrackedResource
    {
        /// <summary> Initializes a new instance of RemoteRenderingAccountData. </summary>
        /// <param name="location"> The location. </param>
        public RemoteRenderingAccountData(AzureLocation location) : base(location)
        {
        }

        /// <summary> Initializes a new instance of RemoteRenderingAccountData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="type"> The type. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="identity"> The identity associated with this account. </param>
        /// <param name="plan"> The plan associated with this account. </param>
        /// <param name="sku"> The sku associated with this account. </param>
        /// <param name="kind"> The kind of account, if supported. </param>
        /// <param name="systemData"> System metadata for this account. </param>
        /// <param name="storageAccountName"> The name of the storage account associated with this accountId. </param>
        /// <param name="accountId"> unique id of certain account. </param>
        /// <param name="accountDomain"> Correspond domain name of certain Spatial Anchors Account. </param>
        internal RemoteRenderingAccountData(ResourceIdentifier id, string name, ResourceType type, IDictionary<string, string> tags, AzureLocation location, Identity identity, Identity plan, Models.Sku sku, Models.Sku kind, SystemData systemData, string storageAccountName, string accountId, string accountDomain) : base(id, name, type, tags, location)
        {
            Identity = identity;
            Plan = plan;
            Sku = sku;
            Kind = kind;
            SystemData = systemData;
            StorageAccountName = storageAccountName;
            AccountId = accountId;
            AccountDomain = accountDomain;
        }

        /// <summary> The identity associated with this account. </summary>
        public Identity Identity { get; set; }
        /// <summary> The plan associated with this account. </summary>
        public Identity Plan { get; set; }
        /// <summary> The sku associated with this account. </summary>
        public Models.Sku Sku { get; set; }
        /// <summary> The kind of account, if supported. </summary>
        public Models.Sku Kind { get; set; }
        /// <summary> System metadata for this account. </summary>
        public SystemData SystemData { get; }
        /// <summary> The name of the storage account associated with this accountId. </summary>
        public string StorageAccountName { get; set; }
        /// <summary> unique id of certain account. </summary>
        public string AccountId { get; }
        /// <summary> Correspond domain name of certain Spatial Anchors Account. </summary>
        public string AccountDomain { get; }
    }
}

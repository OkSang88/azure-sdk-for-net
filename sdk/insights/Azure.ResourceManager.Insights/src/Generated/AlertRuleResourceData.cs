// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;
using Insights.Models;

namespace Insights
{
    /// <summary> A class representing the AlertRuleResource data model. </summary>
    public partial class AlertRuleResourceData : TrackedResource
    {
        /// <summary> Initializes a new instance of AlertRuleResourceData. </summary>
        /// <param name="location"> The location. </param>
        /// <param name="namePropertiesName"> the name of the alert rule. </param>
        /// <param name="isEnabled"> the flag that indicates whether the alert rule is enabled. </param>
        /// <param name="condition"> the condition that results in the alert rule being activated. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="namePropertiesName"/> or <paramref name="condition"/> is null. </exception>
        public AlertRuleResourceData(AzureLocation location, string namePropertiesName, bool isEnabled, RuleCondition condition) : base(location)
        {
            if (namePropertiesName == null)
            {
                throw new ArgumentNullException(nameof(namePropertiesName));
            }
            if (condition == null)
            {
                throw new ArgumentNullException(nameof(condition));
            }

            NamePropertiesName = namePropertiesName;
            IsEnabled = isEnabled;
            Condition = condition;
            Actions = new ChangeTrackingList<RuleAction>();
        }

        /// <summary> Initializes a new instance of AlertRuleResourceData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="type"> The type. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="namePropertiesName"> the name of the alert rule. </param>
        /// <param name="description"> the description of the alert rule that will be included in the alert email. </param>
        /// <param name="isEnabled"> the flag that indicates whether the alert rule is enabled. </param>
        /// <param name="condition"> the condition that results in the alert rule being activated. </param>
        /// <param name="actions"> the array of actions that are performed when the alert rule becomes active, and when an alert condition is resolved. </param>
        /// <param name="lastUpdatedTime"> Last time the rule was updated in ISO8601 format. </param>
        internal AlertRuleResourceData(ResourceIdentifier id, string name, ResourceType type, IDictionary<string, string> tags, AzureLocation location, string namePropertiesName, string description, bool isEnabled, RuleCondition condition, IList<RuleAction> actions, DateTimeOffset? lastUpdatedTime) : base(id, name, type, tags, location)
        {
            NamePropertiesName = namePropertiesName;
            Description = description;
            IsEnabled = isEnabled;
            Condition = condition;
            Actions = actions;
            LastUpdatedTime = lastUpdatedTime;
        }

        /// <summary> the name of the alert rule. </summary>
        public string NamePropertiesName { get; set; }
        /// <summary> the description of the alert rule that will be included in the alert email. </summary>
        public string Description { get; set; }
        /// <summary> the flag that indicates whether the alert rule is enabled. </summary>
        public bool IsEnabled { get; set; }
        /// <summary> the condition that results in the alert rule being activated. </summary>
        public RuleCondition Condition { get; set; }
        /// <summary> the array of actions that are performed when the alert rule becomes active, and when an alert condition is resolved. </summary>
        public IList<RuleAction> Actions { get; }
        /// <summary> Last time the rule was updated in ISO8601 format. </summary>
        public DateTimeOffset? LastUpdatedTime { get; }
    }
}

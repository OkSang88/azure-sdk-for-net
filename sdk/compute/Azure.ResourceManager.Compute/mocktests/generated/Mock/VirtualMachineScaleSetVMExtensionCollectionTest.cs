// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.Compute;
using Azure.ResourceManager.Compute.Models;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Compute.Tests.Mock
{
    /// <summary> Test for VirtualMachineScaleSetVMExtension. </summary>
    public partial class VirtualMachineScaleSetVMExtensionCollectionMockTests : MockTestBase
    {
        public VirtualMachineScaleSetVMExtensionCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync()
        {
            // Example: Create VirtualMachineScaleSet VM extension.
            var collection = GetArmClient().GetVirtualMachineScaleSetVM(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachineScaleSets/myvmScaleSet/virtualMachines/0")).GetVirtualMachineScaleSetVMExtensions();
            string vmExtensionName = "myVMExtension";
            Compute.VirtualMachineScaleSetVMExtensionData extensionParameters = new Compute.VirtualMachineScaleSetVMExtensionData()
            {
                Publisher = "extPublisher",
                TypePropertiesType = "extType",
                TypeHandlerVersion = "1.2",
                AutoUpgradeMinorVersion = true,
                Settings = new Dictionary<string, object>()
                {
                    ["UserName"] = "xyz@microsoft.com",
                }
            ,
            };

            await collection.CreateOrUpdateAsync(vmExtensionName, extensionParameters);
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get VirtualMachineScaleSet VM extension.
            var collection = GetArmClient().GetVirtualMachineScaleSetVM(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachineScaleSets/myvmScaleSet/virtualMachines/0")).GetVirtualMachineScaleSetVMExtensions();
            string vmExtensionName = "myVMExtension";
            string expand = null;

            await collection.GetAsync(vmExtensionName, expand);
        }

        [RecordedTest]
        public async Task GetAllAsync()
        {
            // Example: List extensions in Vmss instance.
            var collection = GetArmClient().GetVirtualMachineScaleSetVM(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachineScaleSets/myvmScaleSet/virtualMachines/0")).GetVirtualMachineScaleSetVMExtensions();
            string expand = null;

            await collection.GetAllAsync(expand);
        }
    }
}

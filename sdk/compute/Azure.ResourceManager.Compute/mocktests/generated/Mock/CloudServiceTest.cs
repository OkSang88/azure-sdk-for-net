// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.Compute.Models;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Compute.Tests.Mock
{
    /// <summary> Test for CloudService. </summary>
    public partial class CloudServiceMockTests : MockTestBase
    {
        public CloudServiceMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get Cloud Service with Multiple Roles and RDP Extension
            var cloudService = GetArmClient().GetCloudService(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/ConstosoRG/providers/Microsoft.Compute/cloudServices/{{cs-name}}"));

            await cloudService.GetAsync();
        }

        [RecordedTest]
        public async Task DeleteAsync()
        {
            // Example: Delete Cloud Service
            var cloudService = GetArmClient().GetCloudService(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/ConstosoRG/providers/Microsoft.Compute/cloudServices/{{cs-name}}"));

            await cloudService.DeleteAsync();
        }

        [RecordedTest]
        public async Task UpdateAsync()
        {
            // Example: Update existing Cloud Service to add tags
            var cloudService = GetArmClient().GetCloudService(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/ConstosoRG/providers/Microsoft.Compute/cloudServices/{{cs-name}}"));
            Compute.Models.CloudServiceUpdate parameters = new Compute.Models.CloudServiceUpdate();

            await cloudService.UpdateAsync(parameters);
        }

        [RecordedTest]
        public async Task GetInstanceViewAsync()
        {
            // Example: Get Cloud Service Instance View with Multiple Roles
            var cloudService = GetArmClient().GetCloudService(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/ConstosoRG/providers/Microsoft.Compute/cloudServices/{{cs-name}}"));

            await cloudService.GetInstanceViewAsync();
        }

        [RecordedTest]
        public async Task PowerOnAsync()
        {
            // Example: Start Cloud Service
            var cloudService = GetArmClient().GetCloudService(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/ConstosoRG/providers/Microsoft.Compute/cloudServices/{{cs-name}}"));

            await cloudService.PowerOnAsync();
        }

        [RecordedTest]
        public async Task PowerOffAsync()
        {
            // Example: Stop or PowerOff Cloud Service
            var cloudService = GetArmClient().GetCloudService(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/ConstosoRG/providers/Microsoft.Compute/cloudServices/{{cs-name}}"));

            await cloudService.PowerOffAsync();
        }

        [RecordedTest]
        public async Task RestartAsync()
        {
            // Example: Restart Cloud Service Role Instances
            var cloudService = GetArmClient().GetCloudService(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/ConstosoRG/providers/Microsoft.Compute/cloudServices/{{cs-name}}"));
            Compute.Models.RoleInstances parameters = new Compute.Models.RoleInstances(roleInstancesValue: new List<string>()
{
"ContosoFrontend_IN_0","ContosoBackend_IN_1",});

            await cloudService.RestartAsync(parameters);
        }

        [RecordedTest]
        public async Task ReimageAsync()
        {
            // Example: Reimage Cloud Service Role Instances
            var cloudService = GetArmClient().GetCloudService(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/ConstosoRG/providers/Microsoft.Compute/cloudServices/{{cs-name}}"));
            Compute.Models.RoleInstances parameters = new Compute.Models.RoleInstances(roleInstancesValue: new List<string>()
{
"ContosoFrontend_IN_0","ContosoBackend_IN_1",});

            await cloudService.ReimageAsync(parameters);
        }

        [RecordedTest]
        public async Task RebuildAsync()
        {
            // Example: Rebuild Cloud Service Role Instances
            var cloudService = GetArmClient().GetCloudService(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/ConstosoRG/providers/Microsoft.Compute/cloudServices/{{cs-name}}"));
            Compute.Models.RoleInstances parameters = new Compute.Models.RoleInstances(roleInstancesValue: new List<string>()
{
"ContosoFrontend_IN_0","ContosoBackend_IN_1",});

            await cloudService.RebuildAsync(parameters);
        }

        [RecordedTest]
        public async Task DeleteInstancesAsync()
        {
            // Example: Delete Cloud Service Role Instances
            var cloudService = GetArmClient().GetCloudService(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/ConstosoRG/providers/Microsoft.Compute/cloudServices/{{cs-name}}"));
            Compute.Models.RoleInstances parameters = new Compute.Models.RoleInstances(roleInstancesValue: new List<string>()
{
"ContosoFrontend_IN_0","ContosoBackend_IN_1",});

            await cloudService.DeleteInstancesAsync(parameters);
        }

        [RecordedTest]
        public async Task WalkUpdateDomainCloudServicesUpdateDomainAsync()
        {
            // Example: Update Cloud Service to specified Domain
            var cloudService = GetArmClient().GetCloudService(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/ConstosoRG/providers/Microsoft.Compute/cloudServices/{{cs-name}}"));
            int updateDomain = 1;
            Compute.Models.UpdateDomain parameters = null;

            await cloudService.WalkUpdateDomainCloudServicesUpdateDomainAsync(updateDomain, parameters);
        }

        [RecordedTest]
        public async Task GetUpdateDomainCloudServicesUpdateDomainAsync()
        {
            // Example: Get Cloud Service Update Domain
            var cloudService = GetArmClient().GetCloudService(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/ConstosoRG/providers/Microsoft.Compute/cloudServices/{{cs-name}}"));
            int updateDomain = 1;

            await cloudService.GetUpdateDomainCloudServicesUpdateDomainAsync(updateDomain);
        }

        [RecordedTest]
        public void GetUpdateDomainsCloudServicesUpdateDomainsAsync()
        {
            // Example: List Update Domains in Cloud Service
            var cloudService = GetArmClient().GetCloudService(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/ConstosoRG/providers/Microsoft.Compute/cloudServices/{{cs-name}}"));

            cloudService.GetUpdateDomainsCloudServicesUpdateDomainsAsync();
        }
    }
}

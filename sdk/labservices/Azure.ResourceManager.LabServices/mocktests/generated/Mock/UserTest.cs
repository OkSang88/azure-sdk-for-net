// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;
using LabServicesClient;
using LabServicesClient.Models;

namespace LabServicesClient.Tests.Mock
{
    /// <summary> Test for User. </summary>
    public partial class UserMockTests : MockTestBase
    {
        public UserMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: getUser
            var userId = LabServicesClient.User.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg123", "testlab", "testuser");
            var user = GetArmClient().GetUser(userId);

            await user.GetAsync();
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: deleteUser
            var userId = LabServicesClient.User.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg123", "testlab", "testuser");
            var user = GetArmClient().GetUser(userId);

            await user.DeleteAsync(true);
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: patchUser
            var userId = LabServicesClient.User.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg123", "testlab", "testuser");
            var user = GetArmClient().GetUser(userId);
            LabServicesClient.Models.UserUpdate body = new LabServicesClient.Models.UserUpdate()
            {
                AdditionalUsageQuota = TimeSpan.Parse("20:00"),
            };

            await user.UpdateAsync(true, body);
        }

        [RecordedTest]
        public async Task Invite()
        {
            // Example: inviteUser
            var userId = LabServicesClient.User.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "testrg123", "testlab", "testuser");
            var user = GetArmClient().GetUser(userId);
            LabServicesClient.Models.InviteBody body = new LabServicesClient.Models.InviteBody()
            {
                Text = "Invitation to lab testlab",
            };

            await user.InviteAsync(true, body);
        }
    }
}

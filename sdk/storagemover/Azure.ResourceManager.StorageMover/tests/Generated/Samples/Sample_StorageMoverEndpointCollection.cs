// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.StorageMover;
using Azure.ResourceManager.StorageMover.Models;

namespace Azure.ResourceManager.StorageMover.Samples
{
    public partial class Sample_StorageMoverEndpointCollection
    {
        // Endpoints_List
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetAll_EndpointsList()
        {
            // Generated from example definition: specification/storagemover/resource-manager/Microsoft.StorageMover/preview/2022-07-01-preview/examples/Endpoints_List.json
            // this example is just showing the usage of "Endpoints_List" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this StorageMoverResource created on azure
            // for more information of creating StorageMoverResource, please refer to the document of StorageMoverResource
            string subscriptionId = "11111111-2222-3333-4444-555555555555";
            string resourceGroupName = "examples-rg";
            string storageMoverName = "examples-storageMoverName";
            ResourceIdentifier storageMoverResourceId = StorageMoverResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, storageMoverName);
            StorageMoverResource storageMover = client.GetStorageMoverResource(storageMoverResourceId);

            // get the collection of this StorageMoverEndpointResource
            StorageMoverEndpointCollection collection = storageMover.GetStorageMoverEndpoints();

            // invoke the operation and iterate over the result
            await foreach (StorageMoverEndpointResource item in collection.GetAllAsync())
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                StorageMoverEndpointData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine($"Succeeded");
        }

        // Endpoints_Get
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_EndpointsGet()
        {
            // Generated from example definition: specification/storagemover/resource-manager/Microsoft.StorageMover/preview/2022-07-01-preview/examples/Endpoints_Get.json
            // this example is just showing the usage of "Endpoints_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this StorageMoverResource created on azure
            // for more information of creating StorageMoverResource, please refer to the document of StorageMoverResource
            string subscriptionId = "11111111-2222-3333-4444-555555555555";
            string resourceGroupName = "examples-rg";
            string storageMoverName = "examples-storageMoverName";
            ResourceIdentifier storageMoverResourceId = StorageMoverResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, storageMoverName);
            StorageMoverResource storageMover = client.GetStorageMoverResource(storageMoverResourceId);

            // get the collection of this StorageMoverEndpointResource
            StorageMoverEndpointCollection collection = storageMover.GetStorageMoverEndpoints();

            // invoke the operation
            string endpointName = "examples-endpointName";
            StorageMoverEndpointResource result = await collection.GetAsync(endpointName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            StorageMoverEndpointData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Endpoints_Get
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Exists_EndpointsGet()
        {
            // Generated from example definition: specification/storagemover/resource-manager/Microsoft.StorageMover/preview/2022-07-01-preview/examples/Endpoints_Get.json
            // this example is just showing the usage of "Endpoints_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this StorageMoverResource created on azure
            // for more information of creating StorageMoverResource, please refer to the document of StorageMoverResource
            string subscriptionId = "11111111-2222-3333-4444-555555555555";
            string resourceGroupName = "examples-rg";
            string storageMoverName = "examples-storageMoverName";
            ResourceIdentifier storageMoverResourceId = StorageMoverResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, storageMoverName);
            StorageMoverResource storageMover = client.GetStorageMoverResource(storageMoverResourceId);

            // get the collection of this StorageMoverEndpointResource
            StorageMoverEndpointCollection collection = storageMover.GetStorageMoverEndpoints();

            // invoke the operation
            string endpointName = "examples-endpointName";
            bool result = await collection.ExistsAsync(endpointName);

            Console.WriteLine($"Succeeded: {result}");
        }

        // Endpoints_CreateOrUpdate
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task CreateOrUpdate_EndpointsCreateOrUpdate()
        {
            // Generated from example definition: specification/storagemover/resource-manager/Microsoft.StorageMover/preview/2022-07-01-preview/examples/Endpoints_CreateOrUpdate.json
            // this example is just showing the usage of "Endpoints_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this StorageMoverResource created on azure
            // for more information of creating StorageMoverResource, please refer to the document of StorageMoverResource
            string subscriptionId = "11111111-2222-3333-4444-555555555555";
            string resourceGroupName = "examples-rg";
            string storageMoverName = "examples-storageMoverName";
            ResourceIdentifier storageMoverResourceId = StorageMoverResource.CreateResourceIdentifier(subscriptionId, resourceGroupName, storageMoverName);
            StorageMoverResource storageMover = client.GetStorageMoverResource(storageMoverResourceId);

            // get the collection of this StorageMoverEndpointResource
            StorageMoverEndpointCollection collection = storageMover.GetStorageMoverEndpoints();

            // invoke the operation
            string endpointName = "examples-endpointName";
            StorageMoverEndpointData data = new StorageMoverEndpointData(new AzureStorageBlobContainerEndpointProperties("/subscriptions/11111111-2222-3333-4444-555555555555/resourceGroups/examples-rg/providers/Microsoft.Storage/storageAccounts/examples-storageAccountName/", "examples-blobContainerName")
            {
                Description = "Example Storage Container Endpoint Description",
            });
            ArmOperation<StorageMoverEndpointResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, endpointName, data);
            StorageMoverEndpointResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            StorageMoverEndpointData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.Compute;
using Azure.ResourceManager.Compute.Models;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Compute.Tests.Mock
{
    /// <summary> Test for AvailabilitySet. </summary>
    public partial class AvailabilitySetCollectionMockTests : MockTestBase
    {
        public AvailabilitySetCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdateAsync()
        {
            // Example: Create an availability set.
            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup")).GetAvailabilitySets();
            string availabilitySetName = "myAvailabilitySet";
            Compute.AvailabilitySetData parameters = new Compute.AvailabilitySetData(location: "westus")
            {
                PlatformUpdateDomainCount = 20,
                PlatformFaultDomainCount = 2,
            };

            await collection.CreateOrUpdateAsync(availabilitySetName, parameters);
        }
    }
}

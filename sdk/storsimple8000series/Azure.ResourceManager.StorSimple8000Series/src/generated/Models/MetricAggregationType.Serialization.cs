// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace StorSimple8000SeriesManagementClient.Models
{
    internal static partial class MetricAggregationTypeExtensions
    {
        public static string ToSerialString(this MetricAggregationType value) => value switch
        {
            MetricAggregationType.Average => "Average",
            MetricAggregationType.Last => "Last",
            MetricAggregationType.Maximum => "Maximum",
            MetricAggregationType.Minimum => "Minimum",
            MetricAggregationType.None => "None",
            MetricAggregationType.Total => "Total",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown MetricAggregationType value.")
        };

        public static MetricAggregationType ToMetricAggregationType(this string value)
        {
            if (string.Equals(value, "Average", StringComparison.InvariantCultureIgnoreCase)) return MetricAggregationType.Average;
            if (string.Equals(value, "Last", StringComparison.InvariantCultureIgnoreCase)) return MetricAggregationType.Last;
            if (string.Equals(value, "Maximum", StringComparison.InvariantCultureIgnoreCase)) return MetricAggregationType.Maximum;
            if (string.Equals(value, "Minimum", StringComparison.InvariantCultureIgnoreCase)) return MetricAggregationType.Minimum;
            if (string.Equals(value, "None", StringComparison.InvariantCultureIgnoreCase)) return MetricAggregationType.None;
            if (string.Equals(value, "Total", StringComparison.InvariantCultureIgnoreCase)) return MetricAggregationType.Total;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown MetricAggregationType value.");
        }
    }
}

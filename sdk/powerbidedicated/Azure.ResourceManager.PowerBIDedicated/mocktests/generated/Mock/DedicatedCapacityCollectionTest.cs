// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Core.TestFramework;
using Azure.ResourceManager.PowerBIDedicated.Tests.Mock;
using Azure.ResourceManager.PowerBIDedicated.Tests.Mock.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.PowerBIDedicated.Tests.Mock.Tests.Mock
{
    /// <summary> Test for DedicatedCapacity. </summary>
    public partial class DedicatedCapacityCollectionMockTests : MockTestBase
    {
        public DedicatedCapacityCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: Create capacity
            string dedicatedCapacityName = "azsdktest";
            PowerBIDedicated.Tests.Mock.DedicatedCapacityData capacityParameters = new PowerBIDedicated.Tests.Mock.DedicatedCapacityData(location: "West US", sku: new PowerBIDedicated.Tests.Mock.Models.CapacitySku(name: "A1")
            {
                Tier = new PowerBIDedicated.Tests.Mock.Models.CapacitySkuTier("PBIE_Azure"),
            })
            {
                Administration = new PowerBIDedicated.Tests.Mock.Models.DedicatedCapacityAdministrators(),
            };
            capacityParameters.Tags.ReplaceWith(new Dictionary<string, string>()
            {
                ["testKey"] = "testValue",
            });

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/TestRG")).GetDedicatedCapacities();
            await collection.CreateOrUpdateAsync(true, dedicatedCapacityName, capacityParameters);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get details of a capacity
            string dedicatedCapacityName = "azsdktest";

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/TestRG")).GetDedicatedCapacities();
            await collection.GetAsync(dedicatedCapacityName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: List capacities in resource group

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/TestRG")).GetDedicatedCapacities();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

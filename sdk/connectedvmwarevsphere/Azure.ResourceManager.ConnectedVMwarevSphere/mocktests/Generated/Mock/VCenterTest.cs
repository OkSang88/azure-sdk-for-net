// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.ConnectedVMwarevSphere.Models;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.ConnectedVMwarevSphere.Tests.Mock
{
    /// <summary> Test for VCenter. </summary>
    public partial class VCenterMockTests : MockTestBase
    {
        public VCenterMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: GetVCenter
            var vCenter = GetArmClient().GetVCenter(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testrg/providers/Microsoft.ConnectedVMwarevSphere/vcenters/ContosoVCenter"));

            await vCenter.GetAsync();
        }

        [RecordedTest]
        public async Task DeleteAsync()
        {
            // Example: DeleteVCenter
            var vCenter = GetArmClient().GetVCenter(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testrg/providers/Microsoft.ConnectedVMwarevSphere/vcenters/ContosoVCenter"));
            bool? force = null;

            await vCenter.DeleteAsync(force);
        }

        [RecordedTest]
        public async Task UpdateAsync()
        {
            // Example: UpdateVCenter
            var vCenter = GetArmClient().GetVCenter(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testrg/providers/Microsoft.ConnectedVMwarevSphere/vcenters/ContosoVCenter"));
            ConnectedVMwarevSphere.Models.ResourcePatch body = new ConnectedVMwarevSphere.Models.ResourcePatch();

            await vCenter.UpdateAsync(body);
        }
    }
}

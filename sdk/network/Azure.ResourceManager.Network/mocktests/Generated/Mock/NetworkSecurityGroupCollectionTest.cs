// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Network;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Network.Tests.Mock
{
    /// <summary> Test for NetworkSecurityGroup. </summary>
    public partial class NetworkSecurityGroupCollectionMockTests : MockTestBase
    {
        public NetworkSecurityGroupCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: Create network security group
            string networkSecurityGroupName = "testnsg";
            Network.NetworkSecurityGroupData parameters = new Network.NetworkSecurityGroupData()
            {
                Location = "eastus",
            };

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1")).GetNetworkSecurityGroups();
            await collection.CreateOrUpdateAsync(networkSecurityGroupName, parameters);
        }

        [RecordedTest]
        public async Task CreateOrUpdate2()
        {
            // Example: Create network security group with rule
            string networkSecurityGroupName = "testnsg";
            Network.NetworkSecurityGroupData parameters = new Network.NetworkSecurityGroupData()
            {
                Location = "eastus",
            };

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1")).GetNetworkSecurityGroups();
            await collection.CreateOrUpdateAsync(networkSecurityGroupName, parameters);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get network security group
            string networkSecurityGroupName = "testnsg";
            string expand = null;

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1")).GetNetworkSecurityGroups();
            await collection.GetAsync(networkSecurityGroupName, expand);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: List network security groups in resource group

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1")).GetNetworkSecurityGroups();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

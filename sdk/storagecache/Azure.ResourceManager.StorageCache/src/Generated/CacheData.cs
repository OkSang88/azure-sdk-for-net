// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.StorageCache.Models;

namespace Azure.ResourceManager.StorageCache
{
    /// <summary> A class representing the Cache data model. </summary>
    public partial class CacheData : TrackedResource
    {
        /// <summary> Initializes a new instance of CacheData. </summary>
        /// <param name="location"> The location. </param>
        public CacheData(AzureLocation location) : base(location)
        {
            MountAddresses = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of CacheData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="type"> The type. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="identity"> The identity of the cache, if configured. </param>
        /// <param name="systemData"> The system meta data relating to this resource. </param>
        /// <param name="sku"> SKU for the Cache. </param>
        /// <param name="cacheSizeGB"> The size of this Cache, in GB. </param>
        /// <param name="health"> Health of the Cache. </param>
        /// <param name="mountAddresses"> Array of IP addresses that can be used by clients mounting this Cache. </param>
        /// <param name="provisioningState"> ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property. </param>
        /// <param name="subnet"> Subnet used for the Cache. </param>
        /// <param name="upgradeStatus"> Upgrade status of the Cache. </param>
        /// <param name="networkSettings"> Specifies network settings of the cache. </param>
        /// <param name="encryptionSettings"> Specifies encryption settings of the cache. </param>
        /// <param name="securitySettings"> Specifies security settings of the cache. </param>
        /// <param name="directoryServicesSettings"> Specifies Directory Services settings of the cache. </param>
        internal CacheData(ResourceIdentifier id, string name, ResourceType type, IDictionary<string, string> tags, AzureLocation location, CacheIdentity identity, SystemData systemData, CacheSku sku, int? cacheSizeGB, CacheHealth health, IReadOnlyList<string> mountAddresses, ProvisioningStateType? provisioningState, string subnet, CacheUpgradeStatus upgradeStatus, CacheNetworkSettings networkSettings, CacheEncryptionSettings encryptionSettings, CacheSecuritySettings securitySettings, CacheDirectorySettings directoryServicesSettings) : base(id, name, type, tags, location)
        {
            Identity = identity;
            SystemData = systemData;
            Sku = sku;
            CacheSizeGB = cacheSizeGB;
            Health = health;
            MountAddresses = mountAddresses;
            ProvisioningState = provisioningState;
            Subnet = subnet;
            UpgradeStatus = upgradeStatus;
            NetworkSettings = networkSettings;
            EncryptionSettings = encryptionSettings;
            SecuritySettings = securitySettings;
            DirectoryServicesSettings = directoryServicesSettings;
        }

        /// <summary> The identity of the cache, if configured. </summary>
        public CacheIdentity Identity { get; set; }
        /// <summary> The system meta data relating to this resource. </summary>
        public SystemData SystemData { get; }
        /// <summary> SKU for the Cache. </summary>
        public CacheSku Sku { get; set; }
        /// <summary> The size of this Cache, in GB. </summary>
        public int? CacheSizeGB { get; set; }
        /// <summary> Health of the Cache. </summary>
        public CacheHealth Health { get; }
        /// <summary> Array of IP addresses that can be used by clients mounting this Cache. </summary>
        public IReadOnlyList<string> MountAddresses { get; }
        /// <summary> ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property. </summary>
        public ProvisioningStateType? ProvisioningState { get; }
        /// <summary> Subnet used for the Cache. </summary>
        public string Subnet { get; set; }
        /// <summary> Upgrade status of the Cache. </summary>
        public CacheUpgradeStatus UpgradeStatus { get; }
        /// <summary> Specifies network settings of the cache. </summary>
        public CacheNetworkSettings NetworkSettings { get; set; }
        /// <summary> Specifies encryption settings of the cache. </summary>
        public CacheEncryptionSettings EncryptionSettings { get; set; }
        /// <summary> Specifies security settings of the cache. </summary>
        public CacheSecuritySettings SecuritySettings { get; set; }
        /// <summary> Specifies Directory Services settings of the cache. </summary>
        public CacheDirectorySettings DirectoryServicesSettings { get; set; }
    }
}

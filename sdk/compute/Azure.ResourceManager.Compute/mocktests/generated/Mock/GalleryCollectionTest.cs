// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Compute;
using Azure.ResourceManager.Compute.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Compute.Tests.Mock
{
    /// <summary> Test for Gallery. </summary>
    public partial class GalleryCollectionMockTests : MockTestBase
    {
        public GalleryCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: Create or update a simple gallery with sharing profile.
            string galleryName = "myGalleryName";
            Compute.GalleryData gallery = new Compute.GalleryData(location: "West US")
            {
                Description = "This is the gallery description.",
                SharingProfile = new Compute.Models.SharingProfile()
                {
                    Permissions = new Compute.Models.GallerySharingPermissionTypes("Groups"),
                },
            };

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup")).GetGalleries();
            await collection.CreateOrUpdateAsync(true, galleryName, gallery);
        }

        [RecordedTest]
        public async Task CreateOrUpdate2()
        {
            // Example: Create or update a simple gallery with soft deletion enabled.
            string galleryName = "myGalleryName";
            Compute.GalleryData gallery = new Compute.GalleryData(location: "West US")
            {
                Description = "This is the gallery description.",
                SoftDeletePolicy = new Compute.Models.SoftDeletePolicy()
                {
                    IsSoftDeleteEnabled = true,
                },
            };

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup")).GetGalleries();
            await collection.CreateOrUpdateAsync(true, galleryName, gallery);
        }

        [RecordedTest]
        public async Task CreateOrUpdate3()
        {
            // Example: Create or update a simple gallery.
            string galleryName = "myGalleryName";
            Compute.GalleryData gallery = new Compute.GalleryData(location: "West US")
            {
                Description = "This is the gallery description.",
            };

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup")).GetGalleries();
            await collection.CreateOrUpdateAsync(true, galleryName, gallery);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get a gallery with select permissions.
            string galleryName = "myGalleryName";
            Compute.Models.SelectPermissions? select = new Compute.Models.SelectPermissions("Permissions");

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup")).GetGalleries();
            await collection.GetAsync(galleryName, select);
        }

        [RecordedTest]
        public async Task Get2()
        {
            // Example: Get a gallery.
            string galleryName = "myGalleryName";
            Compute.Models.SelectPermissions? select = null;

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup")).GetGalleries();
            await collection.GetAsync(galleryName, select);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: List galleries in a resource group.

            var collection = GetArmClient().GetResourceGroup(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup")).GetGalleries();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

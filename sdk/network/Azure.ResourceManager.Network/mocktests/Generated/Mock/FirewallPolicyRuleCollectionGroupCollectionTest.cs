// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.Network;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Network.Tests.Mock
{
    /// <summary> Test for FirewallPolicyRuleCollectionGroup. </summary>
    public partial class FirewallPolicyRuleCollectionGroupCollectionMockTests : MockTestBase
    {
        public FirewallPolicyRuleCollectionGroupCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: Create FirewallPolicyNatRuleCollectionGroup
            string ruleCollectionGroupName = "ruleCollectionGroup1";
            Network.FirewallPolicyRuleCollectionGroupData parameters = new Network.FirewallPolicyRuleCollectionGroupData()
            {
                Priority = 100,
            };

            var firewallPolicyId = Network.FirewallPolicy.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "firewallPolicy");
            var collection = GetArmClient().GetFirewallPolicy(firewallPolicyId).GetFirewallPolicyRuleCollectionGroups();
            await collection.CreateOrUpdateAsync(ruleCollectionGroupName, parameters);
        }

        [RecordedTest]
        public async Task CreateOrUpdate2()
        {
            // Example: Create FirewallPolicyRuleCollectionGroup
            string ruleCollectionGroupName = "ruleCollectionGroup1";
            Network.FirewallPolicyRuleCollectionGroupData parameters = new Network.FirewallPolicyRuleCollectionGroupData()
            {
                Priority = 100,
            };

            var firewallPolicyId = Network.FirewallPolicy.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "firewallPolicy");
            var collection = GetArmClient().GetFirewallPolicy(firewallPolicyId).GetFirewallPolicyRuleCollectionGroups();
            await collection.CreateOrUpdateAsync(ruleCollectionGroupName, parameters);
        }

        [RecordedTest]
        public async Task CreateOrUpdate3()
        {
            // Example: Create FirewallPolicyRuleCollectionGroup With IpGroups
            string ruleCollectionGroupName = "ruleCollectionGroup1";
            Network.FirewallPolicyRuleCollectionGroupData parameters = new Network.FirewallPolicyRuleCollectionGroupData()
            {
                Priority = 110,
            };

            var firewallPolicyId = Network.FirewallPolicy.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "firewallPolicy");
            var collection = GetArmClient().GetFirewallPolicy(firewallPolicyId).GetFirewallPolicyRuleCollectionGroups();
            await collection.CreateOrUpdateAsync(ruleCollectionGroupName, parameters);
        }

        [RecordedTest]
        public async Task CreateOrUpdate4()
        {
            // Example: Create FirewallPolicyRuleCollectionGroup With Web Categories
            string ruleCollectionGroupName = "ruleCollectionGroup1";
            Network.FirewallPolicyRuleCollectionGroupData parameters = new Network.FirewallPolicyRuleCollectionGroupData()
            {
                Priority = 110,
            };

            var firewallPolicyId = Network.FirewallPolicy.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "firewallPolicy");
            var collection = GetArmClient().GetFirewallPolicy(firewallPolicyId).GetFirewallPolicyRuleCollectionGroups();
            await collection.CreateOrUpdateAsync(ruleCollectionGroupName, parameters);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Get FirewallPolicyNatRuleCollectionGroup
            string ruleCollectionGroupName = "ruleCollectionGroup1";

            var firewallPolicyId = Network.FirewallPolicy.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "firewallPolicy");
            var collection = GetArmClient().GetFirewallPolicy(firewallPolicyId).GetFirewallPolicyRuleCollectionGroups();
            await collection.GetAsync(ruleCollectionGroupName);
        }

        [RecordedTest]
        public async Task Get2()
        {
            // Example: Get FirewallPolicyRuleCollectionGroup
            string ruleCollectionGroupName = "ruleCollectionGroup1";

            var firewallPolicyId = Network.FirewallPolicy.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "firewallPolicy");
            var collection = GetArmClient().GetFirewallPolicy(firewallPolicyId).GetFirewallPolicyRuleCollectionGroups();
            await collection.GetAsync(ruleCollectionGroupName);
        }

        [RecordedTest]
        public async Task Get3()
        {
            // Example: Get FirewallPolicyRuleCollectionGroup With IpGroups
            string ruleCollectionGroupName = "ruleGroup1";

            var firewallPolicyId = Network.FirewallPolicy.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "firewallPolicy");
            var collection = GetArmClient().GetFirewallPolicy(firewallPolicyId).GetFirewallPolicyRuleCollectionGroups();
            await collection.GetAsync(ruleCollectionGroupName);
        }

        [RecordedTest]
        public async Task Get4()
        {
            // Example: Get FirewallPolicyRuleCollectionGroup With Web Categories
            string ruleCollectionGroupName = "ruleCollectionGroup1";

            var firewallPolicyId = Network.FirewallPolicy.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "firewallPolicy");
            var collection = GetArmClient().GetFirewallPolicy(firewallPolicyId).GetFirewallPolicyRuleCollectionGroups();
            await collection.GetAsync(ruleCollectionGroupName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: List all FirewallPolicyRuleCollectionGroup With Web Categories

            var firewallPolicyId = Network.FirewallPolicy.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "firewallPolicy");
            var collection = GetArmClient().GetFirewallPolicy(firewallPolicyId).GetFirewallPolicyRuleCollectionGroups();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }

        [RecordedTest]
        public async Task GetAll2()
        {
            // Example: List all FirewallPolicyRuleCollectionGroups for a given FirewallPolicy

            var firewallPolicyId = Network.FirewallPolicy.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "firewallPolicy");
            var collection = GetArmClient().GetFirewallPolicy(firewallPolicyId).GetFirewallPolicyRuleCollectionGroups();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }

        [RecordedTest]
        public async Task GetAll3()
        {
            // Example: List all FirewallPolicyRuleCollectionGroups with IpGroups for a given FirewallPolicy

            var firewallPolicyId = Network.FirewallPolicy.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "rg1", "firewallPolicy");
            var collection = GetArmClient().GetFirewallPolicy(firewallPolicyId).GetFirewallPolicyRuleCollectionGroups();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

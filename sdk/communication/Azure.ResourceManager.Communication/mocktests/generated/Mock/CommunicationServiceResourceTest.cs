// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;
using Communication;
using Communication.Models;

namespace Communication.Tests.Mock
{
    /// <summary> Test for CommunicationServiceResource. </summary>
    public partial class CommunicationServiceResourceMockTests : MockTestBase
    {
        public CommunicationServiceResourceMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: Get resource
            var communicationServiceResource = GetArmClient().GetCommunicationServiceResource(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/MyResourceGroup/providers/Microsoft.Communication/communicationServices/MyCommunicationResource"));

            await communicationServiceResource.GetAsync();
        }

        [RecordedTest]
        public async Task DeleteAsync()
        {
            // Example: Delete resource
            var communicationServiceResource = GetArmClient().GetCommunicationServiceResource(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/MyResourceGroup/providers/Microsoft.Communication/communicationServices/MyCommunicationResource"));

            await communicationServiceResource.DeleteAsync();
        }

        [RecordedTest]
        public async Task UpdateAsync()
        {
            // Example: Update resource
            var communicationServiceResource = GetArmClient().GetCommunicationServiceResource(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/MyResourceGroup/providers/Microsoft.Communication/communicationServices/MyCommunicationResource"));
            Communication.CommunicationServiceResourceData parameters = new Communication.CommunicationServiceResourceData();

            await communicationServiceResource.UpdateAsync(parameters);
        }

        [RecordedTest]
        public async Task LinkNotificationHubAsync()
        {
            // Example: Link notification hub
            var communicationServiceResource = GetArmClient().GetCommunicationServiceResource(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/MyResourceGroup/providers/Microsoft.Communication/communicationServices/MyCommunicationResource"));
            Communication.Models.LinkNotificationHubParameters linkNotificationHubParameters = new Communication.Models.LinkNotificationHubParameters(resourceId: "/subscriptions/12345/resourceGroups/MyOtherResourceGroup/providers/Microsoft.NotificationHubs/namespaces/MyNamespace/notificationHubs/MyHub", connectionString: "Endpoint=sb://MyNamespace.servicebus.windows.net/;SharedAccessKey=abcd1234");

            await communicationServiceResource.LinkNotificationHubAsync(linkNotificationHubParameters);
        }

        [RecordedTest]
        public async Task GetKeysAsync()
        {
            // Example: List keys
            var communicationServiceResource = GetArmClient().GetCommunicationServiceResource(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/MyResourceGroup/providers/Microsoft.Communication/communicationServices/MyCommunicationResource"));

            await communicationServiceResource.GetKeysAsync();
        }

        [RecordedTest]
        public async Task RegenerateKeyAsync()
        {
            // Example: Regenerate key
            var communicationServiceResource = GetArmClient().GetCommunicationServiceResource(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/MyResourceGroup/providers/Microsoft.Communication/communicationServices/MyCommunicationResource"));
            Communication.Models.RegenerateKeyParameters parameters = new Communication.Models.RegenerateKeyParameters()
            {
                KeyType = Communication.Models.KeyType.Primary,
            };

            await communicationServiceResource.RegenerateKeyAsync(parameters);
        }
    }
}

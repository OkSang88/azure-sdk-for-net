// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.DataFactory.Tests.Mock;
using Azure.ResourceManager.DataFactory.Tests.Mock.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.DataFactory.Tests.Mock.Tests.Mock
{
    /// <summary> Test for ManagedVirtualNetworkResource. </summary>
    public partial class ManagedVirtualNetworkResourceCollectionMockTests : MockTestBase
    {
        public ManagedVirtualNetworkResourceCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: ManagedVirtualNetworks_Create
            string managedVirtualNetworkName = "exampleManagedVirtualNetworkName";
            DataFactory.Tests.Mock.ManagedVirtualNetworkResourceData managedVirtualNetwork = new DataFactory.Tests.Mock.ManagedVirtualNetworkResourceData(properties: new DataFactory.Tests.Mock.Models.ManagedVirtualNetwork());
            string ifMatch = null;

            var factoryId = DataFactory.Tests.Mock.Factory.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "exampleResourceGroup", "exampleFactoryName");
            var collection = GetArmClient().GetFactory(factoryId).GetManagedVirtualNetworkResources();
            await collection.CreateOrUpdateAsync(true, managedVirtualNetworkName, managedVirtualNetwork, ifMatch);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: ManagedVirtualNetworks_Get
            string managedVirtualNetworkName = "exampleManagedVirtualNetworkName";
            string ifNoneMatch = null;

            var factoryId = DataFactory.Tests.Mock.Factory.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "exampleResourceGroup", "exampleFactoryName");
            var collection = GetArmClient().GetFactory(factoryId).GetManagedVirtualNetworkResources();
            await collection.GetAsync(managedVirtualNetworkName, ifNoneMatch);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: ManagedVirtualNetworks_ListByFactory

            var factoryId = DataFactory.Tests.Mock.Factory.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "exampleResourceGroup", "exampleFactoryName");
            var collection = GetArmClient().GetFactory(factoryId).GetManagedVirtualNetworkResources();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.Network.Models;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.Network.Tests.Mock
{
    /// <summary> Test for ExpressRoutePort. </summary>
    public partial class ExpressRoutePortMockTests : MockTestBase
    {
        public ExpressRoutePortMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task GetAsync()
        {
            // Example: ExpressRoutePortGet
            var expressRoutePort = GetArmClient().GetExpressRoutePort(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Network/ExpressRoutePorts/portName"));

            await expressRoutePort.GetAsync();
        }

        [RecordedTest]
        public async Task DeleteAsync()
        {
            // Example: ExpressRoutePortDelete
            var expressRoutePort = GetArmClient().GetExpressRoutePort(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Network/ExpressRoutePorts/portName"));

            await expressRoutePort.DeleteAsync();
        }

        [RecordedTest]
        public async Task UpdateAsync()
        {
            // Example: ExpressRoutePortUpdateTags
            var expressRoutePort = GetArmClient().GetExpressRoutePort(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Network/ExpressRoutePorts/portName"));
            Network.Models.TagsObject parameters = new Network.Models.TagsObject();

            await expressRoutePort.UpdateAsync(parameters);
        }

        [RecordedTest]
        public async Task GenerateLOAAsync()
        {
            // Example: GenerateExpressRoutePortLOA
            var expressRoutePort = GetArmClient().GetExpressRoutePort(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName"));
            Network.Models.GenerateExpressRoutePortsLOARequest request = new Network.Models.GenerateExpressRoutePortsLOARequest(customerName: "customerName");

            await expressRoutePort.GenerateLOAAsync(request);
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;
using Azure.ResourceManager.WebPubSub;

namespace Azure.ResourceManager.WebPubSub.Tests.Mock
{
    /// <summary> Test for SharedPrivateLink. </summary>
    public partial class SharedPrivateLinkCollectionMockTests : MockTestBase
    {
        public SharedPrivateLinkCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: WebPubSubSharedPrivateLinkResources_CreateOrUpdate
            string sharedPrivateLinkName = null; /* Can't find this parameter in example, please provide value here!*/
            WebPubSub.SharedPrivateLinkData parameters = new WebPubSub.SharedPrivateLinkData()
            {
                GroupId = "sites",
                PrivateLinkResourceId = "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/Microsoft.Web/sites/myWebApp",
                RequestMessage = "Please approve",
            };

            var webPubSubId = WebPubSub.WebPubSub.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myWebPubSubService");
            var collection = GetArmClient().GetWebPubSub(webPubSubId).GetSharedPrivateLinks();
            await collection.CreateOrUpdateAsync(true, sharedPrivateLinkName, parameters);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: WebPubSubSharedPrivateLinkResources_Get
            string sharedPrivateLinkName = null; /* Can't find this parameter in example, please provide value here!*/

            var webPubSubId = WebPubSub.WebPubSub.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myWebPubSubService");
            var collection = GetArmClient().GetWebPubSub(webPubSubId).GetSharedPrivateLinks();
            await collection.GetAsync(sharedPrivateLinkName);
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: WebPubSubSharedPrivateLinkResources_List

            var webPubSubId = WebPubSub.WebPubSub.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myWebPubSubService");
            var collection = GetArmClient().GetWebPubSub(webPubSubId).GetSharedPrivateLinks();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

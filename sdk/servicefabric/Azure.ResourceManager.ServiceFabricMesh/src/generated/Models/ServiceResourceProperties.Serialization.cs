// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace ServiceFabricMeshManagementClient.Models
{
    public partial class ServiceResourceProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("osType");
            writer.WriteStringValue(OsType.ToString());
            writer.WritePropertyName("codePackages");
            writer.WriteStartArray();
            foreach (var item in CodePackages)
            {
                writer.WriteObjectValue(item);
            }
            writer.WriteEndArray();
            if (Optional.IsCollectionDefined(NetworkRefs))
            {
                writer.WritePropertyName("networkRefs");
                writer.WriteStartArray();
                foreach (var item in NetworkRefs)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(Diagnostics))
            {
                writer.WritePropertyName("diagnostics");
                writer.WriteObjectValue(Diagnostics);
            }
            if (Optional.IsDefined(Description))
            {
                writer.WritePropertyName("description");
                writer.WriteStringValue(Description);
            }
            if (Optional.IsDefined(ReplicaCount))
            {
                writer.WritePropertyName("replicaCount");
                writer.WriteNumberValue(ReplicaCount.Value);
            }
            if (Optional.IsCollectionDefined(AutoScalingPolicies))
            {
                writer.WritePropertyName("autoScalingPolicies");
                writer.WriteStartArray();
                foreach (var item in AutoScalingPolicies)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static ServiceResourceProperties DeserializeServiceResourceProperties(JsonElement element)
        {
            OperatingSystemType osType = default;
            IList<ContainerCodePackageProperties> codePackages = default;
            Optional<IList<NetworkRef>> networkRefs = default;
            Optional<DiagnosticsRef> diagnostics = default;
            Optional<string> description = default;
            Optional<int> replicaCount = default;
            Optional<IList<AutoScalingPolicy>> autoScalingPolicies = default;
            Optional<ResourceStatus> status = default;
            Optional<string> statusDetails = default;
            Optional<HealthState> healthState = default;
            Optional<string> unhealthyEvaluation = default;
            Optional<string> provisioningState = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("osType"))
                {
                    osType = new OperatingSystemType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("codePackages"))
                {
                    List<ContainerCodePackageProperties> array = new List<ContainerCodePackageProperties>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ContainerCodePackageProperties.DeserializeContainerCodePackageProperties(item));
                    }
                    codePackages = array;
                    continue;
                }
                if (property.NameEquals("networkRefs"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<NetworkRef> array = new List<NetworkRef>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(NetworkRef.DeserializeNetworkRef(item));
                    }
                    networkRefs = array;
                    continue;
                }
                if (property.NameEquals("diagnostics"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    diagnostics = DiagnosticsRef.DeserializeDiagnosticsRef(property.Value);
                    continue;
                }
                if (property.NameEquals("description"))
                {
                    description = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("replicaCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    replicaCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("autoScalingPolicies"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<AutoScalingPolicy> array = new List<AutoScalingPolicy>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(AutoScalingPolicy.DeserializeAutoScalingPolicy(item));
                    }
                    autoScalingPolicies = array;
                    continue;
                }
                if (property.NameEquals("status"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    status = new ResourceStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("statusDetails"))
                {
                    statusDetails = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("healthState"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    healthState = new HealthState(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("unhealthyEvaluation"))
                {
                    unhealthyEvaluation = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("provisioningState"))
                {
                    provisioningState = property.Value.GetString();
                    continue;
                }
            }
            return new ServiceResourceProperties(provisioningState.Value, osType, codePackages, Optional.ToList(networkRefs), diagnostics.Value, description.Value, Optional.ToNullable(replicaCount), Optional.ToList(autoScalingPolicies), Optional.ToNullable(status), statusDetails.Value, Optional.ToNullable(healthState), unhealthyEvaluation.Value);
        }
    }
}

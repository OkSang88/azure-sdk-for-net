// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager;
using Azure.ResourceManager.AppService.Models;
using Azure.ResourceManager.Resources;
using Azure.ResourceManager.Resources.Models;
using Azure.ResourceManager.TestFramework;

namespace Azure.ResourceManager.AppService.Tests.Mock
{
    /// <summary> Test for WebSite. </summary>
    public partial class SiteSlotMockTests : MockTestBase
    {
        public SiteSlotMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public void GetSiteBackupsSlotAsync()
        {
            // Example: List backups
            var siteSlot = GetArmClient().GetSiteSlot(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testrg123/providers/Microsoft.Web/sites/tests346/slots/staging"));

            siteSlot.GetSiteBackupsSlotAsync();
        }

        [RecordedTest]
        public async Task GetNetworkTraceOperationSlotAsync()
        {
            // Example: Get the current status of a network trace operation for a site
            var siteSlot = GetArmClient().GetSiteSlot(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testrg123/providers/Microsoft.Web/sites/SampleApp/slots/Production"));
            string operationId = "c291433b-53ad-4c49-8cae-0a293eae1c6d";

            await siteSlot.GetNetworkTraceOperationSlotAsync(operationId);
        }

        [RecordedTest]
        public async Task StartWebSiteNetworkTraceOperationSlotAsync()
        {
            // Example: Start a new network trace operation for a site
            var siteSlot = GetArmClient().GetSiteSlot(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testrg123/providers/Microsoft.Web/sites/SampleApp/slots/Production"));
            int? durationInSeconds = 60;
            int? maxFrameLength = null;
            string sasUrl = null;

            await siteSlot.StartWebSiteNetworkTraceOperationSlotAsync(durationInSeconds, maxFrameLength, sasUrl);
        }

        [RecordedTest]
        public async Task StopWebSiteNetworkTraceSlotAsync()
        {
            // Example: Stop a currently running network trace operation for a site
            var siteSlot = GetArmClient().GetSiteSlot(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testrg123/providers/Microsoft.Web/sites/SampleApp/slots/Production"));

            await siteSlot.StopWebSiteNetworkTraceSlotAsync();
        }

        [RecordedTest]
        public async Task GetNetworkTracesSlotAsync()
        {
            // Example: Get NetworkTraces for a site
            var siteSlot = GetArmClient().GetSiteSlot(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testrg123/providers/Microsoft.Web/sites/SampleApp/slots/Production"));
            string operationId = "c291433b-53ad-4c49-8cae-0a293eae1c6d";

            await siteSlot.GetNetworkTracesSlotAsync(operationId);
        }

        [RecordedTest]
        public async Task GetNetworkTraceOperationSlotV2Async()
        {
            // Example: Get the current status of a network trace operation for a site
            var siteSlot = GetArmClient().GetSiteSlot(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testrg123/providers/Microsoft.Web/sites/SampleApp/slots/Production"));
            string operationId = "c291433b-53ad-4c49-8cae-0a293eae1c6d";

            await siteSlot.GetNetworkTraceOperationSlotV2Async(operationId);
        }

        [RecordedTest]
        public async Task GetNetworkTracesSlotV2Async()
        {
            // Example: Get NetworkTraces for a site
            var siteSlot = GetArmClient().GetSiteSlot(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testrg123/providers/Microsoft.Web/sites/SampleApp/slots/Production"));
            string operationId = "c291433b-53ad-4c49-8cae-0a293eae1c6d";

            await siteSlot.GetNetworkTracesSlotV2Async(operationId);
        }

        [RecordedTest]
        public async Task GetPrivateLinkResourcesSlotAsync()
        {
            // Example: Get private link resources of a site
            var siteSlot = GetArmClient().GetSiteSlot(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg/providers/Microsoft.Web/sites/testSite/slots/stage"));

            await siteSlot.GetPrivateLinkResourcesSlotAsync();
        }

        [RecordedTest]
        public async Task StartNetworkTraceSlotAsync()
        {
            // Example: Start a new network trace operation for a site
            var siteSlot = GetArmClient().GetSiteSlot(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testrg123/providers/Microsoft.Web/sites/SampleApp/slots/Production"));
            int? durationInSeconds = 60;
            int? maxFrameLength = null;
            string sasUrl = null;

            await siteSlot.StartNetworkTraceSlotAsync(durationInSeconds, maxFrameLength, sasUrl);
        }

        [RecordedTest]
        public async Task StopNetworkTraceSlotAsync()
        {
            // Example: Stop a currently running network trace operation for a site
            var siteSlot = GetArmClient().GetSiteSlot(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testrg123/providers/Microsoft.Web/sites/SampleApp/slots/Production"));

            await siteSlot.StopNetworkTraceSlotAsync();
        }

        [RecordedTest]
        public async Task SiteSlotResourceHealthMetadataGetAsync()
        {
            // Example: Get ResourceHealthMetadata
            var siteSlotResourceHealthMetadata = GetArmClient().GetSiteSlotResourceHealthMetadata(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/Default-Web-NorthCentralUS/providers/Microsoft.Web/sites/newsiteinnewASE-NCUS/slots/Production/resourceHealthMetadata/default"));

            await siteSlotResourceHealthMetadata.GetAsync();
        }

        [RecordedTest]
        public async Task SiteSlotBasicPublishingCredentialsPolicyFtpGetAsync()
        {
            // Example: Get FTP Allowed
            var siteSlotBasicPublishingCredentialsPolicyFtp = GetArmClient().GetSiteSlotBasicPublishingCredentialsPolicyFtp(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg/providers/Microsoft.Web/sites/testSite/slots/stage/basicPublishingCredentialsPolicies/ftp"));

            await siteSlotBasicPublishingCredentialsPolicyFtp.GetAsync();
        }

        [RecordedTest]
        public async Task SiteSlotBasicPublishingCredentialsPolicyScmGetAsync()
        {
            // Example: Get SCM Allowed
            var siteSlotBasicPublishingCredentialsPolicyScm = GetArmClient().GetSiteSlotBasicPublishingCredentialsPolicyScm(new ResourceIdentifier("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg/providers/Microsoft.Web/sites/testSite/slots/stage/basicPublishingCredentialsPolicies/scm"));

            await siteSlotBasicPublishingCredentialsPolicyScm.GetAsync();
        }
    }
}

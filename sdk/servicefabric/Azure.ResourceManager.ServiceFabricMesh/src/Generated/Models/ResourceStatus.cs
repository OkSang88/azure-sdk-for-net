// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.ServiceFabricMesh.Models
{
    /// <summary> Status of the resource. </summary>
    public readonly partial struct ResourceStatus : IEquatable<ResourceStatus>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="ResourceStatus"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ResourceStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string UnknownValue = "Unknown";
        private const string ReadyValue = "Ready";
        private const string UpgradingValue = "Upgrading";
        private const string CreatingValue = "Creating";
        private const string DeletingValue = "Deleting";
        private const string FailedValue = "Failed";

        /// <summary> Indicates the resource status is unknown. The value is zero. </summary>
        public static ResourceStatus Unknown { get; } = new ResourceStatus(UnknownValue);
        /// <summary> Indicates the resource is ready. The value is 1. </summary>
        public static ResourceStatus Ready { get; } = new ResourceStatus(ReadyValue);
        /// <summary> Indicates the resource is upgrading. The value is 2. </summary>
        public static ResourceStatus Upgrading { get; } = new ResourceStatus(UpgradingValue);
        /// <summary> Indicates the resource is being created. The value is 3. </summary>
        public static ResourceStatus Creating { get; } = new ResourceStatus(CreatingValue);
        /// <summary> Indicates the resource is being deleted. The value is 4. </summary>
        public static ResourceStatus Deleting { get; } = new ResourceStatus(DeletingValue);
        /// <summary> Indicates the resource is not functional due to persistent failures. See statusDetails property for more details. The value is 5. </summary>
        public static ResourceStatus Failed { get; } = new ResourceStatus(FailedValue);
        /// <summary> Determines if two <see cref="ResourceStatus"/> values are the same. </summary>
        public static bool operator ==(ResourceStatus left, ResourceStatus right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ResourceStatus"/> values are not the same. </summary>
        public static bool operator !=(ResourceStatus left, ResourceStatus right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="ResourceStatus"/>. </summary>
        public static implicit operator ResourceStatus(string value) => new ResourceStatus(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ResourceStatus other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ResourceStatus other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
